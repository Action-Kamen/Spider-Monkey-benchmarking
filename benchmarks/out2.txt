found tag: all
[Codegen] # Emitting bailout tail stub
[Codegen] # BEGIN creators: JitRuntime::generateBailoutTailStub
[Codegen] .set .Llabel0, .
[Codegen] testb      $0xff, %al
[Codegen] je         .Lfrom8
[Codegen] .set .Llabel8, .
[Codegen] movq       0x0(%r9), %rax
[Codegen] cmpq       %rax, %rsp
[Codegen] je         .Lfrom20
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel38, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel47, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel56, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel65, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel74, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel83, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel92, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel101, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel107, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel113, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel119, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel125, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel131, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel137, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel143, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edaca616f, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom183
[Codegen] .set .Llabel183, .
[Codegen] int3
[Codegen] .set .Llabel184, .
[Codegen] .set .Lfrom183, .Llabel184
[Codegen] call       .Lfrom189
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel194, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel203, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel212, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel221, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel230, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel239, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel248, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel257, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel263, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel269, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel275, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel281, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel287, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel293, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel299, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel323, .
[Codegen] .set .Lfrom20, .Llabel323
[Codegen] .set .Llabel323, .
[Codegen] movq       0x8(%r9), %rcx
[Codegen] .set .Llabel327, .
[Codegen] movq       0x10(%r9), %rdx
[Codegen] .set .Llabel331, .
[Codegen] cmpq       %rdx, %rcx
[Codegen] jbe        .Lfrom340
[Codegen] subq       $8, %rcx
[Codegen] subq       $8, %rsp
[Codegen] .set .Llabel348, .
[Codegen] movq       0x0(%rcx), %rax
[Codegen] .set .Llabel351, .
[Codegen] movq       %rax, 0x0(%rsp)
[Codegen] jmp        .Llabel331
[Codegen] .set .Llabel357, .
[Codegen] .set .Lfrom340, .Llabel357
[Codegen] .set .Llabel357, .
[Codegen] movq       0x18(%r9), %rbp
[Codegen] push       $0x1
[Codegen] push       0x20(%r9)
[Codegen] push       %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdx
[Codegen] .set .Llabel378, .
[Codegen] movq       0x140(%rdx), %rdx
[Codegen] .set .Llabel385, .
[Codegen] movq       %rsp, 0x70(%rdx)
[Codegen] push       $0xc
[Codegen] push       0x20(%r9)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %r9, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom420
[Codegen] .set .Llabel420, .
[Codegen] int3
[Codegen] .set .Llabel421, .
[Codegen] .set .Lfrom420, .Llabel421
[Codegen] call       .Lfrom426
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] testb      $0xff, %al
[Codegen] je         .Lfrom439
[Codegen] pop        %rax
[Codegen] addq       $32, %rsp
[Codegen] jmp        *%rax
[Codegen] .set .Llabel446, .
[Codegen] .set .Lfrom8, .Llabel446
[Codegen] movabsq    $0x75bb8e73a200, %rdx
[Codegen] .set .Llabel456, .
[Codegen] movq       0x140(%rdx), %rdx
[Codegen] .set .Llabel463, .
[Codegen] movq       %rsp, 0x70(%rdx)
[Codegen] push       $0x9
[Codegen] jmp        .Lfrom474
[Codegen] # END   creators: JitRuntime::generateBailoutTailStub
[Codegen] # Emitting bailout handler
[Codegen] # BEGIN creators: JitRuntime::generateBailoutHandler
[Codegen] # BEGIN creators: JitRuntime::generateBailoutHandler/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel492, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel501, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel510, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel519, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel528, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel537, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel546, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel555, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel561, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel567, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel573, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel579, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel585, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel591, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel597, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom637
[Codegen] .set .Llabel637, .
[Codegen] int3
[Codegen] .set .Llabel638, .
[Codegen] .set .Lfrom637, .Llabel638
[Codegen] call       .Lfrom643
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel648, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel657, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel666, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel675, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel684, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel693, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel702, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel711, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel717, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel723, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel729, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel735, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel741, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel747, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel753, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel784, .
[Codegen] # END   creators: JitRuntime::generateBailoutHandler/startTrampolineCode
[Codegen] push       %r15
[Codegen] push       %r14
[Codegen] push       %r13
[Codegen] push       %r12
[Codegen] push       %r11
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rbp
[Codegen] push       %rsp
[Codegen] push       %rbx
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $256, %rsp
[Codegen] .set .Llabel815, .
[Codegen] vmovdqu    %xmm15, 0xf0(%rsp)
[Codegen] .set .Llabel824, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel833, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel842, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel851, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel860, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel869, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel878, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel887, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel893, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel899, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel905, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel911, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel917, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel923, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel929, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %r8
[Codegen] subq       $8, %rsp
[Codegen] movq       %rsp, %r9
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %r9, %rsi
[Codegen] movq       %r8, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom972
[Codegen] .set .Llabel972, .
[Codegen] int3
[Codegen] .set .Llabel973, .
[Codegen] .set .Lfrom972, .Llabel973
[Codegen] call       .Lfrom978
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] pop        %r9
[Codegen] movq       %rbp, %rsp
[Codegen] jmp        .Llabel0
[Codegen] # END   creators: JitRuntime::generateBailoutHandler
[Codegen] # Emitting invalidator
[Codegen] # BEGIN creators: JitRuntime::generateInvalidator
[Codegen] # BEGIN creators: JitRuntime::generateInvalidator/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel1011, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel1020, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel1029, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel1038, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel1047, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel1056, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel1065, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel1074, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel1080, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel1086, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel1092, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel1098, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel1104, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel1110, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel1116, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom1156
[Codegen] .set .Llabel1156, .
[Codegen] int3
[Codegen] .set .Llabel1157, .
[Codegen] .set .Lfrom1156, .Llabel1157
[Codegen] call       .Lfrom1162
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel1167, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel1176, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel1185, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel1194, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel1203, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel1212, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel1221, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel1230, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel1236, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel1242, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel1248, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel1254, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel1260, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel1266, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel1272, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel1296, .
[Codegen] # END   creators: JitRuntime::generateInvalidator/startTrampolineCode
[Codegen] push       %r15
[Codegen] push       %r14
[Codegen] push       %r13
[Codegen] push       %r12
[Codegen] push       %r11
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rbp
[Codegen] push       %rsp
[Codegen] push       %rbx
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $256, %rsp
[Codegen] .set .Llabel1327, .
[Codegen] vmovdqu    %xmm15, 0xf0(%rsp)
[Codegen] .set .Llabel1336, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel1345, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel1354, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel1363, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel1372, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel1381, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel1390, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel1399, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel1405, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel1411, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel1417, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel1423, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel1429, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel1435, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel1441, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rsp, %rbx
[Codegen] movq       %rsp, %rdx
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rdx
[Codegen] subq       $8, %rsp
[Codegen] movq       %rbx, %rsi
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom1484
[Codegen] .set .Llabel1484, .
[Codegen] int3
[Codegen] .set .Llabel1485, .
[Codegen] .set .Lfrom1484, .Llabel1485
[Codegen] call       .Lfrom1490
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] pop        %r9
[Codegen] movq       %rbp, %rsp
[Codegen] jmp        .Llabel0
[Codegen] # END   creators: JitRuntime::generateInvalidator
[Codegen] # Emitting arguments rectifier
[Codegen] # BEGIN creators: JitRuntime::generateArgumentsRectifier
[Codegen] # BEGIN creators: JitRuntime::generateArgumentsRectifier/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel1523, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel1532, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel1541, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel1550, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel1559, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel1568, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel1577, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel1586, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel1592, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel1598, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel1604, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel1610, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel1616, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel1622, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel1628, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom1668
[Codegen] .set .Llabel1668, .
[Codegen] int3
[Codegen] .set .Llabel1669, .
[Codegen] .set .Lfrom1668, .Llabel1669
[Codegen] call       .Lfrom1674
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel1679, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel1688, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel1697, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel1706, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel1715, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel1724, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel1733, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel1742, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel1748, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel1754, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel1760, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel1766, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel1772, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel1778, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel1784, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel1808, .
[Codegen] # END   creators: JitRuntime::generateArgumentsRectifier/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] .set .Llabel1812, .
[Codegen] movq       0x10(%rbp), %r8
[Codegen] shrl       $5, %r8d
[Codegen] .set .Llabel1820, .
[Codegen] movq       0x18(%rbp), %rax
[Codegen] movq       %rax, %rcx
[Codegen] andq       $0xfffffffffffffffc, %rcx
[Codegen] .set .Llabel1831, .
[Codegen] movl       0x18(%rcx), %ecx
[Codegen] shrl       $16, %ecx
[Codegen] movq       %rcx, %r11
[Codegen] movq       %rax, %rdx
[Codegen] andq       $0x1, %rdx
[Codegen] addl       $2, %ecx
[Codegen] addl       %edx, %ecx
[Codegen] andl       $0xfffffffe, %ecx
[Codegen] subl       %r8d, %ecx
[Codegen] subl       $1, %ecx
[Codegen] movq       %r8, %rdx
[Codegen] movabsq    $0xfff9800000000000, %r10
[Codegen] .set .Llabel1874, .
[Codegen] push       %r10
[Codegen] subl       $1, %ecx
[Codegen] jne        .Llabel1874
[Codegen] leaq       0x20(%rbp,%r8,8), %rcx
[Codegen] addl       $1, %r8d
[Codegen] .set .Llabel1890, .
[Codegen] push       0x0(%rcx)
[Codegen] subq       $8, %rcx
[Codegen] subl       $1, %r8d
[Codegen] jne        .Llabel1890
[Codegen] testb      $0x1, %al
[Codegen] je         .Lfrom1910
[Codegen] movq       0x28(%rbp,%rdx,8), %r10
[Codegen] movq       %r10, 0x8(%rsp,%r11,8)
[Codegen] .set .Llabel1920, .
[Codegen] .set .Lfrom1910, .Llabel1920
[Codegen] push       %rax
[Codegen] shll       $5, %edx
[Codegen] orl        $0x5, %edx
[Codegen] push       %rdx
[Codegen] andq       $0xfffffffffffffffc, %rax
[Codegen] .set .Llabel1932, .
[Codegen] movq       0x28(%rax), %rax
[Codegen] .set .Llabel1936, .
[Codegen] movq       0x0(%rax), %rax
[Codegen] call       *%rax
[Codegen] .set .Llabel1941, .
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret
[Codegen] # END   creators: JitRuntime::generateArgumentsRectifier
[Codegen] # Emitting trial inlining arguments rectifier
[Codegen] # BEGIN creators: JitRuntime::generateArgumentsRectifier
[Codegen] # BEGIN creators: JitRuntime::generateArgumentsRectifier/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel1964, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel1973, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel1982, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel1991, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel2000, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel2009, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel2018, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel2027, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel2033, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel2039, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel2045, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel2051, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel2057, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel2063, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel2069, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom2109
[Codegen] .set .Llabel2109, .
[Codegen] int3
[Codegen] .set .Llabel2110, .
[Codegen] .set .Lfrom2109, .Llabel2110
[Codegen] call       .Lfrom2115
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel2120, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel2129, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel2138, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel2147, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel2156, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel2165, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel2174, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel2183, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel2189, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel2195, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel2201, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel2207, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel2213, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel2219, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel2225, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel2256, .
[Codegen] # END   creators: JitRuntime::generateArgumentsRectifier/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] .set .Llabel2260, .
[Codegen] movq       0x10(%rbp), %r8
[Codegen] shrl       $5, %r8d
[Codegen] .set .Llabel2268, .
[Codegen] movq       0x18(%rbp), %rax
[Codegen] movq       %rax, %rcx
[Codegen] andq       $0xfffffffffffffffc, %rcx
[Codegen] .set .Llabel2279, .
[Codegen] movl       0x18(%rcx), %ecx
[Codegen] shrl       $16, %ecx
[Codegen] movq       %rcx, %r11
[Codegen] movq       %rax, %rdx
[Codegen] andq       $0x1, %rdx
[Codegen] addl       $2, %ecx
[Codegen] addl       %edx, %ecx
[Codegen] andl       $0xfffffffe, %ecx
[Codegen] subl       %r8d, %ecx
[Codegen] subl       $1, %ecx
[Codegen] movq       %r8, %rdx
[Codegen] movabsq    $0xfff9800000000000, %r10
[Codegen] .set .Llabel2322, .
[Codegen] push       %r10
[Codegen] subl       $1, %ecx
[Codegen] jne        .Llabel2322
[Codegen] leaq       0x20(%rbp,%r8,8), %rcx
[Codegen] addl       $1, %r8d
[Codegen] .set .Llabel2338, .
[Codegen] push       0x0(%rcx)
[Codegen] subq       $8, %rcx
[Codegen] subl       $1, %r8d
[Codegen] jne        .Llabel2338
[Codegen] testb      $0x1, %al
[Codegen] je         .Lfrom2358
[Codegen] movq       0x28(%rbp,%rdx,8), %r10
[Codegen] movq       %r10, 0x8(%rsp,%r11,8)
[Codegen] .set .Llabel2368, .
[Codegen] .set .Lfrom2358, .Llabel2368
[Codegen] push       %rax
[Codegen] shll       $5, %edx
[Codegen] orl        $0x5, %edx
[Codegen] push       %rdx
[Codegen] andq       $0xfffffffffffffffc, %rax
[Codegen] .set .Llabel2380, .
[Codegen] movq       0x28(%rax), %rbx
[Codegen] testq      $0x3, 0x8(%rbx)
[Codegen] jne        .Lfrom2398
[Codegen] testq      $0x3, 0x8(%rbx)
[Codegen] je         .Lfrom2412
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel2430, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel2439, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel2448, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel2457, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel2466, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel2475, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel2484, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel2493, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel2499, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel2505, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel2511, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel2517, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel2523, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel2529, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel2535, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabb5936, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom2575
[Codegen] .set .Llabel2575, .
[Codegen] int3
[Codegen] .set .Llabel2576, .
[Codegen] .set .Lfrom2575, .Llabel2576
[Codegen] call       .Lfrom2581
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel2586, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel2595, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel2604, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel2613, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel2622, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel2631, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel2640, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel2649, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel2655, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel2661, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel2667, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel2673, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel2679, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel2685, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel2691, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel2715, .
[Codegen] .set .Lfrom2412, .Llabel2715
[Codegen] .set .Llabel2715, .
[Codegen] movq       0x8(%rbx), %rbx
[Codegen] .set .Llabel2719, .
[Codegen] movq       0x28(%rbx), %rbx
[Codegen] cmpq       $0x5, %rbx
[Codegen] jbe        .Lfrom2733
[Codegen] .set .Llabel2733, .
[Codegen] movq       0x0(%rbx), %rbx
[Codegen] .set .Llabel2736, .
[Codegen] movq       0x0(%rbx), %rbx
[Codegen] call       *%rbx
[Codegen] .set .Llabel2741, .
[Codegen] jmp        .Lfrom2746
[Codegen] .set .Llabel2746, .
[Codegen] .set .Lfrom2733, .Llabel2746
[Codegen] .set .Lfrom2398, .Llabel2746
[Codegen] .set .Llabel2746, .
[Codegen] movq       0x28(%rax), %rax
[Codegen] .set .Llabel2750, .
[Codegen] movq       0x0(%rax), %rax
[Codegen] call       *%rax
[Codegen] .set .Llabel2755, .
[Codegen] .set .Llabel2755, .
[Codegen] .set .Lfrom2746, .Llabel2755
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret
[Codegen] # END   creators: JitRuntime::generateArgumentsRectifier
[Codegen] # Emitting EnterJIT sequence
[Codegen] # BEGIN creators: JitRuntime::generateEnterJIT
[Codegen] # BEGIN creators: JitRuntime::generateEnterJIT/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel2778, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel2787, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel2796, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel2805, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel2814, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel2823, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel2832, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel2841, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel2847, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel2853, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel2859, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel2865, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel2871, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel2877, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel2883, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom2923
[Codegen] .set .Llabel2923, .
[Codegen] int3
[Codegen] .set .Llabel2924, .
[Codegen] .set .Lfrom2923, .Llabel2924
[Codegen] call       .Lfrom2929
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel2934, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel2943, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel2952, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel2961, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel2970, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel2979, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel2988, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel2997, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel3003, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel3009, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel3015, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel3021, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel3027, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel3033, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel3039, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel3072, .
[Codegen] # END   creators: JitRuntime::generateEnterJIT/startTrampolineCode
[Codegen] testb      $0x8, %spl
[Codegen] je         .Lfrom3082
[Codegen] testb      $0x7, %spl
[Codegen] je         .Lfrom3092
[Codegen] .set .Llabel3092, .
[Codegen] .set .Lfrom3082, .Llabel3092
[Codegen] int3
[Codegen] .set .Llabel3093, .
[Codegen] .set .Lfrom3092, .Llabel3093
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] push       %rbx
[Codegen] push       %r12
[Codegen] push       %r13
[Codegen] push       %r14
[Codegen] push       %r15
[Codegen] push       0x18(%rbp)
[Codegen] movq       %rsi, %r13
[Codegen] testb      $0x1, %r8b
[Codegen] je         .Lfrom3122
[Codegen] addq       $1, %r13
[Codegen] .set .Llabel3126, .
[Codegen] .set .Lfrom3122, .Llabel3126
[Codegen] shll       $3, %r13d
[Codegen] movq       %rsp, %r12
[Codegen] subq       %r13, %r12
[Codegen] andl       $0xf, %r12d
[Codegen] subq       %r12, %rsp
[Codegen] addq       %rdx, %r13
[Codegen] .set .Llabel3146, .
[Codegen] cmpq       %rdx, %r13
[Codegen] jbe        .Lfrom3155
[Codegen] subq       $8, %r13
[Codegen] push       0x0(%r13)
[Codegen] jmp        .Llabel3146
[Codegen] .set .Llabel3165, .
[Codegen] .set .Lfrom3155, .Llabel3165
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] movl       0x0(%rsi), %esi
[Codegen] push       %r8
[Codegen] shll       $5, %esi
[Codegen] orl        $0x3, %esi
[Codegen] push       %rsi
[Codegen] testq      %rcx, %rcx
[Codegen] je         .Lfrom3189
[Codegen] movq       0x10(%rbp), %rdx
[Codegen] movabsq    $0x0, %rax
[Codegen] push       %rax
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] subq       $72, %rsp
[Codegen] movq       %rsp, %rbx
[Codegen] movq       %rdx, %rax
[Codegen] shlq       $3, %rax
[Codegen] .set .Llabel3222, .
[Codegen] subl       $2048, %eax
[Codegen] js         .Lfrom3233
[Codegen] subq       $2048, %rsp
[Codegen] .set .Llabel3240, .
[Codegen] movl       $0x0, 0x0(%rsp)
[Codegen] jmp        .Llabel3222
[Codegen] .set .Llabel3249, .
[Codegen] .set .Lfrom3233, .Llabel3249
[Codegen] movq       %rbx, %rsp
[Codegen] movq       %rsp, %rbx
[Codegen] movq       %rdx, %rsi
[Codegen] shll       $3, %esi
[Codegen] subq       %rsi, %rsp
[Codegen] push       $0x1
[Codegen] push       $0x0
[Codegen] push       %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rax
[Codegen] .set .Llabel3279, .
[Codegen] movq       0x140(%rax), %rax
[Codegen] .set .Llabel3286, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xc
[Codegen] push       %rdi
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rcx, %rsi
[Codegen] movq       %rbx, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom3321
[Codegen] .set .Llabel3321, .
[Codegen] int3
[Codegen] .set .Llabel3322, .
[Codegen] .set .Lfrom3321, .Llabel3322
[Codegen] call       .Lfrom3327
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] pop        %rdi
[Codegen] addq       $32, %rsp
[Codegen] testb      $0xff, %al
[Codegen] je         .Lfrom3345
[Codegen] movabsq    $0x75bb8e7303bc, %r11
[Codegen] cmpl       $0x0, 0x0(%r11)
[Codegen] je         .Lfrom3365
[Codegen] movabsq    $0x75bb8e73a200, %rax
[Codegen] .set .Llabel3375, .
[Codegen] movq       0x150(%rax), %rax
[Codegen] .set .Llabel3382, .
[Codegen] movq       %rbp, 0xe0(%rax)
[Codegen] movq       $0, 0xe8(%rax)
[Codegen] .set .Llabel3400, .
[Codegen] .set .Lfrom3365, .Llabel3400
[Codegen] jmp        *%rdi
[Codegen] .set .Llabel3402, .
[Codegen] .set .Lfrom3345, .Llabel3402
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] addq       $8, %rsp
[Codegen] movabsq    $0xfffa800000000007, %rcx
[Codegen] jmp        .Lfrom3425
[Codegen] .set .Llabel3425, .
[Codegen] .set .Lfrom3189, .Llabel3425
[Codegen] movq       %r9, %rbx
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom3438
[Codegen] .set .Llabel3438, .
[Codegen] int3
[Codegen] .set .Llabel3439, .
[Codegen] .set .Lfrom3438, .Llabel3439
[Codegen] call       *%rdi
[Codegen] .set .Llabel3441, .
[Codegen] .set .Llabel3441, .
[Codegen] .set .Llabel3441, .
[Codegen] .set .Lfrom3425, .Llabel3441
[Codegen] leaq       -0x30(%rbp), %rsp
[Codegen] pop        %r12
[Codegen] movq       %rcx, 0x0(%r12)
[Codegen] pop        %r15
[Codegen] pop        %r14
[Codegen] pop        %r13
[Codegen] pop        %r12
[Codegen] pop        %rbx
[Codegen] pop        %rbp
[Codegen] ret
[Codegen] # END   creators: JitRuntime::generateEnterJIT
[Codegen] # Emitting Pre Barrier for Value
[Codegen] # BEGIN creators: JitRuntime::generatePreBarrier
[Codegen] # BEGIN creators: JitRuntime::generatePreBarrier/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel3480, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel3489, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel3498, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel3507, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel3516, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel3525, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel3534, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel3543, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel3549, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel3555, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel3561, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel3567, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel3573, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel3579, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel3585, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom3625
[Codegen] .set .Llabel3625, .
[Codegen] int3
[Codegen] .set .Llabel3626, .
[Codegen] .set .Lfrom3625, .Llabel3626
[Codegen] call       .Lfrom3631
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel3636, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel3645, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel3654, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel3663, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel3672, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel3681, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel3690, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel3699, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel3705, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel3711, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel3717, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel3723, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel3729, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel3735, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel3741, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel3776, .
[Codegen] # END   creators: JitRuntime::generatePreBarrier/startTrampolineCode
[Codegen] push       %rax
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] movabsq    $0x7fffffffffff, %rax
[Codegen] andq       0x0(%rdx), %rax
[Codegen] testq      %rax, %rax
[Codegen] jne        .Lfrom3801
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel3819, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel3828, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel3837, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel3846, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel3855, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel3864, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel3873, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel3882, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel3888, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel3894, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel3900, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel3906, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel3912, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel3918, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel3924, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edaca7359, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom3964
[Codegen] .set .Llabel3964, .
[Codegen] int3
[Codegen] .set .Llabel3965, .
[Codegen] .set .Lfrom3964, .Llabel3965
[Codegen] call       .Lfrom3970
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel3975, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel3984, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel3993, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel4002, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel4011, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel4020, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel4029, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel4038, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel4044, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel4050, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel4056, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel4062, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel4068, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel4074, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel4080, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel4104, .
[Codegen] .set .Lfrom3801, .Llabel4104
[Codegen] movq       %rax, %rbx
[Codegen] andq       $0xfffffffffff00000, %rbx
[Codegen] cmpq       $0x0, 0x0(%rbx)
[Codegen] jne        .Lfrom4124
[Codegen] andq       $0xfffff, %rax
[Codegen] shrq       $3, %rax
[Codegen] movq       %rax, %rcx
[Codegen] shrq       $6, %rax
[Codegen] .set .Llabel4141, .
[Codegen] movq       -0xc0(%rbx,%rax,8), %rbx
[Codegen] andq       $0x3f, %rcx
[Codegen] movl       $0x1, %eax
[Codegen] shlq       %cl, %rax
[Codegen] testq      %rax, %rbx
[Codegen] jne        .Lfrom4170
[Codegen] pop        %rcx
[Codegen] pop        %rbx
[Codegen] pop        %rax
[Codegen] push       %r11
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $256, %rsp
[Codegen] .set .Llabel4193, .
[Codegen] vmovdqu    %xmm15, 0xf0(%rsp)
[Codegen] .set .Llabel4202, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel4211, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel4220, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel4229, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel4238, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel4247, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel4256, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel4265, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel4271, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel4277, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel4283, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel4289, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel4295, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel4301, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel4307, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movabsq    $0x75bb8e730000, %rcx
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rdx, %rsi
[Codegen] movq       %rcx, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom4350
[Codegen] .set .Llabel4350, .
[Codegen] int3
[Codegen] .set .Llabel4351, .
[Codegen] .set .Lfrom4350, .Llabel4351
[Codegen] push       %rax
[Codegen] movabsq    $0x75bb8e73a200, %rax
[Codegen] .set .Llabel4362, .
[Codegen] movl       $0x1, 0x180(%rax)
[Codegen] pop        %rax
[Codegen] call       .Lfrom4378
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x75bb8e73a200, %rax
[Codegen] cmpl       $0x0, 0x180(%rax)
[Codegen] je         .Lfrom4407
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel4425, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel4434, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel4443, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel4452, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel4461, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel4470, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel4479, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel4488, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel4494, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel4500, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel4506, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel4512, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel4518, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel4524, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel4530, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edaca656f, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom4570
[Codegen] .set .Llabel4570, .
[Codegen] int3
[Codegen] .set .Llabel4571, .
[Codegen] .set .Lfrom4570, .Llabel4571
[Codegen] call       .Lfrom4576
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel4581, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel4590, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel4599, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel4608, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel4617, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel4626, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel4635, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel4644, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel4650, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel4656, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel4662, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel4668, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel4674, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel4680, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel4686, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel4710, .
[Codegen] .set .Lfrom4407, .Llabel4710
[Codegen] pop        %rax
[Codegen] .set .Llabel4711, .
[Codegen] vmovdqu    0xf0(%rsp), %xmm15
[Codegen] .set .Llabel4720, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel4729, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel4738, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel4747, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel4756, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel4765, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel4774, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel4783, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel4789, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel4795, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel4801, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel4807, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel4813, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel4819, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel4825, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $256, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] pop        %r11
[Codegen] ret
[Codegen] .set .Llabel4851, .
[Codegen] .set .Lfrom4170, .Llabel4851
[Codegen] .set .Lfrom4124, .Llabel4851
[Codegen] pop        %rcx
[Codegen] pop        %rbx
[Codegen] pop        %rax
[Codegen] ret
[Codegen] # END   creators: JitRuntime::generatePreBarrier
[Codegen] # Emitting Pre Barrier for String
[Codegen] # BEGIN creators: JitRuntime::generatePreBarrier
[Codegen] # BEGIN creators: JitRuntime::generatePreBarrier/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel4873, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel4882, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel4891, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel4900, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel4909, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel4918, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel4927, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel4936, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel4942, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel4948, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel4954, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel4960, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel4966, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel4972, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel4978, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom5018
[Codegen] .set .Llabel5018, .
[Codegen] int3
[Codegen] .set .Llabel5019, .
[Codegen] .set .Lfrom5018, .Llabel5019
[Codegen] call       .Lfrom5024
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel5029, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel5038, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel5047, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel5056, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel5065, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel5074, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel5083, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel5092, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel5098, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel5104, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel5110, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel5116, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel5122, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel5128, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel5134, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel5168, .
[Codegen] # END   creators: JitRuntime::generatePreBarrier/startTrampolineCode
[Codegen] push       %rax
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] .set .Llabel5171, .
[Codegen] movq       0x0(%rdx), %rax
[Codegen] testq      %rax, %rax
[Codegen] jne        .Lfrom5183
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel5201, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel5210, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel5219, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel5228, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel5237, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel5246, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel5255, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel5264, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel5270, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel5276, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel5282, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel5288, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel5294, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel5300, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel5306, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edaca7359, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom5346
[Codegen] .set .Llabel5346, .
[Codegen] int3
[Codegen] .set .Llabel5347, .
[Codegen] .set .Lfrom5346, .Llabel5347
[Codegen] call       .Lfrom5352
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel5357, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel5366, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel5375, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel5384, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel5393, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel5402, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel5411, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel5420, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel5426, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel5432, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel5438, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel5444, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel5450, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel5456, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel5462, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel5486, .
[Codegen] .set .Lfrom5183, .Llabel5486
[Codegen] movq       %rax, %rbx
[Codegen] andq       $0xfffffffffff00000, %rbx
[Codegen] cmpq       $0x0, 0x0(%rbx)
[Codegen] jne        .Lfrom5506
[Codegen] andq       $0xfffff, %rax
[Codegen] shrq       $3, %rax
[Codegen] movq       %rax, %rcx
[Codegen] shrq       $6, %rax
[Codegen] .set .Llabel5523, .
[Codegen] movq       -0xc0(%rbx,%rax,8), %rbx
[Codegen] andq       $0x3f, %rcx
[Codegen] movl       $0x1, %eax
[Codegen] shlq       %cl, %rax
[Codegen] testq      %rax, %rbx
[Codegen] jne        .Lfrom5552
[Codegen] pop        %rcx
[Codegen] pop        %rbx
[Codegen] pop        %rax
[Codegen] push       %r11
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $256, %rsp
[Codegen] .set .Llabel5575, .
[Codegen] vmovdqu    %xmm15, 0xf0(%rsp)
[Codegen] .set .Llabel5584, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel5593, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel5602, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel5611, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel5620, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel5629, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel5638, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel5647, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel5653, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel5659, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel5665, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel5671, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel5677, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel5683, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel5689, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movabsq    $0x75bb8e730000, %rcx
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rdx, %rsi
[Codegen] movq       %rcx, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom5732
[Codegen] .set .Llabel5732, .
[Codegen] int3
[Codegen] .set .Llabel5733, .
[Codegen] .set .Lfrom5732, .Llabel5733
[Codegen] push       %rax
[Codegen] movabsq    $0x75bb8e73a200, %rax
[Codegen] .set .Llabel5744, .
[Codegen] movl       $0x1, 0x180(%rax)
[Codegen] pop        %rax
[Codegen] call       .Lfrom5760
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x75bb8e73a200, %rax
[Codegen] cmpl       $0x0, 0x180(%rax)
[Codegen] je         .Lfrom5789
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel5807, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel5816, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel5825, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel5834, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel5843, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel5852, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel5861, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel5870, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel5876, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel5882, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel5888, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel5894, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel5900, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel5906, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel5912, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edaca656f, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom5952
[Codegen] .set .Llabel5952, .
[Codegen] int3
[Codegen] .set .Llabel5953, .
[Codegen] .set .Lfrom5952, .Llabel5953
[Codegen] call       .Lfrom5958
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel5963, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel5972, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel5981, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel5990, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel5999, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel6008, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel6017, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel6026, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel6032, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel6038, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel6044, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel6050, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel6056, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel6062, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel6068, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel6092, .
[Codegen] .set .Lfrom5789, .Llabel6092
[Codegen] pop        %rax
[Codegen] .set .Llabel6093, .
[Codegen] vmovdqu    0xf0(%rsp), %xmm15
[Codegen] .set .Llabel6102, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel6111, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel6120, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel6129, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel6138, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel6147, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel6156, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel6165, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel6171, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel6177, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel6183, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel6189, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel6195, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel6201, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel6207, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $256, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] pop        %r11
[Codegen] ret
[Codegen] .set .Llabel6233, .
[Codegen] .set .Lfrom5552, .Llabel6233
[Codegen] .set .Lfrom5506, .Llabel6233
[Codegen] pop        %rcx
[Codegen] pop        %rbx
[Codegen] pop        %rax
[Codegen] ret
[Codegen] # END   creators: JitRuntime::generatePreBarrier
[Codegen] # Emitting Pre Barrier for Object
[Codegen] # BEGIN creators: JitRuntime::generatePreBarrier
[Codegen] # BEGIN creators: JitRuntime::generatePreBarrier/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel6255, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel6264, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel6273, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel6282, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel6291, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel6300, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel6309, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel6318, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel6324, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel6330, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel6336, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel6342, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel6348, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel6354, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel6360, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom6400
[Codegen] .set .Llabel6400, .
[Codegen] int3
[Codegen] .set .Llabel6401, .
[Codegen] .set .Lfrom6400, .Llabel6401
[Codegen] call       .Lfrom6406
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel6411, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel6420, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel6429, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel6438, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel6447, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel6456, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel6465, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel6474, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel6480, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel6486, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel6492, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel6498, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel6504, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel6510, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel6516, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel6544, .
[Codegen] # END   creators: JitRuntime::generatePreBarrier/startTrampolineCode
[Codegen] push       %rax
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] .set .Llabel6547, .
[Codegen] movq       0x0(%rdx), %rax
[Codegen] testq      %rax, %rax
[Codegen] jne        .Lfrom6559
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel6577, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel6586, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel6595, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel6604, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel6613, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel6622, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel6631, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel6640, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel6646, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel6652, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel6658, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel6664, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel6670, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel6676, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel6682, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edaca7359, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom6722
[Codegen] .set .Llabel6722, .
[Codegen] int3
[Codegen] .set .Llabel6723, .
[Codegen] .set .Lfrom6722, .Llabel6723
[Codegen] call       .Lfrom6728
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel6733, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel6742, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel6751, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel6760, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel6769, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel6778, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel6787, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel6796, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel6802, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel6808, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel6814, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel6820, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel6826, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel6832, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel6838, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel6862, .
[Codegen] .set .Lfrom6559, .Llabel6862
[Codegen] movq       %rax, %rbx
[Codegen] andq       $0xfffffffffff00000, %rbx
[Codegen] cmpq       $0x0, 0x0(%rbx)
[Codegen] jne        .Lfrom6882
[Codegen] andq       $0xfffff, %rax
[Codegen] shrq       $3, %rax
[Codegen] movq       %rax, %rcx
[Codegen] shrq       $6, %rax
[Codegen] .set .Llabel6899, .
[Codegen] movq       -0xc0(%rbx,%rax,8), %rbx
[Codegen] andq       $0x3f, %rcx
[Codegen] movl       $0x1, %eax
[Codegen] shlq       %cl, %rax
[Codegen] testq      %rax, %rbx
[Codegen] jne        .Lfrom6928
[Codegen] pop        %rcx
[Codegen] pop        %rbx
[Codegen] pop        %rax
[Codegen] push       %r11
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $256, %rsp
[Codegen] .set .Llabel6951, .
[Codegen] vmovdqu    %xmm15, 0xf0(%rsp)
[Codegen] .set .Llabel6960, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel6969, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel6978, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel6987, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel6996, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel7005, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel7014, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel7023, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel7029, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel7035, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel7041, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel7047, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel7053, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel7059, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel7065, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movabsq    $0x75bb8e730000, %rcx
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rdx, %rsi
[Codegen] movq       %rcx, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom7108
[Codegen] .set .Llabel7108, .
[Codegen] int3
[Codegen] .set .Llabel7109, .
[Codegen] .set .Lfrom7108, .Llabel7109
[Codegen] push       %rax
[Codegen] movabsq    $0x75bb8e73a200, %rax
[Codegen] .set .Llabel7120, .
[Codegen] movl       $0x1, 0x180(%rax)
[Codegen] pop        %rax
[Codegen] call       .Lfrom7136
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x75bb8e73a200, %rax
[Codegen] cmpl       $0x0, 0x180(%rax)
[Codegen] je         .Lfrom7165
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel7183, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel7192, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel7201, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel7210, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel7219, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel7228, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel7237, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel7246, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel7252, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel7258, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel7264, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel7270, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel7276, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel7282, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel7288, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edaca656f, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom7328
[Codegen] .set .Llabel7328, .
[Codegen] int3
[Codegen] .set .Llabel7329, .
[Codegen] .set .Lfrom7328, .Llabel7329
[Codegen] call       .Lfrom7334
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel7339, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel7348, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel7357, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel7366, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel7375, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel7384, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel7393, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel7402, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel7408, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel7414, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel7420, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel7426, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel7432, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel7438, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel7444, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel7468, .
[Codegen] .set .Lfrom7165, .Llabel7468
[Codegen] pop        %rax
[Codegen] .set .Llabel7469, .
[Codegen] vmovdqu    0xf0(%rsp), %xmm15
[Codegen] .set .Llabel7478, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel7487, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel7496, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel7505, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel7514, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel7523, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel7532, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel7541, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel7547, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel7553, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel7559, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel7565, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel7571, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel7577, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel7583, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $256, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] pop        %r11
[Codegen] ret
[Codegen] .set .Llabel7609, .
[Codegen] .set .Lfrom6928, .Llabel7609
[Codegen] .set .Lfrom6882, .Llabel7609
[Codegen] pop        %rcx
[Codegen] pop        %rbx
[Codegen] pop        %rax
[Codegen] ret
[Codegen] # END   creators: JitRuntime::generatePreBarrier
[Codegen] # Emitting Pre Barrier for Shape
[Codegen] # BEGIN creators: JitRuntime::generatePreBarrier
[Codegen] # BEGIN creators: JitRuntime::generatePreBarrier/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel7631, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel7640, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel7649, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel7658, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel7667, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel7676, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel7685, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel7694, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel7700, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel7706, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel7712, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel7718, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel7724, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel7730, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel7736, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom7776
[Codegen] .set .Llabel7776, .
[Codegen] int3
[Codegen] .set .Llabel7777, .
[Codegen] .set .Lfrom7776, .Llabel7777
[Codegen] call       .Lfrom7782
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel7787, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel7796, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel7805, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel7814, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel7823, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel7832, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel7841, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel7850, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel7856, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel7862, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel7868, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel7874, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel7880, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel7886, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel7892, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel7920, .
[Codegen] # END   creators: JitRuntime::generatePreBarrier/startTrampolineCode
[Codegen] push       %rax
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] .set .Llabel7923, .
[Codegen] movq       0x0(%rdx), %rax
[Codegen] testq      %rax, %rax
[Codegen] jne        .Lfrom7935
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel7953, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel7962, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel7971, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel7980, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel7989, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel7998, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel8007, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel8016, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel8022, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel8028, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel8034, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel8040, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel8046, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel8052, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel8058, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edaca7359, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom8098
[Codegen] .set .Llabel8098, .
[Codegen] int3
[Codegen] .set .Llabel8099, .
[Codegen] .set .Lfrom8098, .Llabel8099
[Codegen] call       .Lfrom8104
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel8109, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel8118, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel8127, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel8136, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel8145, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel8154, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel8163, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel8172, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel8178, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel8184, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel8190, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel8196, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel8202, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel8208, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel8214, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel8238, .
[Codegen] .set .Lfrom7935, .Llabel8238
[Codegen] movq       %rax, %rbx
[Codegen] andq       $0xfffffffffff00000, %rbx
[Codegen] cmpq       $0x0, 0x0(%rbx)
[Codegen] je         .Lfrom8258
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel8276, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel8285, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel8294, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel8303, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel8312, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel8321, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel8330, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel8339, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel8345, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel8351, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel8357, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel8363, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel8369, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel8375, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel8381, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edaca737d, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom8421
[Codegen] .set .Llabel8421, .
[Codegen] int3
[Codegen] .set .Llabel8422, .
[Codegen] .set .Lfrom8421, .Llabel8422
[Codegen] call       .Lfrom8427
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel8432, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel8441, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel8450, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel8459, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel8468, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel8477, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel8486, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel8495, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel8501, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel8507, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel8513, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel8519, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel8525, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel8531, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel8537, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel8561, .
[Codegen] .set .Lfrom8258, .Llabel8561
[Codegen] andq       $0xfffff, %rax
[Codegen] shrq       $3, %rax
[Codegen] movq       %rax, %rcx
[Codegen] shrq       $6, %rax
[Codegen] .set .Llabel8578, .
[Codegen] movq       -0xc0(%rbx,%rax,8), %rbx
[Codegen] andq       $0x3f, %rcx
[Codegen] movl       $0x1, %eax
[Codegen] shlq       %cl, %rax
[Codegen] testq      %rax, %rbx
[Codegen] jne        .Lfrom8607
[Codegen] pop        %rcx
[Codegen] pop        %rbx
[Codegen] pop        %rax
[Codegen] push       %r11
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $256, %rsp
[Codegen] .set .Llabel8630, .
[Codegen] vmovdqu    %xmm15, 0xf0(%rsp)
[Codegen] .set .Llabel8639, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel8648, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel8657, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel8666, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel8675, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel8684, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel8693, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel8702, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel8708, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel8714, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel8720, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel8726, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel8732, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel8738, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel8744, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movabsq    $0x75bb8e730000, %rcx
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rdx, %rsi
[Codegen] movq       %rcx, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom8787
[Codegen] .set .Llabel8787, .
[Codegen] int3
[Codegen] .set .Llabel8788, .
[Codegen] .set .Lfrom8787, .Llabel8788
[Codegen] push       %rax
[Codegen] movabsq    $0x75bb8e73a200, %rax
[Codegen] .set .Llabel8799, .
[Codegen] movl       $0x1, 0x180(%rax)
[Codegen] pop        %rax
[Codegen] call       .Lfrom8815
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x75bb8e73a200, %rax
[Codegen] cmpl       $0x0, 0x180(%rax)
[Codegen] je         .Lfrom8844
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel8862, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel8871, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel8880, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel8889, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel8898, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel8907, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel8916, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel8925, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel8931, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel8937, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel8943, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel8949, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel8955, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel8961, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel8967, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edaca656f, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom9007
[Codegen] .set .Llabel9007, .
[Codegen] int3
[Codegen] .set .Llabel9008, .
[Codegen] .set .Lfrom9007, .Llabel9008
[Codegen] call       .Lfrom9013
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel9018, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel9027, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel9036, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel9045, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel9054, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel9063, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel9072, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel9081, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel9087, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel9093, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel9099, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel9105, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel9111, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel9117, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel9123, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel9147, .
[Codegen] .set .Lfrom8844, .Llabel9147
[Codegen] pop        %rax
[Codegen] .set .Llabel9148, .
[Codegen] vmovdqu    0xf0(%rsp), %xmm15
[Codegen] .set .Llabel9157, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel9166, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel9175, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel9184, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel9193, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel9202, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel9211, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel9220, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel9226, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel9232, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel9238, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel9244, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel9250, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel9256, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel9262, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $256, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] pop        %r11
[Codegen] ret
[Codegen] .set .Llabel9288, .
[Codegen] .set .Lfrom8607, .Llabel9288
[Codegen] pop        %rcx
[Codegen] pop        %rbx
[Codegen] pop        %rax
[Codegen] ret
[Codegen] # END   creators: JitRuntime::generatePreBarrier
[Codegen] # Emitting Pre Barrier for WasmAnyRef
[Codegen] # BEGIN creators: JitRuntime::generatePreBarrier
[Codegen] # BEGIN creators: JitRuntime::generatePreBarrier/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel9310, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel9319, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel9328, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel9337, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel9346, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel9355, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel9364, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel9373, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel9379, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel9385, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel9391, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel9397, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel9403, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel9409, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel9415, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom9455
[Codegen] .set .Llabel9455, .
[Codegen] int3
[Codegen] .set .Llabel9456, .
[Codegen] .set .Lfrom9455, .Llabel9456
[Codegen] call       .Lfrom9461
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel9466, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel9475, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel9484, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel9493, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel9502, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel9511, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel9520, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel9529, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel9535, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel9541, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel9547, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel9553, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel9559, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel9565, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel9571, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel9600, .
[Codegen] # END   creators: JitRuntime::generatePreBarrier/startTrampolineCode
[Codegen] push       %rax
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] movq       $-4, %rax
[Codegen] andq       0x0(%rdx), %rax
[Codegen] testq      %rax, %rax
[Codegen] jne        .Lfrom9622
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel9640, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel9649, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel9658, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel9667, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel9676, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel9685, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel9694, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel9703, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel9709, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel9715, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel9721, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel9727, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel9733, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel9739, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel9745, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edaca7359, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom9785
[Codegen] .set .Llabel9785, .
[Codegen] int3
[Codegen] .set .Llabel9786, .
[Codegen] .set .Lfrom9785, .Llabel9786
[Codegen] call       .Lfrom9791
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel9796, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel9805, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel9814, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel9823, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel9832, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel9841, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel9850, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel9859, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel9865, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel9871, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel9877, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel9883, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel9889, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel9895, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel9901, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel9925, .
[Codegen] .set .Lfrom9622, .Llabel9925
[Codegen] movq       %rax, %rbx
[Codegen] andq       $0xfffffffffff00000, %rbx
[Codegen] cmpq       $0x0, 0x0(%rbx)
[Codegen] jne        .Lfrom9945
[Codegen] andq       $0xfffff, %rax
[Codegen] shrq       $3, %rax
[Codegen] movq       %rax, %rcx
[Codegen] shrq       $6, %rax
[Codegen] .set .Llabel9962, .
[Codegen] movq       -0xc0(%rbx,%rax,8), %rbx
[Codegen] andq       $0x3f, %rcx
[Codegen] movl       $0x1, %eax
[Codegen] shlq       %cl, %rax
[Codegen] testq      %rax, %rbx
[Codegen] jne        .Lfrom9991
[Codegen] pop        %rcx
[Codegen] pop        %rbx
[Codegen] pop        %rax
[Codegen] push       %r11
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $256, %rsp
[Codegen] .set .Llabel10014, .
[Codegen] vmovdqu    %xmm15, 0xf0(%rsp)
[Codegen] .set .Llabel10023, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel10032, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel10041, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel10050, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel10059, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel10068, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel10077, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel10086, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel10092, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel10098, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel10104, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel10110, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel10116, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel10122, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel10128, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movabsq    $0x75bb8e730000, %rcx
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rdx, %rsi
[Codegen] movq       %rcx, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom10171
[Codegen] .set .Llabel10171, .
[Codegen] int3
[Codegen] .set .Llabel10172, .
[Codegen] .set .Lfrom10171, .Llabel10172
[Codegen] push       %rax
[Codegen] movabsq    $0x75bb8e73a200, %rax
[Codegen] .set .Llabel10183, .
[Codegen] movl       $0x1, 0x180(%rax)
[Codegen] pop        %rax
[Codegen] call       .Lfrom10199
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x75bb8e73a200, %rax
[Codegen] cmpl       $0x0, 0x180(%rax)
[Codegen] je         .Lfrom10228
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel10246, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel10255, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel10264, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel10273, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel10282, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel10291, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel10300, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel10309, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel10315, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel10321, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel10327, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel10333, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel10339, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel10345, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel10351, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edaca656f, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom10391
[Codegen] .set .Llabel10391, .
[Codegen] int3
[Codegen] .set .Llabel10392, .
[Codegen] .set .Lfrom10391, .Llabel10392
[Codegen] call       .Lfrom10397
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel10402, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel10411, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel10420, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel10429, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel10438, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel10447, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel10456, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel10465, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel10471, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel10477, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel10483, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel10489, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel10495, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel10501, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel10507, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel10531, .
[Codegen] .set .Lfrom10228, .Llabel10531
[Codegen] pop        %rax
[Codegen] .set .Llabel10532, .
[Codegen] vmovdqu    0xf0(%rsp), %xmm15
[Codegen] .set .Llabel10541, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel10550, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel10559, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel10568, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel10577, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel10586, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel10595, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel10604, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel10610, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel10616, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel10622, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel10628, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel10634, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel10640, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel10646, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $256, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] pop        %r11
[Codegen] ret
[Codegen] .set .Llabel10672, .
[Codegen] .set .Lfrom9991, .Llabel10672
[Codegen] .set .Lfrom9945, .Llabel10672
[Codegen] pop        %rcx
[Codegen] pop        %rbx
[Codegen] pop        %rax
[Codegen] ret
[Codegen] # END   creators: JitRuntime::generatePreBarrier
[Codegen] # Emitting lazy link stub
[Codegen] # BEGIN creators: JitRuntime::generateLazyLinkStub
[Codegen] # BEGIN creators: JitRuntime::generateLazyLinkStub/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel10694, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel10703, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel10712, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel10721, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel10730, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel10739, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel10748, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel10757, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel10763, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel10769, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel10775, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel10781, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel10787, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel10793, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel10799, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom10839
[Codegen] .set .Llabel10839, .
[Codegen] int3
[Codegen] .set .Llabel10840, .
[Codegen] .set .Lfrom10839, .Llabel10840
[Codegen] call       .Lfrom10845
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel10850, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel10859, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel10868, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel10877, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel10886, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel10895, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel10904, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel10913, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel10919, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel10925, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel10931, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel10937, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel10943, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel10949, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel10955, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel10992, .
[Codegen] # END   creators: JitRuntime::generateLazyLinkStub/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rax
[Codegen] .set .Llabel11006, .
[Codegen] movq       0x140(%rax), %rdx
[Codegen] .set .Llabel11013, .
[Codegen] movq       %rsp, 0x70(%rdx)
[Codegen] push       $0xb
[Codegen] movq       %rsp, %rcx
[Codegen] movq       %rsp, %rdx
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rdx
[Codegen] subq       $8, %rsp
[Codegen] movq       %rcx, %rsi
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom11050
[Codegen] .set .Llabel11050, .
[Codegen] int3
[Codegen] .set .Llabel11051, .
[Codegen] .set .Lfrom11050, .Llabel11051
[Codegen] call       .Lfrom11056
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] addq       $8, %rsp
[Codegen] pop        %rbp
[Codegen] jmp        *%rax
[Codegen] # END   creators: JitRuntime::generateLazyLinkStub
[Codegen] # Emitting interpreter stub
[Codegen] # BEGIN creators: JitRuntime::generateInterpreterStub
[Codegen] # BEGIN creators: JitRuntime::generateInterpreterStub/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel11086, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel11095, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel11104, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel11113, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel11122, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel11131, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel11140, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel11149, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel11155, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel11161, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel11167, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel11173, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel11179, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel11185, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel11191, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom11231
[Codegen] .set .Llabel11231, .
[Codegen] int3
[Codegen] .set .Llabel11232, .
[Codegen] .set .Lfrom11231, .Llabel11232
[Codegen] call       .Lfrom11237
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel11242, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel11251, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel11260, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel11269, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel11278, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel11287, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel11296, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel11305, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel11311, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel11317, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel11323, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel11329, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel11335, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel11341, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel11347, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel11376, .
[Codegen] # END   creators: JitRuntime::generateInterpreterStub/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rax
[Codegen] .set .Llabel11390, .
[Codegen] movq       0x140(%rax), %rdx
[Codegen] .set .Llabel11397, .
[Codegen] movq       %rsp, 0x70(%rdx)
[Codegen] push       $0xa
[Codegen] movq       %rsp, %rcx
[Codegen] movq       %rsp, %rdx
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rdx
[Codegen] subq       $8, %rsp
[Codegen] movq       %rcx, %rsi
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom11434
[Codegen] .set .Llabel11434, .
[Codegen] int3
[Codegen] .set .Llabel11435, .
[Codegen] .set .Lfrom11434, .Llabel11435
[Codegen] call       .Lfrom11440
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] testb      $0xff, %al
[Codegen] je         .Lfrom11453
[Codegen] addq       $8, %rsp
[Codegen] pop        %rbp
[Codegen] movq       0x18(%rsp), %rcx
[Codegen] ret
[Codegen] # END   creators: JitRuntime::generateInterpreterStub
[Codegen] # Emitting double-to-int32-value stub
[Codegen] # BEGIN creators: JitRuntime::generateDoubleToInt32ValueStub
[Codegen] # BEGIN creators: JitRuntime::generateDoubleToInt32ValueStub/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel11482, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel11491, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel11500, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel11509, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel11518, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel11527, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel11536, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel11545, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel11551, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel11557, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel11563, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel11569, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel11575, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel11581, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel11587, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom11627
[Codegen] .set .Llabel11627, .
[Codegen] int3
[Codegen] .set .Llabel11628, .
[Codegen] .set .Lfrom11627, .Llabel11628
[Codegen] call       .Lfrom11633
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel11638, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel11647, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel11656, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel11665, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel11674, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel11683, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel11692, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel11701, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel11707, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel11713, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel11719, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel11725, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel11731, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel11737, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel11743, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel11776, .
[Codegen] # END   creators: JitRuntime::generateDoubleToInt32ValueStub/startTrampolineCode
[Codegen] movq       %rcx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff0, %r11d
[Codegen] ja         .Lfrom11796
[Codegen] vmovq      %rcx, %xmm0
[Codegen] vcvttsd2si %xmm0, %ebx
[Codegen] xorpd      %xmm15, %xmm15
[Codegen] cvtsi2sd   %ebx, %xmm15
[Codegen] vucomisd   %xmm15, %xmm0
[Codegen] jp         .Lfrom11826
[Codegen] jne        .Lfrom11832
[Codegen] movq       %rbx, %rcx
[Codegen] movabsq    $0xfff8800000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] .set .Llabel11848, .
[Codegen] .set .Lfrom11832, .Llabel11848
[Codegen] .set .Lfrom11826, .Llabel11848
[Codegen] .set .Lfrom11796, .Llabel11848
[Codegen] ret
[Codegen] # END   creators: JitRuntime::generateDoubleToInt32ValueStub
[Codegen] # Emitting VM function wrappers
[Codegen] # VM function wrapper (AddDisposableResourceToCapability)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel11867, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel11876, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel11885, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel11894, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel11903, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel11912, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel11921, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel11930, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel11936, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel11942, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel11948, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel11954, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel11960, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel11966, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel11972, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom12012
[Codegen] .set .Llabel12012, .
[Codegen] int3
[Codegen] .set .Llabel12013, .
[Codegen] .set .Lfrom12012, .Llabel12013
[Codegen] call       .Lfrom12018
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel12023, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel12032, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel12041, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel12050, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel12059, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel12068, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel12077, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel12086, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel12092, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel12098, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel12104, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel12110, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel12116, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel12122, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel12128, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel12160, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel12174, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel12181, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xd
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel12191, .
[Codegen] movq       0x38(%rbp), %r9
[Codegen] .set .Llabel12195, .
[Codegen] movq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom12221
[Codegen] .set .Llabel12221, .
[Codegen] int3
[Codegen] .set .Llabel12222, .
[Codegen] .set .Lfrom12221, .Llabel12222
[Codegen] call       .Lfrom12227
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom12235
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $48
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (AddOrUpdateSparseElementHelper)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel12260, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel12269, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel12278, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel12287, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel12296, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel12305, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel12314, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel12323, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel12329, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel12335, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel12341, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel12347, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel12353, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel12359, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel12365, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom12405
[Codegen] .set .Llabel12405, .
[Codegen] int3
[Codegen] .set .Llabel12406, .
[Codegen] .set .Lfrom12405, .Llabel12406
[Codegen] call       .Lfrom12411
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel12416, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel12425, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel12434, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel12443, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel12452, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel12461, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel12470, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel12479, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel12485, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel12491, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel12497, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel12503, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel12509, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel12515, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel12521, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel12560, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel12574, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel12581, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xe
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel12591, .
[Codegen] movq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel12599, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom12617
[Codegen] .set .Llabel12617, .
[Codegen] int3
[Codegen] .set .Llabel12618, .
[Codegen] .set .Lfrom12617, .Llabel12618
[Codegen] call       .Lfrom12623
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom12631
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (AddSlotAndCallAddPropHook)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel12656, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel12665, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel12674, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel12683, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel12692, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel12701, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel12710, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel12719, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel12725, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel12731, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel12737, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel12743, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel12749, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel12755, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel12761, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom12801
[Codegen] .set .Llabel12801, .
[Codegen] int3
[Codegen] .set .Llabel12802, .
[Codegen] .set .Lfrom12801, .Llabel12802
[Codegen] call       .Lfrom12807
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel12812, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel12821, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel12830, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel12839, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel12848, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel12857, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel12866, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel12875, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel12881, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel12887, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel12893, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel12899, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel12905, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel12911, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel12917, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel12944, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel12958, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel12965, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xf
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom12997
[Codegen] .set .Llabel12997, .
[Codegen] int3
[Codegen] .set .Llabel12998, .
[Codegen] .set .Lfrom12997, .Llabel12998
[Codegen] call       .Lfrom13003
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom13011
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ArgumentsObjectCreateForInlinedIon)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel13036, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel13045, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel13054, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel13063, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel13072, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel13081, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel13090, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel13099, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel13105, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel13111, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel13117, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel13123, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel13129, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel13135, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel13141, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom13181
[Codegen] .set .Llabel13181, .
[Codegen] int3
[Codegen] .set .Llabel13182, .
[Codegen] .set .Lfrom13181, .Llabel13182
[Codegen] call       .Lfrom13187
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel13192, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel13201, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel13210, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel13219, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel13228, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel13237, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel13246, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel13255, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel13261, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel13267, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel13273, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel13279, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel13285, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel13291, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel13297, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel13328, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel13342, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel13349, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x10
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel13359, .
[Codegen] movq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] .set .Llabel13371, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom13385
[Codegen] .set .Llabel13385, .
[Codegen] int3
[Codegen] .set .Llabel13386, .
[Codegen] .set .Lfrom13385, .Llabel13386
[Codegen] call       .Lfrom13391
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom13400
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ArgumentsObjectCreateForIon)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel13425, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel13434, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel13443, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel13452, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel13461, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel13470, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel13479, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel13488, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel13494, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel13500, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel13506, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel13512, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel13518, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel13524, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel13530, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom13570
[Codegen] .set .Llabel13570, .
[Codegen] int3
[Codegen] .set .Llabel13571, .
[Codegen] .set .Lfrom13570, .Llabel13571
[Codegen] call       .Lfrom13576
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel13581, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel13590, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel13599, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel13608, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel13617, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel13626, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel13635, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel13644, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel13650, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel13656, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel13662, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel13668, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel13674, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel13680, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel13686, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel13712, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel13726, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel13733, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] .set .Llabel13747, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom13761
[Codegen] .set .Llabel13761, .
[Codegen] int3
[Codegen] .set .Llabel13762, .
[Codegen] .set .Lfrom13761, .Llabel13762
[Codegen] call       .Lfrom13767
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom13776
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ArgumentsSliceDense)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel13801, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel13810, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel13819, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel13828, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel13837, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel13846, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel13855, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel13864, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel13870, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel13876, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel13882, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel13888, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel13894, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel13900, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel13906, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom13946
[Codegen] .set .Llabel13946, .
[Codegen] int3
[Codegen] .set .Llabel13947, .
[Codegen] .set .Lfrom13946, .Llabel13947
[Codegen] call       .Lfrom13952
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel13957, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel13966, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel13975, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel13984, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel13993, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel14002, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel14011, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel14020, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel14026, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel14032, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel14038, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel14044, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel14050, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel14056, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel14062, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel14096, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel14110, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel14117, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x12
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] .set .Llabel14131, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] .set .Llabel14135, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom14153
[Codegen] .set .Llabel14153, .
[Codegen] int3
[Codegen] .set .Llabel14154, .
[Codegen] .set .Lfrom14153, .Llabel14154
[Codegen] call       .Lfrom14159
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom14168
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ArrayConstructorOneArg)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel14193, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel14202, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel14211, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel14220, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel14229, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel14238, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel14247, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel14256, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel14262, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel14268, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel14274, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel14280, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel14286, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel14292, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel14298, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom14338
[Codegen] .set .Llabel14338, .
[Codegen] int3
[Codegen] .set .Llabel14339, .
[Codegen] .set .Lfrom14338, .Llabel14339
[Codegen] call       .Lfrom14344
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel14349, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel14358, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel14367, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel14376, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel14385, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel14394, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel14403, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel14412, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel14418, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel14424, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel14430, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel14436, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel14442, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel14448, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel14454, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel14480, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel14494, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel14501, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x13
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel14511, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] .set .Llabel14515, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom14533
[Codegen] .set .Llabel14533, .
[Codegen] int3
[Codegen] .set .Llabel14534, .
[Codegen] .set .Lfrom14533, .Llabel14534
[Codegen] call       .Lfrom14539
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom14548
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ArrayFromArgumentsObject)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel14573, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel14582, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel14591, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel14600, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel14609, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel14618, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel14627, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel14636, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel14642, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel14648, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel14654, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel14660, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel14666, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel14672, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel14678, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom14718
[Codegen] .set .Llabel14718, .
[Codegen] int3
[Codegen] .set .Llabel14719, .
[Codegen] .set .Lfrom14718, .Llabel14719
[Codegen] call       .Lfrom14724
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel14729, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel14738, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel14747, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel14756, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel14765, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel14774, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel14783, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel14792, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel14798, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel14804, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel14810, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel14816, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel14822, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel14828, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel14834, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel14864, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel14878, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel14885, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x14
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom14909
[Codegen] .set .Llabel14909, .
[Codegen] int3
[Codegen] .set .Llabel14910, .
[Codegen] .set .Lfrom14909, .Llabel14910
[Codegen] call       .Lfrom14915
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom14924
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ArrayJoin)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel14949, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel14958, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel14967, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel14976, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel14985, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel14994, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel15003, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel15012, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel15018, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel15024, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel15030, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel15036, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel15042, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel15048, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel15054, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom15094
[Codegen] .set .Llabel15094, .
[Codegen] int3
[Codegen] .set .Llabel15095, .
[Codegen] .set .Lfrom15094, .Llabel15095
[Codegen] call       .Lfrom15100
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel15105, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel15114, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel15123, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel15132, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel15141, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel15150, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel15159, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel15168, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel15174, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel15180, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel15186, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel15192, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel15198, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel15204, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel15210, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel15248, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel15262, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel15269, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x15
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom15297
[Codegen] .set .Llabel15297, .
[Codegen] int3
[Codegen] .set .Llabel15298, .
[Codegen] .set .Lfrom15297, .Llabel15298
[Codegen] call       .Lfrom15303
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom15312
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ArraySliceDense)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel15337, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel15346, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel15355, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel15364, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel15373, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel15382, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel15391, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel15400, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel15406, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel15412, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel15418, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel15424, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel15430, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel15436, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel15442, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom15482
[Codegen] .set .Llabel15482, .
[Codegen] int3
[Codegen] .set .Llabel15483, .
[Codegen] .set .Lfrom15482, .Llabel15483
[Codegen] call       .Lfrom15488
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel15493, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel15502, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel15511, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel15520, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel15529, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel15538, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel15547, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel15556, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel15562, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel15568, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel15574, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel15580, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel15586, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel15592, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel15598, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel15632, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel15646, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel15653, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x16
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] .set .Llabel15667, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] .set .Llabel15671, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom15689
[Codegen] .set .Llabel15689, .
[Codegen] int3
[Codegen] .set .Llabel15690, .
[Codegen] .set .Lfrom15689, .Llabel15690
[Codegen] call       .Lfrom15695
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom15704
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (AsyncFunctionAwait)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel15729, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel15738, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel15747, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel15756, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel15765, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel15774, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel15783, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel15792, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel15798, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel15804, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel15810, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel15816, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel15822, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel15828, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel15834, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom15874
[Codegen] .set .Llabel15874, .
[Codegen] int3
[Codegen] .set .Llabel15875, .
[Codegen] .set .Lfrom15874, .Llabel15875
[Codegen] call       .Lfrom15880
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel15885, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel15894, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel15903, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel15912, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel15921, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel15930, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel15939, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel15948, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel15954, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel15960, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel15966, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel15972, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel15978, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel15984, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel15990, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel16016, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel16030, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel16037, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x17
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom16065
[Codegen] .set .Llabel16065, .
[Codegen] int3
[Codegen] .set .Llabel16066, .
[Codegen] .set .Lfrom16065, .Llabel16066
[Codegen] call       .Lfrom16071
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom16080
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (AsyncFunctionReject)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel16105, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel16114, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel16123, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel16132, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel16141, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel16150, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel16159, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel16168, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel16174, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel16180, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel16186, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel16192, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel16198, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel16204, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel16210, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom16250
[Codegen] .set .Llabel16250, .
[Codegen] int3
[Codegen] .set .Llabel16251, .
[Codegen] .set .Lfrom16250, .Llabel16251
[Codegen] call       .Lfrom16256
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel16261, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel16270, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel16279, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel16288, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel16297, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel16306, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel16315, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel16324, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel16330, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel16336, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel16342, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel16348, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel16354, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel16360, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel16366, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel16400, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel16414, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel16421, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x18
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom16453
[Codegen] .set .Llabel16453, .
[Codegen] int3
[Codegen] .set .Llabel16454, .
[Codegen] .set .Lfrom16453, .Llabel16454
[Codegen] call       .Lfrom16459
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom16468
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (AsyncFunctionResolve)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel16493, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel16502, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel16511, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel16520, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel16529, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel16538, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel16547, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel16556, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel16562, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel16568, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel16574, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel16580, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel16586, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel16592, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel16598, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom16638
[Codegen] .set .Llabel16638, .
[Codegen] int3
[Codegen] .set .Llabel16639, .
[Codegen] .set .Lfrom16638, .Llabel16639
[Codegen] call       .Lfrom16644
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel16649, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel16658, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel16667, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel16676, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel16685, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel16694, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel16703, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel16712, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel16718, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel16724, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel16730, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel16736, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel16742, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel16748, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel16754, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel16784, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel16798, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel16805, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x19
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom16833
[Codegen] .set .Llabel16833, .
[Codegen] int3
[Codegen] .set .Llabel16834, .
[Codegen] .set .Lfrom16833, .Llabel16834
[Codegen] call       .Lfrom16839
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom16848
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (AtomicsAdd64)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel16873, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel16882, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel16891, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel16900, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel16909, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel16918, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel16927, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel16936, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel16942, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel16948, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel16954, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel16960, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel16966, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel16972, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel16978, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom17018
[Codegen] .set .Llabel17018, .
[Codegen] int3
[Codegen] .set .Llabel17019, .
[Codegen] .set .Lfrom17018, .Llabel17019
[Codegen] call       .Lfrom17024
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel17029, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel17038, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel17047, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel17056, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel17065, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel17074, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel17083, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel17092, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel17098, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel17104, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel17110, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel17116, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel17122, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel17128, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel17134, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel17168, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel17182, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel17189, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x1a
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel17199, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] .set .Llabel17203, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel17207, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom17221
[Codegen] .set .Llabel17221, .
[Codegen] int3
[Codegen] .set .Llabel17222, .
[Codegen] .set .Lfrom17221, .Llabel17222
[Codegen] call       .Lfrom17227
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom17236
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (AtomicsAnd64)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel17261, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel17270, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel17279, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel17288, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel17297, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel17306, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel17315, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel17324, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel17330, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel17336, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel17342, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel17348, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel17354, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel17360, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel17366, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom17406
[Codegen] .set .Llabel17406, .
[Codegen] int3
[Codegen] .set .Llabel17407, .
[Codegen] .set .Lfrom17406, .Llabel17407
[Codegen] call       .Lfrom17412
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel17417, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel17426, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel17435, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel17444, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel17453, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel17462, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel17471, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel17480, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel17486, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel17492, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel17498, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel17504, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel17510, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel17516, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel17522, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel17552, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel17566, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel17573, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x1b
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel17583, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] .set .Llabel17587, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel17591, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom17605
[Codegen] .set .Llabel17605, .
[Codegen] int3
[Codegen] .set .Llabel17606, .
[Codegen] .set .Lfrom17605, .Llabel17606
[Codegen] call       .Lfrom17611
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom17620
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (AtomicsCompareExchange64)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel17645, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel17654, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel17663, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel17672, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel17681, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel17690, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel17699, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel17708, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel17714, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel17720, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel17726, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel17732, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel17738, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel17744, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel17750, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom17790
[Codegen] .set .Llabel17790, .
[Codegen] int3
[Codegen] .set .Llabel17791, .
[Codegen] .set .Lfrom17790, .Llabel17791
[Codegen] call       .Lfrom17796
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel17801, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel17810, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel17819, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel17828, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel17837, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel17846, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel17855, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel17864, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel17870, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel17876, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel17882, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel17888, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel17894, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel17900, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel17906, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel17936, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel17950, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel17957, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x1c
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel17967, .
[Codegen] movq       0x30(%rbp), %r8
[Codegen] .set .Llabel17971, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] .set .Llabel17975, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel17979, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom17993
[Codegen] .set .Llabel17993, .
[Codegen] int3
[Codegen] .set .Llabel17994, .
[Codegen] .set .Lfrom17993, .Llabel17994
[Codegen] call       .Lfrom17999
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom18008
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (AtomicsExchange64)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel18033, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel18042, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel18051, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel18060, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel18069, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel18078, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel18087, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel18096, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel18102, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel18108, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel18114, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel18120, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel18126, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel18132, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel18138, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom18178
[Codegen] .set .Llabel18178, .
[Codegen] int3
[Codegen] .set .Llabel18179, .
[Codegen] .set .Lfrom18178, .Llabel18179
[Codegen] call       .Lfrom18184
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel18189, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel18198, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel18207, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel18216, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel18225, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel18234, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel18243, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel18252, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel18258, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel18264, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel18270, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel18276, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel18282, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel18288, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel18294, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel18320, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel18334, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel18341, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x1d
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel18351, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] .set .Llabel18355, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel18359, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom18373
[Codegen] .set .Llabel18373, .
[Codegen] int3
[Codegen] .set .Llabel18374, .
[Codegen] .set .Lfrom18373, .Llabel18374
[Codegen] call       .Lfrom18379
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom18388
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (AtomicsLoad64)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel18413, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel18422, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel18431, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel18440, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel18449, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel18458, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel18467, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel18476, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel18482, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel18488, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel18494, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel18500, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel18506, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel18512, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel18518, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom18558
[Codegen] .set .Llabel18558, .
[Codegen] int3
[Codegen] .set .Llabel18559, .
[Codegen] .set .Lfrom18558, .Llabel18559
[Codegen] call       .Lfrom18564
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel18569, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel18578, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel18587, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel18596, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel18605, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel18614, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel18623, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel18632, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel18638, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel18644, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel18650, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel18656, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel18662, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel18668, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel18674, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel18704, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel18718, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel18725, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x1e
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel18735, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel18739, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom18753
[Codegen] .set .Llabel18753, .
[Codegen] int3
[Codegen] .set .Llabel18754, .
[Codegen] .set .Lfrom18753, .Llabel18754
[Codegen] call       .Lfrom18759
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom18768
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (AtomicsOr64)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel18793, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel18802, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel18811, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel18820, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel18829, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel18838, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel18847, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel18856, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel18862, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel18868, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel18874, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel18880, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel18886, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel18892, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel18898, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom18938
[Codegen] .set .Llabel18938, .
[Codegen] int3
[Codegen] .set .Llabel18939, .
[Codegen] .set .Lfrom18938, .Llabel18939
[Codegen] call       .Lfrom18944
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel18949, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel18958, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel18967, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel18976, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel18985, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel18994, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel19003, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel19012, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel19018, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel19024, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel19030, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel19036, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel19042, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel19048, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel19054, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel19088, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel19102, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel19109, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x1f
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel19119, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] .set .Llabel19123, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel19127, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom19141
[Codegen] .set .Llabel19141, .
[Codegen] int3
[Codegen] .set .Llabel19142, .
[Codegen] .set .Lfrom19141, .Llabel19142
[Codegen] call       .Lfrom19147
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom19156
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (AtomicsSub64)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel19181, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel19190, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel19199, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel19208, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel19217, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel19226, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel19235, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel19244, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel19250, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel19256, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel19262, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel19268, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel19274, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel19280, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel19286, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom19326
[Codegen] .set .Llabel19326, .
[Codegen] int3
[Codegen] .set .Llabel19327, .
[Codegen] .set .Lfrom19326, .Llabel19327
[Codegen] call       .Lfrom19332
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel19337, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel19346, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel19355, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel19364, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel19373, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel19382, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel19391, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel19400, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel19406, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel19412, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel19418, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel19424, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel19430, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel19436, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel19442, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel19472, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel19486, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel19493, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x20
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel19503, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] .set .Llabel19507, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel19511, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom19525
[Codegen] .set .Llabel19525, .
[Codegen] int3
[Codegen] .set .Llabel19526, .
[Codegen] .set .Lfrom19525, .Llabel19526
[Codegen] call       .Lfrom19531
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom19540
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (AtomicsXor64)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel19565, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel19574, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel19583, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel19592, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel19601, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel19610, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel19619, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel19628, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel19634, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel19640, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel19646, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel19652, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel19658, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel19664, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel19670, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom19710
[Codegen] .set .Llabel19710, .
[Codegen] int3
[Codegen] .set .Llabel19711, .
[Codegen] .set .Lfrom19710, .Llabel19711
[Codegen] call       .Lfrom19716
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel19721, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel19730, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel19739, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel19748, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel19757, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel19766, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel19775, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel19784, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel19790, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel19796, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel19802, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel19808, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel19814, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel19820, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel19826, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel19856, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel19870, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel19877, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x21
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel19887, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] .set .Llabel19891, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel19895, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom19909
[Codegen] .set .Llabel19909, .
[Codegen] int3
[Codegen] .set .Llabel19910, .
[Codegen] .set .Lfrom19909, .Llabel19910
[Codegen] call       .Lfrom19915
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom19924
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (AtomizeString)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel19949, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel19958, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel19967, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel19976, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel19985, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel19994, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel20003, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel20012, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel20018, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel20024, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel20030, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel20036, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel20042, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel20048, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel20054, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom20094
[Codegen] .set .Llabel20094, .
[Codegen] int3
[Codegen] .set .Llabel20095, .
[Codegen] .set .Lfrom20094, .Llabel20095
[Codegen] call       .Lfrom20100
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel20105, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel20114, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel20123, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel20132, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel20141, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel20150, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel20159, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel20168, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel20174, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel20180, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel20186, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel20192, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel20198, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel20204, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel20210, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel20240, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel20254, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel20261, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x22
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel20271, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom20285
[Codegen] .set .Llabel20285, .
[Codegen] int3
[Codegen] .set .Llabel20286, .
[Codegen] .set .Lfrom20285, .Llabel20286
[Codegen] call       .Lfrom20291
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom20300
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BaselineCompileFromBaselineInterpreter)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel20325, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel20334, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel20343, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel20352, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel20361, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel20370, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel20379, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel20388, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel20394, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel20400, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel20406, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel20412, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel20418, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel20424, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel20430, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom20470
[Codegen] .set .Llabel20470, .
[Codegen] int3
[Codegen] .set .Llabel20471, .
[Codegen] .set .Lfrom20470, .Llabel20471
[Codegen] call       .Lfrom20476
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel20481, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel20490, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel20499, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel20508, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel20517, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel20526, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel20535, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel20544, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel20550, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel20556, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel20562, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel20568, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel20574, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel20580, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel20586, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel20624, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel20638, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel20645, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x23
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rdx
[Codegen] .set .Llabel20663, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom20677
[Codegen] .set .Llabel20677, .
[Codegen] int3
[Codegen] .set .Llabel20678, .
[Codegen] .set .Lfrom20677, .Llabel20678
[Codegen] call       .Lfrom20683
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom20691
[Codegen] .set .Llabel20691, .
[Codegen] movq       -0x10(%rbp), %rax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BaselineDebugPrologue)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel20720, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel20729, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel20738, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel20747, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel20756, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel20765, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel20774, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel20783, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel20789, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel20795, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel20801, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel20807, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel20813, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel20819, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel20825, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom20865
[Codegen] .set .Llabel20865, .
[Codegen] int3
[Codegen] .set .Llabel20866, .
[Codegen] .set .Lfrom20865, .Llabel20866
[Codegen] call       .Lfrom20871
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel20876, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel20885, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel20894, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel20903, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel20912, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel20921, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel20930, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel20939, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel20945, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel20951, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel20957, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel20963, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel20969, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel20975, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel20981, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel21008, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel21022, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel21029, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x24
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel21039, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom21053
[Codegen] .set .Llabel21053, .
[Codegen] int3
[Codegen] .set .Llabel21054, .
[Codegen] .set .Lfrom21053, .Llabel21054
[Codegen] call       .Lfrom21059
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom21067
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BaselineGetFunctionThis)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel21092, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel21101, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel21110, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel21119, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel21128, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel21137, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel21146, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel21155, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel21161, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel21167, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel21173, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel21179, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel21185, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel21191, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel21197, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom21237
[Codegen] .set .Llabel21237, .
[Codegen] int3
[Codegen] .set .Llabel21238, .
[Codegen] .set .Lfrom21237, .Llabel21238
[Codegen] call       .Lfrom21243
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel21248, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel21257, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel21266, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel21275, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel21284, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel21293, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel21302, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel21311, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel21317, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel21323, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel21329, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel21335, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel21341, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel21347, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel21353, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel21392, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel21406, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel21413, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x25
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rdx
[Codegen] .set .Llabel21439, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom21453
[Codegen] .set .Llabel21453, .
[Codegen] int3
[Codegen] .set .Llabel21454, .
[Codegen] .set .Lfrom21453, .Llabel21454
[Codegen] call       .Lfrom21459
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom21467
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BigIntAdd)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel21496, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel21505, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel21514, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel21523, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel21532, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel21541, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel21550, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel21559, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel21565, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel21571, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel21577, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel21583, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel21589, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel21595, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel21601, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom21641
[Codegen] .set .Llabel21641, .
[Codegen] int3
[Codegen] .set .Llabel21642, .
[Codegen] .set .Lfrom21641, .Llabel21642
[Codegen] call       .Lfrom21647
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel21652, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel21661, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel21670, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel21679, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel21688, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel21697, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel21706, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel21715, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel21721, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel21727, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel21733, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel21739, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel21745, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel21751, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel21757, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel21792, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel21806, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel21813, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x26
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom21841
[Codegen] .set .Llabel21841, .
[Codegen] int3
[Codegen] .set .Llabel21842, .
[Codegen] .set .Lfrom21841, .Llabel21842
[Codegen] call       .Lfrom21847
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom21856
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BigIntAsIntN)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel21881, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel21890, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel21899, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel21908, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel21917, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel21926, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel21935, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel21944, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel21950, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel21956, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel21962, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel21968, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel21974, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel21980, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel21986, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom22026
[Codegen] .set .Llabel22026, .
[Codegen] int3
[Codegen] .set .Llabel22027, .
[Codegen] .set .Lfrom22026, .Llabel22027
[Codegen] call       .Lfrom22032
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel22037, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel22046, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel22055, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel22064, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel22073, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel22082, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel22091, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel22100, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel22106, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel22112, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel22118, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel22124, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel22130, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel22136, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel22142, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel22176, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel22190, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel22197, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x27
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel22207, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom22225
[Codegen] .set .Llabel22225, .
[Codegen] int3
[Codegen] .set .Llabel22226, .
[Codegen] .set .Lfrom22225, .Llabel22226
[Codegen] call       .Lfrom22231
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom22240
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BigIntAsUintN)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel22265, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel22274, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel22283, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel22292, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel22301, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel22310, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel22319, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel22328, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel22334, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel22340, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel22346, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel22352, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel22358, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel22364, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel22370, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom22410
[Codegen] .set .Llabel22410, .
[Codegen] int3
[Codegen] .set .Llabel22411, .
[Codegen] .set .Lfrom22410, .Llabel22411
[Codegen] call       .Lfrom22416
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel22421, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel22430, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel22439, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel22448, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel22457, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel22466, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel22475, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel22484, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel22490, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel22496, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel22502, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel22508, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel22514, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel22520, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel22526, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel22560, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel22574, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel22581, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x28
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel22591, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom22609
[Codegen] .set .Llabel22609, .
[Codegen] int3
[Codegen] .set .Llabel22610, .
[Codegen] .set .Lfrom22609, .Llabel22610
[Codegen] call       .Lfrom22615
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom22624
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BigIntBitAnd)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel22649, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel22658, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel22667, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel22676, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel22685, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel22694, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel22703, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel22712, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel22718, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel22724, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel22730, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel22736, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel22742, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel22748, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel22754, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom22794
[Codegen] .set .Llabel22794, .
[Codegen] int3
[Codegen] .set .Llabel22795, .
[Codegen] .set .Lfrom22794, .Llabel22795
[Codegen] call       .Lfrom22800
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel22805, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel22814, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel22823, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel22832, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel22841, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel22850, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel22859, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel22868, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel22874, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel22880, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel22886, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel22892, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel22898, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel22904, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel22910, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel22944, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel22958, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel22965, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x29
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom22993
[Codegen] .set .Llabel22993, .
[Codegen] int3
[Codegen] .set .Llabel22994, .
[Codegen] .set .Lfrom22993, .Llabel22994
[Codegen] call       .Lfrom22999
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom23008
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BigIntBitNot)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel23033, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel23042, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel23051, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel23060, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel23069, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel23078, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel23087, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel23096, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel23102, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel23108, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel23114, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel23120, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel23126, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel23132, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel23138, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom23178
[Codegen] .set .Llabel23178, .
[Codegen] int3
[Codegen] .set .Llabel23179, .
[Codegen] .set .Lfrom23178, .Llabel23179
[Codegen] call       .Lfrom23184
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel23189, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel23198, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel23207, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel23216, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel23225, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel23234, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel23243, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel23252, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel23258, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel23264, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel23270, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel23276, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel23282, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel23288, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel23294, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel23328, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel23342, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel23349, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x2a
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom23373
[Codegen] .set .Llabel23373, .
[Codegen] int3
[Codegen] .set .Llabel23374, .
[Codegen] .set .Lfrom23373, .Llabel23374
[Codegen] call       .Lfrom23379
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom23388
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BigIntBitOr)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel23413, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel23422, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel23431, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel23440, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel23449, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel23458, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel23467, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel23476, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel23482, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel23488, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel23494, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel23500, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel23506, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel23512, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel23518, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom23558
[Codegen] .set .Llabel23558, .
[Codegen] int3
[Codegen] .set .Llabel23559, .
[Codegen] .set .Lfrom23558, .Llabel23559
[Codegen] call       .Lfrom23564
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel23569, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel23578, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel23587, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel23596, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel23605, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel23614, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel23623, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel23632, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel23638, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel23644, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel23650, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel23656, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel23662, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel23668, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel23674, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel23712, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel23726, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel23733, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x2b
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom23761
[Codegen] .set .Llabel23761, .
[Codegen] int3
[Codegen] .set .Llabel23762, .
[Codegen] .set .Lfrom23761, .Llabel23762
[Codegen] call       .Lfrom23767
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom23776
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BigIntBitXor)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel23801, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel23810, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel23819, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel23828, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel23837, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel23846, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel23855, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel23864, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel23870, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel23876, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel23882, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel23888, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel23894, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel23900, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel23906, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom23946
[Codegen] .set .Llabel23946, .
[Codegen] int3
[Codegen] .set .Llabel23947, .
[Codegen] .set .Lfrom23946, .Llabel23947
[Codegen] call       .Lfrom23952
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel23957, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel23966, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel23975, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel23984, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel23993, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel24002, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel24011, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel24020, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel24026, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel24032, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel24038, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel24044, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel24050, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel24056, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel24062, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel24096, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel24110, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel24117, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x2c
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom24145
[Codegen] .set .Llabel24145, .
[Codegen] int3
[Codegen] .set .Llabel24146, .
[Codegen] .set .Lfrom24145, .Llabel24146
[Codegen] call       .Lfrom24151
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom24160
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BigIntCreateFromIntPtr)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel24185, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel24194, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel24203, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel24212, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel24221, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel24230, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel24239, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel24248, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel24254, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel24260, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel24266, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel24272, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel24278, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel24284, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel24290, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom24330
[Codegen] .set .Llabel24330, .
[Codegen] int3
[Codegen] .set .Llabel24331, .
[Codegen] .set .Lfrom24330, .Llabel24331
[Codegen] call       .Lfrom24336
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel24341, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel24350, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel24359, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel24368, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel24377, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel24386, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel24395, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel24404, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel24410, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel24416, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel24422, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel24428, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel24434, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel24440, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel24446, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel24480, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel24494, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel24501, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x2d
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel24511, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom24525
[Codegen] .set .Llabel24525, .
[Codegen] int3
[Codegen] .set .Llabel24526, .
[Codegen] .set .Lfrom24525, .Llabel24526
[Codegen] call       .Lfrom24531
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom24540
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BigIntDec)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel24565, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel24574, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel24583, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel24592, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel24601, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel24610, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel24619, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel24628, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel24634, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel24640, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel24646, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel24652, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel24658, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel24664, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel24670, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom24710
[Codegen] .set .Llabel24710, .
[Codegen] int3
[Codegen] .set .Llabel24711, .
[Codegen] .set .Lfrom24710, .Llabel24711
[Codegen] call       .Lfrom24716
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel24721, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel24730, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel24739, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel24748, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel24757, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel24766, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel24775, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel24784, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel24790, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel24796, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel24802, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel24808, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel24814, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel24820, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel24826, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel24864, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel24878, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel24885, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x2e
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom24909
[Codegen] .set .Llabel24909, .
[Codegen] int3
[Codegen] .set .Llabel24910, .
[Codegen] .set .Lfrom24909, .Llabel24910
[Codegen] call       .Lfrom24915
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom24924
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BigIntDiv)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel24949, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel24958, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel24967, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel24976, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel24985, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel24994, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel25003, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel25012, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel25018, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel25024, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel25030, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel25036, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel25042, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel25048, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel25054, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom25094
[Codegen] .set .Llabel25094, .
[Codegen] int3
[Codegen] .set .Llabel25095, .
[Codegen] .set .Lfrom25094, .Llabel25095
[Codegen] call       .Lfrom25100
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel25105, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel25114, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel25123, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel25132, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel25141, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel25150, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel25159, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel25168, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel25174, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel25180, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel25186, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel25192, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel25198, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel25204, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel25210, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel25248, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel25262, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel25269, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x2f
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom25297
[Codegen] .set .Llabel25297, .
[Codegen] int3
[Codegen] .set .Llabel25298, .
[Codegen] .set .Lfrom25297, .Llabel25298
[Codegen] call       .Lfrom25303
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom25312
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BigIntInc)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel25337, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel25346, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel25355, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel25364, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel25373, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel25382, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel25391, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel25400, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel25406, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel25412, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel25418, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel25424, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel25430, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel25436, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel25442, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom25482
[Codegen] .set .Llabel25482, .
[Codegen] int3
[Codegen] .set .Llabel25483, .
[Codegen] .set .Lfrom25482, .Llabel25483
[Codegen] call       .Lfrom25488
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel25493, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel25502, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel25511, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel25520, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel25529, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel25538, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel25547, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel25556, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel25562, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel25568, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel25574, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel25580, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel25586, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel25592, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel25598, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel25632, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel25646, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel25653, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x30
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom25677
[Codegen] .set .Llabel25677, .
[Codegen] int3
[Codegen] .set .Llabel25678, .
[Codegen] .set .Lfrom25677, .Llabel25678
[Codegen] call       .Lfrom25683
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom25692
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BigIntLeftShift)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel25717, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel25726, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel25735, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel25744, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel25753, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel25762, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel25771, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel25780, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel25786, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel25792, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel25798, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel25804, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel25810, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel25816, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel25822, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom25862
[Codegen] .set .Llabel25862, .
[Codegen] int3
[Codegen] .set .Llabel25863, .
[Codegen] .set .Lfrom25862, .Llabel25863
[Codegen] call       .Lfrom25868
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel25873, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel25882, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel25891, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel25900, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel25909, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel25918, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel25927, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel25936, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel25942, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel25948, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel25954, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel25960, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel25966, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel25972, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel25978, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel26016, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel26030, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel26037, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x31
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom26065
[Codegen] .set .Llabel26065, .
[Codegen] int3
[Codegen] .set .Llabel26066, .
[Codegen] .set .Lfrom26065, .Llabel26066
[Codegen] call       .Lfrom26071
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom26080
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BigIntMod)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel26105, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel26114, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel26123, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel26132, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel26141, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel26150, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel26159, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel26168, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel26174, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel26180, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel26186, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel26192, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel26198, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel26204, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel26210, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom26250
[Codegen] .set .Llabel26250, .
[Codegen] int3
[Codegen] .set .Llabel26251, .
[Codegen] .set .Lfrom26250, .Llabel26251
[Codegen] call       .Lfrom26256
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel26261, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel26270, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel26279, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel26288, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel26297, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel26306, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel26315, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel26324, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel26330, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel26336, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel26342, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel26348, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel26354, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel26360, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel26366, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel26400, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel26414, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel26421, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x32
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom26449
[Codegen] .set .Llabel26449, .
[Codegen] int3
[Codegen] .set .Llabel26450, .
[Codegen] .set .Lfrom26449, .Llabel26450
[Codegen] call       .Lfrom26455
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom26464
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BigIntMul)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel26489, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel26498, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel26507, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel26516, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel26525, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel26534, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel26543, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel26552, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel26558, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel26564, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel26570, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel26576, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel26582, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel26588, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel26594, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom26634
[Codegen] .set .Llabel26634, .
[Codegen] int3
[Codegen] .set .Llabel26635, .
[Codegen] .set .Lfrom26634, .Llabel26635
[Codegen] call       .Lfrom26640
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel26645, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel26654, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel26663, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel26672, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel26681, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel26690, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel26699, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel26708, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel26714, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel26720, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel26726, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel26732, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel26738, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel26744, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel26750, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel26784, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel26798, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel26805, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x33
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom26833
[Codegen] .set .Llabel26833, .
[Codegen] int3
[Codegen] .set .Llabel26834, .
[Codegen] .set .Lfrom26833, .Llabel26834
[Codegen] call       .Lfrom26839
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom26848
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BigIntNeg)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel26873, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel26882, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel26891, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel26900, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel26909, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel26918, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel26927, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel26936, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel26942, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel26948, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel26954, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel26960, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel26966, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel26972, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel26978, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom27018
[Codegen] .set .Llabel27018, .
[Codegen] int3
[Codegen] .set .Llabel27019, .
[Codegen] .set .Lfrom27018, .Llabel27019
[Codegen] call       .Lfrom27024
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel27029, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel27038, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel27047, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel27056, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel27065, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel27074, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel27083, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel27092, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel27098, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel27104, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel27110, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel27116, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel27122, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel27128, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel27134, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel27168, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel27182, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel27189, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x34
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom27213
[Codegen] .set .Llabel27213, .
[Codegen] int3
[Codegen] .set .Llabel27214, .
[Codegen] .set .Lfrom27213, .Llabel27214
[Codegen] call       .Lfrom27219
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom27228
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BigIntPow)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel27253, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel27262, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel27271, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel27280, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel27289, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel27298, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel27307, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel27316, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel27322, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel27328, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel27334, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel27340, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel27346, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel27352, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel27358, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom27398
[Codegen] .set .Llabel27398, .
[Codegen] int3
[Codegen] .set .Llabel27399, .
[Codegen] .set .Lfrom27398, .Llabel27399
[Codegen] call       .Lfrom27404
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel27409, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel27418, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel27427, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel27436, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel27445, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel27454, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel27463, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel27472, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel27478, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel27484, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel27490, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel27496, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel27502, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel27508, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel27514, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel27552, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel27566, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel27573, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x35
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom27601
[Codegen] .set .Llabel27601, .
[Codegen] int3
[Codegen] .set .Llabel27602, .
[Codegen] .set .Lfrom27601, .Llabel27602
[Codegen] call       .Lfrom27607
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom27616
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BigIntRightShift)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel27641, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel27650, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel27659, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel27668, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel27677, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel27686, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel27695, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel27704, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel27710, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel27716, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel27722, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel27728, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel27734, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel27740, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel27746, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom27786
[Codegen] .set .Llabel27786, .
[Codegen] int3
[Codegen] .set .Llabel27787, .
[Codegen] .set .Lfrom27786, .Llabel27787
[Codegen] call       .Lfrom27792
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel27797, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel27806, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel27815, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel27824, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel27833, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel27842, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel27851, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel27860, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel27866, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel27872, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel27878, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel27884, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel27890, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel27896, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel27902, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel27936, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel27950, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel27957, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x36
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom27985
[Codegen] .set .Llabel27985, .
[Codegen] int3
[Codegen] .set .Llabel27986, .
[Codegen] .set .Lfrom27985, .Llabel27986
[Codegen] call       .Lfrom27991
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom28000
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BigIntStringEqual)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel28025, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel28034, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel28043, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel28052, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel28061, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel28070, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel28079, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel28088, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel28094, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel28100, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel28106, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel28112, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel28118, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel28124, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel28130, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom28170
[Codegen] .set .Llabel28170, .
[Codegen] int3
[Codegen] .set .Llabel28171, .
[Codegen] .set .Lfrom28170, .Llabel28171
[Codegen] call       .Lfrom28176
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel28181, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel28190, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel28199, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel28208, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel28217, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel28226, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel28235, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel28244, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel28250, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel28256, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel28262, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel28268, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel28274, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel28280, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel28286, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel28320, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel28334, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel28341, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x37
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom28377
[Codegen] .set .Llabel28377, .
[Codegen] int3
[Codegen] .set .Llabel28378, .
[Codegen] .set .Lfrom28377, .Llabel28378
[Codegen] call       .Lfrom28383
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom28391
[Codegen] .set .Llabel28391, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BigIntStringGreaterThanOrEqual)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel28420, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel28429, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel28438, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel28447, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel28456, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel28465, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel28474, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel28483, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel28489, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel28495, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel28501, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel28507, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel28513, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel28519, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel28525, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom28565
[Codegen] .set .Llabel28565, .
[Codegen] int3
[Codegen] .set .Llabel28566, .
[Codegen] .set .Lfrom28565, .Llabel28566
[Codegen] call       .Lfrom28571
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel28576, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel28585, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel28594, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel28603, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel28612, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel28621, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel28630, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel28639, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel28645, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel28651, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel28657, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel28663, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel28669, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel28675, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel28681, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel28720, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel28734, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel28741, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x38
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom28777
[Codegen] .set .Llabel28777, .
[Codegen] int3
[Codegen] .set .Llabel28778, .
[Codegen] .set .Lfrom28777, .Llabel28778
[Codegen] call       .Lfrom28783
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom28791
[Codegen] .set .Llabel28791, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BigIntStringLessThan)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel28820, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel28829, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel28838, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel28847, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel28856, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel28865, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel28874, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel28883, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel28889, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel28895, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel28901, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel28907, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel28913, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel28919, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel28925, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom28965
[Codegen] .set .Llabel28965, .
[Codegen] int3
[Codegen] .set .Llabel28966, .
[Codegen] .set .Lfrom28965, .Llabel28966
[Codegen] call       .Lfrom28971
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel28976, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel28985, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel28994, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel29003, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel29012, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel29021, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel29030, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel29039, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel29045, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel29051, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel29057, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel29063, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel29069, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel29075, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel29081, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel29120, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel29134, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel29141, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x39
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom29177
[Codegen] .set .Llabel29177, .
[Codegen] int3
[Codegen] .set .Llabel29178, .
[Codegen] .set .Lfrom29177, .Llabel29178
[Codegen] call       .Lfrom29183
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom29191
[Codegen] .set .Llabel29191, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BigIntStringNotEqual)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel29220, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel29229, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel29238, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel29247, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel29256, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel29265, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel29274, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel29283, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel29289, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel29295, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel29301, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel29307, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel29313, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel29319, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel29325, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom29365
[Codegen] .set .Llabel29365, .
[Codegen] int3
[Codegen] .set .Llabel29366, .
[Codegen] .set .Lfrom29365, .Llabel29366
[Codegen] call       .Lfrom29371
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel29376, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel29385, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel29394, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel29403, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel29412, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel29421, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel29430, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel29439, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel29445, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel29451, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel29457, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel29463, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel29469, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel29475, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel29481, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel29520, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel29534, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel29541, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x3a
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom29577
[Codegen] .set .Llabel29577, .
[Codegen] int3
[Codegen] .set .Llabel29578, .
[Codegen] .set .Lfrom29577, .Llabel29578
[Codegen] call       .Lfrom29583
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom29591
[Codegen] .set .Llabel29591, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BigIntSub)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel29620, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel29629, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel29638, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel29647, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel29656, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel29665, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel29674, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel29683, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel29689, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel29695, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel29701, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel29707, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel29713, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel29719, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel29725, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom29765
[Codegen] .set .Llabel29765, .
[Codegen] int3
[Codegen] .set .Llabel29766, .
[Codegen] .set .Lfrom29765, .Llabel29766
[Codegen] call       .Lfrom29771
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel29776, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel29785, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel29794, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel29803, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel29812, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel29821, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel29830, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel29839, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel29845, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel29851, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel29857, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel29863, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel29869, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel29875, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel29881, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel29920, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel29934, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel29941, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x3b
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom29969
[Codegen] .set .Llabel29969, .
[Codegen] int3
[Codegen] .set .Llabel29970, .
[Codegen] .set .Lfrom29969, .Llabel29970
[Codegen] call       .Lfrom29975
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom29984
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BindVarOperation)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel30009, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel30018, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel30027, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel30036, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel30045, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel30054, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel30063, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel30072, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel30078, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel30084, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel30090, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel30096, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel30102, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel30108, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel30114, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom30154
[Codegen] .set .Llabel30154, .
[Codegen] int3
[Codegen] .set .Llabel30155, .
[Codegen] .set .Lfrom30154, .Llabel30155
[Codegen] call       .Lfrom30160
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel30165, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel30174, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel30183, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel30192, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel30201, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel30210, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel30219, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel30228, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel30234, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel30240, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel30246, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel30252, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel30258, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel30264, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel30270, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel30304, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel30318, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel30325, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x3c
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel30335, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom30349
[Codegen] .set .Llabel30349, .
[Codegen] int3
[Codegen] .set .Llabel30350, .
[Codegen] .set .Lfrom30349, .Llabel30350
[Codegen] call       .Lfrom30355
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom30364
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BlockLexicalEnvironmentObjectCreateWithoutEnclosing)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel30389, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel30398, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel30407, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel30416, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel30425, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel30434, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel30443, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel30452, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel30458, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel30464, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel30470, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel30476, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel30482, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel30488, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel30494, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom30534
[Codegen] .set .Llabel30534, .
[Codegen] int3
[Codegen] .set .Llabel30535, .
[Codegen] .set .Lfrom30534, .Llabel30535
[Codegen] call       .Lfrom30540
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel30545, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel30554, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel30563, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel30572, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel30581, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel30590, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel30599, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel30608, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel30614, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel30620, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel30626, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel30632, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel30638, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel30644, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel30650, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel30688, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel30702, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel30709, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x3d
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom30733
[Codegen] .set .Llabel30733, .
[Codegen] int3
[Codegen] .set .Llabel30734, .
[Codegen] .set .Lfrom30733, .Llabel30734
[Codegen] call       .Lfrom30739
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom30748
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BoxBoxableValue)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel30773, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel30782, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel30791, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel30800, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel30809, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel30818, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel30827, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel30836, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel30842, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel30848, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel30854, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel30860, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel30866, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel30872, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel30878, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom30918
[Codegen] .set .Llabel30918, .
[Codegen] int3
[Codegen] .set .Llabel30919, .
[Codegen] .set .Lfrom30918, .Llabel30919
[Codegen] call       .Lfrom30924
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel30929, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel30938, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel30947, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel30956, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel30965, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel30974, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel30983, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel30992, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel30998, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel31004, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel31010, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel31016, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel31022, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel31028, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel31034, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel31072, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel31086, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel31093, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x3e
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom31117
[Codegen] .set .Llabel31117, .
[Codegen] int3
[Codegen] .set .Llabel31118, .
[Codegen] .set .Lfrom31117, .Llabel31118
[Codegen] call       .Lfrom31123
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom31132
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BoxNonStrictThis)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel31157, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel31166, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel31175, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel31184, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel31193, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel31202, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel31211, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel31220, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel31226, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel31232, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel31238, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel31244, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel31250, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel31256, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel31262, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom31302
[Codegen] .set .Llabel31302, .
[Codegen] int3
[Codegen] .set .Llabel31303, .
[Codegen] .set .Lfrom31302, .Llabel31303
[Codegen] call       .Lfrom31308
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel31313, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel31322, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel31331, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel31340, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel31349, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel31358, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel31367, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel31376, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel31382, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel31388, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel31394, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel31400, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel31406, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel31412, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel31418, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel31456, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel31470, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel31477, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x3f
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom31501
[Codegen] .set .Llabel31501, .
[Codegen] int3
[Codegen] .set .Llabel31502, .
[Codegen] .set .Lfrom31501, .Llabel31502
[Codegen] call       .Lfrom31507
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom31516
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (BuiltinObjectOperation)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel31541, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel31550, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel31559, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel31568, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel31577, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel31586, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel31595, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel31604, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel31610, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel31616, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel31622, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel31628, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel31634, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel31640, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel31646, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom31686
[Codegen] .set .Llabel31686, .
[Codegen] int3
[Codegen] .set .Llabel31687, .
[Codegen] .set .Lfrom31686, .Llabel31687
[Codegen] call       .Lfrom31692
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel31697, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel31706, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel31715, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel31724, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel31733, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel31742, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel31751, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel31760, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel31766, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel31772, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel31778, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel31784, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel31790, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel31796, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel31802, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel31840, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel31854, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel31861, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x40
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel31871, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom31885
[Codegen] .set .Llabel31885, .
[Codegen] int3
[Codegen] .set .Llabel31886, .
[Codegen] .set .Lfrom31885, .Llabel31886
[Codegen] call       .Lfrom31891
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom31900
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (CallDOMGetter)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel31925, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel31934, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel31943, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel31952, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel31961, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel31970, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel31979, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel31988, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel31994, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel32000, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel32006, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel32012, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel32018, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel32024, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel32030, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom32070
[Codegen] .set .Llabel32070, .
[Codegen] int3
[Codegen] .set .Llabel32071, .
[Codegen] .set .Lfrom32070, .Llabel32071
[Codegen] call       .Lfrom32076
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel32081, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel32090, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel32099, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel32108, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel32117, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel32126, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel32135, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel32144, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel32150, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel32156, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel32162, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel32168, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel32174, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel32180, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel32186, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel32224, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel32238, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel32245, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x41
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] .set .Llabel32275, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom32289
[Codegen] .set .Llabel32289, .
[Codegen] int3
[Codegen] .set .Llabel32290, .
[Codegen] .set .Lfrom32289, .Llabel32290
[Codegen] call       .Lfrom32295
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom32303
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (CallDOMSetter)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel32332, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel32341, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel32350, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel32359, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel32368, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel32377, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel32386, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel32395, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel32401, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel32407, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel32413, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel32419, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel32425, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel32431, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel32437, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom32477
[Codegen] .set .Llabel32477, .
[Codegen] int3
[Codegen] .set .Llabel32478, .
[Codegen] .set .Lfrom32477, .Llabel32478
[Codegen] call       .Lfrom32483
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel32488, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel32497, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel32506, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel32515, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel32524, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel32533, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel32542, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel32551, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel32557, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel32563, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel32569, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel32575, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel32581, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel32587, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel32593, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel32624, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel32638, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel32645, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x42
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] .set .Llabel32663, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom32677
[Codegen] .set .Llabel32677, .
[Codegen] int3
[Codegen] .set .Llabel32678, .
[Codegen] .set .Lfrom32677, .Llabel32678
[Codegen] call       .Lfrom32683
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom32691
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (CallNativeGetter)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel32716, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel32725, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel32734, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel32743, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel32752, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel32761, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel32770, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel32779, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel32785, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel32791, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel32797, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel32803, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel32809, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel32815, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel32821, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom32861
[Codegen] .set .Llabel32861, .
[Codegen] int3
[Codegen] .set .Llabel32862, .
[Codegen] .set .Lfrom32861, .Llabel32862
[Codegen] call       .Lfrom32867
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel32872, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel32881, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel32890, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel32899, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel32908, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel32917, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel32926, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel32935, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel32941, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel32947, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel32953, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel32959, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel32965, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel32971, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel32977, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel33008, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel33022, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel33029, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x43
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom33073
[Codegen] .set .Llabel33073, .
[Codegen] int3
[Codegen] .set .Llabel33074, .
[Codegen] .set .Lfrom33073, .Llabel33074
[Codegen] call       .Lfrom33079
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom33087
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (CallNativeSetter)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel33116, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel33125, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel33134, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel33143, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel33152, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel33161, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel33170, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel33179, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel33185, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel33191, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel33197, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel33203, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel33209, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel33215, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel33221, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom33261
[Codegen] .set .Llabel33261, .
[Codegen] int3
[Codegen] .set .Llabel33262, .
[Codegen] .set .Lfrom33261, .Llabel33262
[Codegen] call       .Lfrom33267
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel33272, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel33281, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel33290, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel33299, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel33308, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel33317, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel33326, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel33335, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel33341, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel33347, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel33353, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel33359, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel33365, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel33371, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel33377, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel33408, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel33422, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel33429, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x44
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom33461
[Codegen] .set .Llabel33461, .
[Codegen] int3
[Codegen] .set .Llabel33462, .
[Codegen] .set .Lfrom33461, .Llabel33462
[Codegen] call       .Lfrom33467
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom33475
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (CallObjectCreateWithShape)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel33500, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel33509, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel33518, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel33527, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel33536, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel33545, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel33554, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel33563, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel33569, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel33575, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel33581, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel33587, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel33593, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel33599, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel33605, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom33645
[Codegen] .set .Llabel33645, .
[Codegen] int3
[Codegen] .set .Llabel33646, .
[Codegen] .set .Lfrom33645, .Llabel33646
[Codegen] call       .Lfrom33651
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel33656, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel33665, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel33674, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel33683, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel33692, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel33701, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel33710, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel33719, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel33725, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel33731, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel33737, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel33743, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel33749, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel33755, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel33761, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel33792, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel33806, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel33813, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x45
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom33837
[Codegen] .set .Llabel33837, .
[Codegen] int3
[Codegen] .set .Llabel33838, .
[Codegen] .set .Lfrom33837, .Llabel33838
[Codegen] call       .Lfrom33843
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom33852
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (CanSkipAwait)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel33877, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel33886, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel33895, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel33904, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel33913, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel33922, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel33931, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel33940, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel33946, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel33952, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel33958, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel33964, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel33970, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel33976, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel33982, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom34022
[Codegen] .set .Llabel34022, .
[Codegen] int3
[Codegen] .set .Llabel34023, .
[Codegen] .set .Lfrom34022, .Llabel34023
[Codegen] call       .Lfrom34028
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel34033, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel34042, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel34051, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel34060, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel34069, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel34078, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel34087, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel34096, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel34102, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel34108, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel34114, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel34120, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel34126, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel34132, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel34138, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel34176, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel34190, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel34197, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x46
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom34229
[Codegen] .set .Llabel34229, .
[Codegen] int3
[Codegen] .set .Llabel34230, .
[Codegen] .set .Lfrom34229, .Llabel34230
[Codegen] call       .Lfrom34235
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom34243
[Codegen] .set .Llabel34243, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (CharCodeAt)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel34272, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel34281, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel34290, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel34299, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel34308, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel34317, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel34326, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel34335, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel34341, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel34347, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel34353, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel34359, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel34365, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel34371, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel34377, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom34417
[Codegen] .set .Llabel34417, .
[Codegen] int3
[Codegen] .set .Llabel34418, .
[Codegen] .set .Lfrom34417, .Llabel34418
[Codegen] call       .Lfrom34423
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel34428, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel34437, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel34446, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel34455, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel34464, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel34473, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel34482, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel34491, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel34497, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel34503, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel34509, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel34515, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel34521, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel34527, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel34533, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel34560, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel34574, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel34581, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x47
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] .set .Llabel34599, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom34617
[Codegen] .set .Llabel34617, .
[Codegen] int3
[Codegen] .set .Llabel34618, .
[Codegen] .set .Lfrom34617, .Llabel34618
[Codegen] call       .Lfrom34623
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom34631
[Codegen] .set .Llabel34631, .
[Codegen] movl       -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (CharCodeToLowerCase)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel34659, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel34668, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel34677, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel34686, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel34695, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel34704, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel34713, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel34722, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel34728, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel34734, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel34740, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel34746, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel34752, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel34758, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel34764, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom34804
[Codegen] .set .Llabel34804, .
[Codegen] int3
[Codegen] .set .Llabel34805, .
[Codegen] .set .Lfrom34804, .Llabel34805
[Codegen] call       .Lfrom34810
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel34815, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel34824, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel34833, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel34842, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel34851, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel34860, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel34869, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel34878, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel34884, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel34890, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel34896, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel34902, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel34908, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel34914, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel34920, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel34944, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel34958, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel34965, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x48
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel34975, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom34989
[Codegen] .set .Llabel34989, .
[Codegen] int3
[Codegen] .set .Llabel34990, .
[Codegen] .set .Lfrom34989, .Llabel34990
[Codegen] call       .Lfrom34995
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom35004
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (CharCodeToUpperCase)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel35029, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel35038, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel35047, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel35056, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel35065, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel35074, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel35083, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel35092, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel35098, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel35104, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel35110, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel35116, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel35122, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel35128, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel35134, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom35174
[Codegen] .set .Llabel35174, .
[Codegen] int3
[Codegen] .set .Llabel35175, .
[Codegen] .set .Lfrom35174, .Llabel35175
[Codegen] call       .Lfrom35180
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel35185, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel35194, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel35203, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel35212, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel35221, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel35230, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel35239, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel35248, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel35254, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel35260, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel35266, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel35272, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel35278, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel35284, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel35290, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel35328, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel35342, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel35349, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x49
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel35359, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom35373
[Codegen] .set .Llabel35373, .
[Codegen] int3
[Codegen] .set .Llabel35374, .
[Codegen] .set .Lfrom35373, .Llabel35374
[Codegen] call       .Lfrom35379
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom35388
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (CheckClassHeritageOperation)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel35413, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel35422, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel35431, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel35440, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel35449, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel35458, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel35467, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel35476, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel35482, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel35488, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel35494, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel35500, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel35506, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel35512, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel35518, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom35558
[Codegen] .set .Llabel35558, .
[Codegen] int3
[Codegen] .set .Llabel35559, .
[Codegen] .set .Lfrom35558, .Llabel35559
[Codegen] call       .Lfrom35564
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel35569, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel35578, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel35587, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel35596, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel35605, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel35614, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel35623, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel35632, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel35638, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel35644, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel35650, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel35656, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel35662, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel35668, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel35674, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel35712, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel35726, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel35733, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x4a
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom35757
[Codegen] .set .Llabel35757, .
[Codegen] int3
[Codegen] .set .Llabel35758, .
[Codegen] .set .Lfrom35757, .Llabel35758
[Codegen] call       .Lfrom35763
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom35771
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (CheckOverRecursed)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel35796, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel35805, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel35814, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel35823, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel35832, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel35841, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel35850, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel35859, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel35865, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel35871, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel35877, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel35883, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel35889, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel35895, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel35901, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom35941
[Codegen] .set .Llabel35941, .
[Codegen] int3
[Codegen] .set .Llabel35942, .
[Codegen] .set .Lfrom35941, .Llabel35942
[Codegen] call       .Lfrom35947
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel35952, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel35961, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel35970, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel35979, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel35988, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel35997, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel36006, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel36015, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel36021, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel36027, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel36033, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel36039, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel36045, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel36051, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel36057, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel36096, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel36110, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel36117, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x4b
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom36137
[Codegen] .set .Llabel36137, .
[Codegen] int3
[Codegen] .set .Llabel36138, .
[Codegen] .set .Lfrom36137, .Llabel36138
[Codegen] call       .Lfrom36143
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom36151
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $8
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (CheckOverRecursedBaseline)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel36176, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel36185, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel36194, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel36203, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel36212, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel36221, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel36230, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel36239, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel36245, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel36251, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel36257, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel36263, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel36269, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel36275, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel36281, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom36321
[Codegen] .set .Llabel36321, .
[Codegen] int3
[Codegen] .set .Llabel36322, .
[Codegen] .set .Lfrom36321, .Llabel36322
[Codegen] call       .Lfrom36327
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel36332, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel36341, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel36350, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel36359, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel36368, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel36377, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel36386, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel36395, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel36401, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel36407, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel36413, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel36419, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel36425, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel36431, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel36437, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel36464, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel36478, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel36485, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x4c
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel36495, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom36509
[Codegen] .set .Llabel36509, .
[Codegen] int3
[Codegen] .set .Llabel36510, .
[Codegen] .set .Lfrom36509, .Llabel36510
[Codegen] call       .Lfrom36515
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom36523
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (CheckPrivateFieldOperation)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel36548, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel36557, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel36566, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel36575, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel36584, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel36593, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel36602, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel36611, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel36617, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel36623, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel36629, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel36635, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel36641, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel36647, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel36653, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom36693
[Codegen] .set .Llabel36693, .
[Codegen] int3
[Codegen] .set .Llabel36694, .
[Codegen] .set .Lfrom36693, .Llabel36694
[Codegen] call       .Lfrom36699
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel36704, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel36713, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel36722, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel36731, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel36740, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel36749, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel36758, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel36767, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel36773, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel36779, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel36785, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel36791, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel36797, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel36803, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel36809, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel36848, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel36862, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel36869, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x4d
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] .set .Llabel36895, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom36909
[Codegen] .set .Llabel36909, .
[Codegen] int3
[Codegen] .set .Llabel36910, .
[Codegen] .set .Lfrom36909, .Llabel36910
[Codegen] call       .Lfrom36915
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom36923
[Codegen] .set .Llabel36923, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (CheckProxyGetByValueResult)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel36952, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel36961, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel36970, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel36979, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel36988, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel36997, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel37006, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel37015, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel37021, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel37027, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel37033, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel37039, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel37045, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel37051, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel37057, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom37097
[Codegen] .set .Llabel37097, .
[Codegen] int3
[Codegen] .set .Llabel37098, .
[Codegen] .set .Lfrom37097, .Llabel37098
[Codegen] call       .Lfrom37103
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel37108, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel37117, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel37126, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel37135, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel37144, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel37153, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel37162, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel37171, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel37177, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel37183, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel37189, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel37195, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel37201, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel37207, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel37213, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel37248, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel37262, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel37269, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x4e
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom37317
[Codegen] .set .Llabel37317, .
[Codegen] int3
[Codegen] .set .Llabel37318, .
[Codegen] .set .Lfrom37317, .Llabel37318
[Codegen] call       .Lfrom37323
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom37331
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ClassBodyLexicalEnvironmentObjectCreateWithoutEnclosing)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel37360, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel37369, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel37378, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel37387, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel37396, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel37405, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel37414, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel37423, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel37429, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel37435, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel37441, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel37447, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel37453, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel37459, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel37465, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom37505
[Codegen] .set .Llabel37505, .
[Codegen] int3
[Codegen] .set .Llabel37506, .
[Codegen] .set .Lfrom37505, .Llabel37506
[Codegen] call       .Lfrom37511
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel37516, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel37525, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel37534, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel37543, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel37552, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel37561, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel37570, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel37579, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel37585, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel37591, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel37597, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel37603, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel37609, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel37615, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel37621, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel37648, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel37662, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel37669, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x4f
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom37693
[Codegen] .set .Llabel37693, .
[Codegen] int3
[Codegen] .set .Llabel37694, .
[Codegen] .set .Lfrom37693, .Llabel37694
[Codegen] call       .Lfrom37699
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom37708
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (CloneRegExpObject)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel37733, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel37742, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel37751, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel37760, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel37769, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel37778, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel37787, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel37796, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel37802, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel37808, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel37814, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel37820, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel37826, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel37832, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel37838, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom37878
[Codegen] .set .Llabel37878, .
[Codegen] int3
[Codegen] .set .Llabel37879, .
[Codegen] .set .Lfrom37878, .Llabel37879
[Codegen] call       .Lfrom37884
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel37889, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel37898, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel37907, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel37916, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel37925, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel37934, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel37943, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel37952, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel37958, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel37964, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel37970, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel37976, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel37982, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel37988, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel37994, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel38032, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel38046, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel38053, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x50
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom38077
[Codegen] .set .Llabel38077, .
[Codegen] int3
[Codegen] .set .Llabel38078, .
[Codegen] .set .Lfrom38077, .Llabel38078
[Codegen] call       .Lfrom38083
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom38092
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (CloseIterOperation)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel38117, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel38126, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel38135, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel38144, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel38153, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel38162, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel38171, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel38180, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel38186, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel38192, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel38198, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel38204, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel38210, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel38216, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel38222, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom38262
[Codegen] .set .Llabel38262, .
[Codegen] int3
[Codegen] .set .Llabel38263, .
[Codegen] .set .Lfrom38262, .Llabel38263
[Codegen] call       .Lfrom38268
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel38273, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel38282, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel38291, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel38300, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel38309, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel38318, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel38327, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel38336, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel38342, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel38348, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel38354, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel38360, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel38366, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel38372, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel38378, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel38416, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel38430, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel38437, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x51
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel38447, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom38465
[Codegen] .set .Llabel38465, .
[Codegen] int3
[Codegen] .set .Llabel38466, .
[Codegen] .set .Lfrom38465, .Llabel38466
[Codegen] call       .Lfrom38471
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom38479
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (CodePointAt)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel38504, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel38513, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel38522, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel38531, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel38540, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel38549, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel38558, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel38567, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel38573, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel38579, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel38585, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel38591, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel38597, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel38603, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel38609, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom38649
[Codegen] .set .Llabel38649, .
[Codegen] int3
[Codegen] .set .Llabel38650, .
[Codegen] .set .Lfrom38649, .Llabel38650
[Codegen] call       .Lfrom38655
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel38660, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel38669, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel38678, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel38687, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel38696, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel38705, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel38714, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel38723, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel38729, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel38735, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel38741, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel38747, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel38753, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel38759, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel38765, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel38800, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel38814, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel38821, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x52
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] .set .Llabel38839, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom38857
[Codegen] .set .Llabel38857, .
[Codegen] int3
[Codegen] .set .Llabel38858, .
[Codegen] .set .Lfrom38857, .Llabel38858
[Codegen] call       .Lfrom38863
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom38871
[Codegen] .set .Llabel38871, .
[Codegen] movl       -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ConcatStrings)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel38899, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel38908, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel38917, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel38926, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel38935, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel38944, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel38953, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel38962, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel38968, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel38974, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel38980, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel38986, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel38992, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel38998, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel39004, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom39044
[Codegen] .set .Llabel39044, .
[Codegen] int3
[Codegen] .set .Llabel39045, .
[Codegen] .set .Lfrom39044, .Llabel39045
[Codegen] call       .Lfrom39050
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel39055, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel39064, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel39073, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel39082, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel39091, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel39100, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel39109, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel39118, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel39124, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel39130, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel39136, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel39142, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel39148, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel39154, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel39160, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel39184, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel39198, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel39205, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x53
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel39215, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom39237
[Codegen] .set .Llabel39237, .
[Codegen] int3
[Codegen] .set .Llabel39238, .
[Codegen] .set .Lfrom39237, .Llabel39238
[Codegen] call       .Lfrom39243
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom39252
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (CreateAsyncFromSyncIterator)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel39277, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel39286, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel39295, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel39304, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel39313, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel39322, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel39331, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel39340, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel39346, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel39352, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel39358, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel39364, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel39370, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel39376, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel39382, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom39422
[Codegen] .set .Llabel39422, .
[Codegen] int3
[Codegen] .set .Llabel39423, .
[Codegen] .set .Lfrom39422, .Llabel39423
[Codegen] call       .Lfrom39428
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel39433, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel39442, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel39451, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel39460, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel39469, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel39478, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel39487, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel39496, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel39502, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel39508, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel39514, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel39520, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel39526, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel39532, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel39538, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel39568, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel39582, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel39589, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x54
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom39617
[Codegen] .set .Llabel39617, .
[Codegen] int3
[Codegen] .set .Llabel39618, .
[Codegen] .set .Lfrom39617, .Llabel39618
[Codegen] call       .Lfrom39623
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom39632
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (CreateBigIntFromInt32)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel39657, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel39666, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel39675, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel39684, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel39693, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel39702, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel39711, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel39720, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel39726, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel39732, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel39738, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel39744, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel39750, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel39756, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel39762, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom39802
[Codegen] .set .Llabel39802, .
[Codegen] int3
[Codegen] .set .Llabel39803, .
[Codegen] .set .Lfrom39802, .Llabel39803
[Codegen] call       .Lfrom39808
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel39813, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel39822, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel39831, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel39840, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel39849, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel39858, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel39867, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel39876, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel39882, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel39888, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel39894, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel39900, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel39906, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel39912, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel39918, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel39952, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel39966, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel39973, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x55
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel39983, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom39997
[Codegen] .set .Llabel39997, .
[Codegen] int3
[Codegen] .set .Llabel39998, .
[Codegen] .set .Lfrom39997, .Llabel39998
[Codegen] call       .Lfrom40003
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom40012
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (CreateBigIntFromInt64)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel40037, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel40046, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel40055, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel40064, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel40073, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel40082, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel40091, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel40100, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel40106, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel40112, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel40118, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel40124, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel40130, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel40136, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel40142, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom40182
[Codegen] .set .Llabel40182, .
[Codegen] int3
[Codegen] .set .Llabel40183, .
[Codegen] .set .Lfrom40182, .Llabel40183
[Codegen] call       .Lfrom40188
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel40193, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel40202, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel40211, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel40220, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel40229, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel40238, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel40247, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel40256, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel40262, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel40268, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel40274, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel40280, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel40286, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel40292, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel40298, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel40336, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel40350, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel40357, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x56
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel40367, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom40381
[Codegen] .set .Llabel40381, .
[Codegen] int3
[Codegen] .set .Llabel40382, .
[Codegen] .set .Lfrom40381, .Llabel40382
[Codegen] call       .Lfrom40387
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom40396
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (CreateBigIntFromUint64)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel40421, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel40430, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel40439, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel40448, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel40457, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel40466, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel40475, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel40484, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel40490, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel40496, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel40502, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel40508, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel40514, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel40520, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel40526, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom40566
[Codegen] .set .Llabel40566, .
[Codegen] int3
[Codegen] .set .Llabel40567, .
[Codegen] .set .Lfrom40566, .Llabel40567
[Codegen] call       .Lfrom40572
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel40577, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel40586, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel40595, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel40604, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel40613, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel40622, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel40631, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel40640, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel40646, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel40652, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel40658, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel40664, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel40670, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel40676, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel40682, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel40720, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel40734, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel40741, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x57
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel40751, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom40765
[Codegen] .set .Llabel40765, .
[Codegen] int3
[Codegen] .set .Llabel40766, .
[Codegen] .set .Lfrom40765, .Llabel40766
[Codegen] call       .Lfrom40771
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom40780
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (CreateGenerator)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel40805, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel40814, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel40823, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel40832, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel40841, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel40850, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel40859, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel40868, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel40874, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel40880, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel40886, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel40892, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel40898, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel40904, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel40910, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom40950
[Codegen] .set .Llabel40950, .
[Codegen] int3
[Codegen] .set .Llabel40951, .
[Codegen] .set .Lfrom40950, .Llabel40951
[Codegen] call       .Lfrom40956
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel40961, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel40970, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel40979, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel40988, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel40997, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel41006, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel41015, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel41024, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel41030, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel41036, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel41042, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel41048, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel41054, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel41060, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel41066, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel41104, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel41118, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel41125, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x58
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom41161
[Codegen] .set .Llabel41161, .
[Codegen] int3
[Codegen] .set .Llabel41162, .
[Codegen] .set .Lfrom41161, .Llabel41162
[Codegen] call       .Lfrom41167
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom41176
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (CreateGeneratorFromFrame)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel41201, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel41210, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel41219, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel41228, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel41237, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel41246, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel41255, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel41264, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel41270, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel41276, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel41282, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel41288, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel41294, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel41300, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel41306, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom41346
[Codegen] .set .Llabel41346, .
[Codegen] int3
[Codegen] .set .Llabel41347, .
[Codegen] .set .Lfrom41346, .Llabel41347
[Codegen] call       .Lfrom41352
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel41357, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel41366, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel41375, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel41384, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel41393, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel41402, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel41411, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel41420, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel41426, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel41432, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel41438, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel41444, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel41450, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel41456, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel41462, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel41488, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel41502, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel41509, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x59
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel41519, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom41533
[Codegen] .set .Llabel41533, .
[Codegen] int3
[Codegen] .set .Llabel41534, .
[Codegen] .set .Lfrom41533, .Llabel41534
[Codegen] call       .Lfrom41539
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom41548
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (CreateSuppressedError)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel41573, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel41582, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel41591, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel41600, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel41609, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel41618, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel41627, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel41636, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel41642, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel41648, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel41654, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel41660, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel41666, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel41672, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel41678, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom41718
[Codegen] .set .Llabel41718, .
[Codegen] int3
[Codegen] .set .Llabel41719, .
[Codegen] .set .Lfrom41718, .Llabel41719
[Codegen] call       .Lfrom41724
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel41729, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel41738, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel41747, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel41756, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel41765, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel41774, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel41783, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel41792, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel41798, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel41804, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel41810, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel41816, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel41822, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel41828, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel41834, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel41872, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel41886, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel41893, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x5a
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom41921
[Codegen] .set .Llabel41921, .
[Codegen] int3
[Codegen] .set .Llabel41922, .
[Codegen] .set .Lfrom41921, .Llabel41922
[Codegen] call       .Lfrom41927
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom41936
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (CreateThisFromIC)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel41961, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel41970, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel41979, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel41988, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel41997, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel42006, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel42015, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel42024, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel42030, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel42036, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel42042, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel42048, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel42054, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel42060, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel42066, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom42106
[Codegen] .set .Llabel42106, .
[Codegen] int3
[Codegen] .set .Llabel42107, .
[Codegen] .set .Lfrom42106, .Llabel42107
[Codegen] call       .Lfrom42112
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel42117, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel42126, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel42135, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel42144, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel42153, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel42162, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel42171, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel42180, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel42186, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel42192, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel42198, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel42204, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel42210, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel42216, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel42222, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel42256, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel42270, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel42277, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x5b
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom42321
[Codegen] .set .Llabel42321, .
[Codegen] int3
[Codegen] .set .Llabel42322, .
[Codegen] .set .Lfrom42321, .Llabel42322
[Codegen] call       .Lfrom42327
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom42335
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (CreateThisFromIon)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel42364, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel42373, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel42382, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel42391, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel42400, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel42409, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel42418, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel42427, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel42433, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel42439, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel42445, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel42451, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel42457, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel42463, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel42469, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom42509
[Codegen] .set .Llabel42509, .
[Codegen] int3
[Codegen] .set .Llabel42510, .
[Codegen] .set .Lfrom42509, .Llabel42510
[Codegen] call       .Lfrom42515
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel42520, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel42529, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel42538, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel42547, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel42556, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel42565, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel42574, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel42583, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel42589, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel42595, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel42601, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel42607, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel42613, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel42619, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel42625, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel42656, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel42670, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel42677, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x5c
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom42721
[Codegen] .set .Llabel42721, .
[Codegen] int3
[Codegen] .set .Llabel42722, .
[Codegen] .set .Lfrom42721, .Llabel42722
[Codegen] call       .Lfrom42727
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom42735
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DebugAfterYield)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel42764, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel42773, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel42782, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel42791, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel42800, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel42809, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel42818, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel42827, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel42833, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel42839, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel42845, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel42851, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel42857, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel42863, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel42869, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom42909
[Codegen] .set .Llabel42909, .
[Codegen] int3
[Codegen] .set .Llabel42910, .
[Codegen] .set .Lfrom42909, .Llabel42910
[Codegen] call       .Lfrom42915
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel42920, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel42929, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel42938, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel42947, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel42956, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel42965, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel42974, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel42983, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel42989, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel42995, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel43001, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel43007, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel43013, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel43019, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel43025, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel43056, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel43070, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel43077, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x5d
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel43087, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom43101
[Codegen] .set .Llabel43101, .
[Codegen] int3
[Codegen] .set .Llabel43102, .
[Codegen] .set .Lfrom43101, .Llabel43102
[Codegen] call       .Lfrom43107
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom43115
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DebugEpilogueOnBaselineReturn)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel43140, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel43149, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel43158, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel43167, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel43176, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel43185, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel43194, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel43203, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel43209, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel43215, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel43221, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel43227, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel43233, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel43239, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel43245, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom43285
[Codegen] .set .Llabel43285, .
[Codegen] int3
[Codegen] .set .Llabel43286, .
[Codegen] .set .Lfrom43285, .Llabel43286
[Codegen] call       .Lfrom43291
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel43296, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel43305, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel43314, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel43323, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel43332, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel43341, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel43350, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel43359, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel43365, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel43371, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel43377, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel43383, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel43389, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel43395, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel43401, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel43440, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel43454, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel43461, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x5e
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel43471, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel43475, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom43489
[Codegen] .set .Llabel43489, .
[Codegen] int3
[Codegen] .set .Llabel43490, .
[Codegen] .set .Lfrom43489, .Llabel43490
[Codegen] call       .Lfrom43495
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom43503
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DebugLeaveLexicalEnv)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel43528, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel43537, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel43546, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel43555, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel43564, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel43573, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel43582, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel43591, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel43597, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel43603, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel43609, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel43615, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel43621, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel43627, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel43633, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom43673
[Codegen] .set .Llabel43673, .
[Codegen] int3
[Codegen] .set .Llabel43674, .
[Codegen] .set .Lfrom43673, .Llabel43674
[Codegen] call       .Lfrom43679
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel43684, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel43693, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel43702, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel43711, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel43720, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel43729, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel43738, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel43747, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel43753, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel43759, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel43765, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel43771, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel43777, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel43783, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel43789, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel43824, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel43838, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel43845, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x5f
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel43855, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel43859, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom43873
[Codegen] .set .Llabel43873, .
[Codegen] int3
[Codegen] .set .Llabel43874, .
[Codegen] .set .Lfrom43873, .Llabel43874
[Codegen] call       .Lfrom43879
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom43887
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DebugLeaveThenPopLexicalEnv)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel43912, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel43921, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel43930, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel43939, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel43948, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel43957, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel43966, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel43975, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel43981, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel43987, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel43993, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel43999, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel44005, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel44011, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel44017, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom44057
[Codegen] .set .Llabel44057, .
[Codegen] int3
[Codegen] .set .Llabel44058, .
[Codegen] .set .Lfrom44057, .Llabel44058
[Codegen] call       .Lfrom44063
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel44068, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel44077, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel44086, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel44095, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel44104, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel44113, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel44122, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel44131, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel44137, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel44143, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel44149, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel44155, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel44161, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel44167, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel44173, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel44208, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel44222, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel44229, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x60
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel44239, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel44243, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom44257
[Codegen] .set .Llabel44257, .
[Codegen] int3
[Codegen] .set .Llabel44258, .
[Codegen] .set .Lfrom44257, .Llabel44258
[Codegen] call       .Lfrom44263
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom44271
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (Debug_CheckSelfHosted)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel44296, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel44305, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel44314, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel44323, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel44332, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel44341, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel44350, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel44359, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel44365, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel44371, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel44377, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel44383, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel44389, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel44395, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel44401, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom44441
[Codegen] .set .Llabel44441, .
[Codegen] int3
[Codegen] .set .Llabel44442, .
[Codegen] .set .Lfrom44441, .Llabel44442
[Codegen] call       .Lfrom44447
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel44452, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel44461, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel44470, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel44479, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel44488, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel44497, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel44506, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel44515, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel44521, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel44527, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel44533, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel44539, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel44545, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel44551, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel44557, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel44592, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel44606, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel44613, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x61
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom44637
[Codegen] .set .Llabel44637, .
[Codegen] int3
[Codegen] .set .Llabel44638, .
[Codegen] .set .Lfrom44637, .Llabel44638
[Codegen] call       .Lfrom44643
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom44651
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DebuggeeFreshenLexicalEnv)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel44676, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel44685, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel44694, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel44703, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel44712, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel44721, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel44730, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel44739, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel44745, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel44751, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel44757, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel44763, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel44769, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel44775, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel44781, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom44821
[Codegen] .set .Llabel44821, .
[Codegen] int3
[Codegen] .set .Llabel44822, .
[Codegen] .set .Lfrom44821, .Llabel44822
[Codegen] call       .Lfrom44827
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel44832, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel44841, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel44850, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel44859, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel44868, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel44877, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel44886, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel44895, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel44901, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel44907, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel44913, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel44919, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel44925, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel44931, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel44937, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel44976, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel44990, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel44997, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x62
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel45007, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel45011, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom45025
[Codegen] .set .Llabel45025, .
[Codegen] int3
[Codegen] .set .Llabel45026, .
[Codegen] .set .Lfrom45025, .Llabel45026
[Codegen] call       .Lfrom45031
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom45039
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DebuggeeRecreateLexicalEnv)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel45064, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel45073, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel45082, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel45091, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel45100, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel45109, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel45118, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel45127, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel45133, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel45139, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel45145, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel45151, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel45157, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel45163, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel45169, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom45209
[Codegen] .set .Llabel45209, .
[Codegen] int3
[Codegen] .set .Llabel45210, .
[Codegen] .set .Lfrom45209, .Llabel45210
[Codegen] call       .Lfrom45215
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel45220, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel45229, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel45238, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel45247, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel45256, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel45265, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel45274, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel45283, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel45289, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel45295, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel45301, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel45307, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel45313, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel45319, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel45325, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel45360, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel45374, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel45381, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x63
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel45391, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel45395, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom45409
[Codegen] .set .Llabel45409, .
[Codegen] int3
[Codegen] .set .Llabel45410, .
[Codegen] .set .Lfrom45409, .Llabel45410
[Codegen] call       .Lfrom45415
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom45423
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DelElemOperationNonStrict)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel45448, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel45457, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel45466, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel45475, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel45484, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel45493, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel45502, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel45511, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel45517, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel45523, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel45529, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel45535, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel45541, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel45547, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel45553, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom45593
[Codegen] .set .Llabel45593, .
[Codegen] int3
[Codegen] .set .Llabel45594, .
[Codegen] .set .Lfrom45593, .Llabel45594
[Codegen] call       .Lfrom45599
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel45604, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel45613, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel45622, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel45631, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel45640, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel45649, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel45658, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel45667, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel45673, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel45679, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel45685, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel45691, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel45697, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel45703, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel45709, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel45744, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel45758, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel45765, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x64
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom45801
[Codegen] .set .Llabel45801, .
[Codegen] int3
[Codegen] .set .Llabel45802, .
[Codegen] .set .Lfrom45801, .Llabel45802
[Codegen] call       .Lfrom45807
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom45815
[Codegen] .set .Llabel45815, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DelElemOperationStrict)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel45844, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel45853, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel45862, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel45871, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel45880, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel45889, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel45898, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel45907, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel45913, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel45919, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel45925, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel45931, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel45937, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel45943, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel45949, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom45989
[Codegen] .set .Llabel45989, .
[Codegen] int3
[Codegen] .set .Llabel45990, .
[Codegen] .set .Lfrom45989, .Llabel45990
[Codegen] call       .Lfrom45995
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel46000, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel46009, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel46018, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel46027, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel46036, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel46045, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel46054, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel46063, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel46069, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel46075, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel46081, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel46087, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel46093, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel46099, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel46105, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel46144, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel46158, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel46165, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x65
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom46201
[Codegen] .set .Llabel46201, .
[Codegen] int3
[Codegen] .set .Llabel46202, .
[Codegen] .set .Lfrom46201, .Llabel46202
[Codegen] call       .Lfrom46207
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom46215
[Codegen] .set .Llabel46215, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DelPropOperationNonStrict)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel46244, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel46253, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel46262, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel46271, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel46280, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel46289, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel46298, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel46307, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel46313, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel46319, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel46325, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel46331, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel46337, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel46343, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel46349, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom46389
[Codegen] .set .Llabel46389, .
[Codegen] int3
[Codegen] .set .Llabel46390, .
[Codegen] .set .Lfrom46389, .Llabel46390
[Codegen] call       .Lfrom46395
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel46400, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel46409, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel46418, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel46427, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel46436, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel46445, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel46454, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel46463, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel46469, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel46475, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel46481, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel46487, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel46493, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel46499, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel46505, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel46544, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel46558, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel46565, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x66
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom46601
[Codegen] .set .Llabel46601, .
[Codegen] int3
[Codegen] .set .Llabel46602, .
[Codegen] .set .Lfrom46601, .Llabel46602
[Codegen] call       .Lfrom46607
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom46615
[Codegen] .set .Llabel46615, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DelPropOperationStrict)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel46644, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel46653, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel46662, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel46671, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel46680, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel46689, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel46698, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel46707, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel46713, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel46719, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel46725, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel46731, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel46737, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel46743, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel46749, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom46789
[Codegen] .set .Llabel46789, .
[Codegen] int3
[Codegen] .set .Llabel46790, .
[Codegen] .set .Lfrom46789, .Llabel46790
[Codegen] call       .Lfrom46795
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel46800, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel46809, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel46818, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel46827, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel46836, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel46845, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel46854, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel46863, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel46869, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel46875, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel46881, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel46887, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel46893, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel46899, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel46905, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel46944, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel46958, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel46965, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x67
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom47001
[Codegen] .set .Llabel47001, .
[Codegen] int3
[Codegen] .set .Llabel47002, .
[Codegen] .set .Lfrom47001, .Llabel47002
[Codegen] call       .Lfrom47007
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom47015
[Codegen] .set .Llabel47015, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DeleteNameOperation)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel47044, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel47053, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel47062, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel47071, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel47080, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel47089, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel47098, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel47107, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel47113, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel47119, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel47125, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel47131, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel47137, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel47143, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel47149, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom47189
[Codegen] .set .Llabel47189, .
[Codegen] int3
[Codegen] .set .Llabel47190, .
[Codegen] .set .Lfrom47189, .Llabel47190
[Codegen] call       .Lfrom47195
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel47200, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel47209, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel47218, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel47227, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel47236, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel47245, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel47254, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel47263, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel47269, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel47275, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel47281, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel47287, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel47293, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel47299, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel47305, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel47344, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel47358, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel47365, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x68
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom47409
[Codegen] .set .Llabel47409, .
[Codegen] int3
[Codegen] .set .Llabel47410, .
[Codegen] .set .Lfrom47409, .Llabel47410
[Codegen] call       .Lfrom47415
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom47423
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DispatchOffThreadBaselineBatch)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel47452, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel47461, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel47470, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel47479, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel47488, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel47497, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel47506, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel47515, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel47521, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel47527, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel47533, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel47539, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel47545, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel47551, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel47557, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom47597
[Codegen] .set .Llabel47597, .
[Codegen] int3
[Codegen] .set .Llabel47598, .
[Codegen] .set .Lfrom47597, .Llabel47598
[Codegen] call       .Lfrom47603
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel47608, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel47617, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel47626, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel47635, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel47644, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel47653, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel47662, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel47671, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel47677, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel47683, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel47689, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel47695, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel47701, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel47707, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel47713, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel47744, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel47758, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel47765, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x69
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom47785
[Codegen] .set .Llabel47785, .
[Codegen] int3
[Codegen] .set .Llabel47786, .
[Codegen] .set .Lfrom47785, .Llabel47786
[Codegen] call       .Lfrom47791
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom47799
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $8
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoBinaryArithFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel47824, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel47833, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel47842, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel47851, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel47860, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel47869, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel47878, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel47887, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel47893, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel47899, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel47905, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel47911, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel47917, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel47923, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel47929, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom47969
[Codegen] .set .Llabel47969, .
[Codegen] int3
[Codegen] .set .Llabel47970, .
[Codegen] .set .Lfrom47969, .Llabel47970
[Codegen] call       .Lfrom47975
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel47980, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel47989, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel47998, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel48007, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel48016, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel48025, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel48034, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel48043, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel48049, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel48055, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel48061, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel48067, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel48073, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel48079, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel48085, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel48112, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel48126, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel48133, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x6a
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r9
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel48167, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel48171, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom48185
[Codegen] .set .Llabel48185, .
[Codegen] int3
[Codegen] .set .Llabel48186, .
[Codegen] .set .Lfrom48185, .Llabel48186
[Codegen] call       .Lfrom48191
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom48199
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $56
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoBindNameFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel48228, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel48237, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel48246, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel48255, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel48264, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel48273, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel48282, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel48291, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel48297, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel48303, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel48309, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel48315, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel48321, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel48327, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel48333, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom48373
[Codegen] .set .Llabel48373, .
[Codegen] int3
[Codegen] .set .Llabel48374, .
[Codegen] .set .Lfrom48373, .Llabel48374
[Codegen] call       .Lfrom48379
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel48384, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel48393, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel48402, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel48411, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel48420, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel48429, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel48438, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel48447, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel48453, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel48459, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel48465, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel48471, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel48477, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel48483, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel48489, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel48528, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel48542, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel48549, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x6b
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel48579, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel48583, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom48597
[Codegen] .set .Llabel48597, .
[Codegen] int3
[Codegen] .set .Llabel48598, .
[Codegen] .set .Lfrom48597, .Llabel48598
[Codegen] call       .Lfrom48603
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom48611
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoCallFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel48640, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel48649, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel48658, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel48667, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel48676, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel48685, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel48694, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel48703, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel48709, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel48715, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel48721, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel48727, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel48733, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel48739, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel48745, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom48785
[Codegen] .set .Llabel48785, .
[Codegen] int3
[Codegen] .set .Llabel48786, .
[Codegen] .set .Lfrom48785, .Llabel48786
[Codegen] call       .Lfrom48791
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel48796, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel48805, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel48814, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel48823, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel48832, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel48841, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel48850, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel48859, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel48865, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel48871, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel48877, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel48883, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel48889, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel48895, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel48901, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel48928, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel48942, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel48949, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x6c
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r9
[Codegen] .set .Llabel48975, .
[Codegen] movq       0x30(%rbp), %r8
[Codegen] .set .Llabel48979, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] .set .Llabel48983, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel48987, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom49001
[Codegen] .set .Llabel49001, .
[Codegen] int3
[Codegen] .set .Llabel49002, .
[Codegen] .set .Lfrom49001, .Llabel49002
[Codegen] call       .Lfrom49007
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom49015
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoCheckPrivateFieldFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel49044, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel49053, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel49062, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel49071, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel49080, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel49089, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel49098, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel49107, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel49113, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel49119, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel49125, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel49131, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel49137, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel49143, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel49149, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom49189
[Codegen] .set .Llabel49189, .
[Codegen] int3
[Codegen] .set .Llabel49190, .
[Codegen] .set .Lfrom49189, .Llabel49190
[Codegen] call       .Lfrom49195
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel49200, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel49209, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel49218, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel49227, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel49236, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel49245, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel49254, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel49263, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel49269, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel49275, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel49281, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel49287, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel49293, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel49299, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel49305, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel49344, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel49358, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel49365, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x6d
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r9
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel49399, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel49403, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom49417
[Codegen] .set .Llabel49417, .
[Codegen] int3
[Codegen] .set .Llabel49418, .
[Codegen] .set .Lfrom49417, .Llabel49418
[Codegen] call       .Lfrom49423
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom49431
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $56
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoCloseIterFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel49460, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel49469, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel49478, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel49487, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel49496, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel49505, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel49514, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel49523, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel49529, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel49535, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel49541, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel49547, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel49553, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel49559, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel49565, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom49605
[Codegen] .set .Llabel49605, .
[Codegen] int3
[Codegen] .set .Llabel49606, .
[Codegen] .set .Lfrom49605, .Llabel49606
[Codegen] call       .Lfrom49611
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel49616, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel49625, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel49634, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel49643, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel49652, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel49661, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel49670, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel49679, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel49685, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel49691, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel49697, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel49703, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel49709, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel49715, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel49721, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel49760, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel49774, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel49781, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x6e
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel49795, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel49799, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom49813
[Codegen] .set .Llabel49813, .
[Codegen] int3
[Codegen] .set .Llabel49814, .
[Codegen] .set .Lfrom49813, .Llabel49814
[Codegen] call       .Lfrom49819
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom49827
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoCompareFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel49852, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel49861, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel49870, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel49879, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel49888, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel49897, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel49906, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel49915, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel49921, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel49927, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel49933, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel49939, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel49945, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel49951, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel49957, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom49997
[Codegen] .set .Llabel49997, .
[Codegen] int3
[Codegen] .set .Llabel49998, .
[Codegen] .set .Lfrom49997, .Llabel49998
[Codegen] call       .Lfrom50003
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel50008, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel50017, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel50026, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel50035, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel50044, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel50053, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel50062, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel50071, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel50077, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel50083, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel50089, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel50095, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel50101, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel50107, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel50113, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel50144, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel50158, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel50165, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x6f
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r9
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel50199, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel50203, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom50217
[Codegen] .set .Llabel50217, .
[Codegen] int3
[Codegen] .set .Llabel50218, .
[Codegen] .set .Lfrom50217, .Llabel50218
[Codegen] call       .Lfrom50223
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom50231
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $56
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoConcatStringObject)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel50260, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel50269, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel50278, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel50287, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel50296, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel50305, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel50314, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel50323, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel50329, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel50335, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel50341, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel50347, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel50353, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel50359, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel50365, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom50405
[Codegen] .set .Llabel50405, .
[Codegen] int3
[Codegen] .set .Llabel50406, .
[Codegen] .set .Lfrom50405, .Llabel50406
[Codegen] call       .Lfrom50411
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel50416, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel50425, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel50434, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel50443, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel50452, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel50461, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel50470, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel50479, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel50485, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel50491, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel50497, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel50503, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel50509, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel50515, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel50521, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel50560, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel50574, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel50581, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x70
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom50625
[Codegen] .set .Llabel50625, .
[Codegen] int3
[Codegen] .set .Llabel50626, .
[Codegen] .set .Lfrom50625, .Llabel50626
[Codegen] call       .Lfrom50631
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom50639
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoGetElemFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel50668, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel50677, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel50686, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel50695, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel50704, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel50713, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel50722, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel50731, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel50737, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel50743, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel50749, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel50755, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel50761, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel50767, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel50773, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom50813
[Codegen] .set .Llabel50813, .
[Codegen] int3
[Codegen] .set .Llabel50814, .
[Codegen] .set .Lfrom50813, .Llabel50814
[Codegen] call       .Lfrom50819
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel50824, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel50833, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel50842, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel50851, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel50860, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel50869, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel50878, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel50887, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel50893, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel50899, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel50905, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel50911, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel50917, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel50923, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel50929, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel50960, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel50974, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel50981, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x71
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r9
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel51015, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel51019, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom51033
[Codegen] .set .Llabel51033, .
[Codegen] int3
[Codegen] .set .Llabel51034, .
[Codegen] .set .Lfrom51033, .Llabel51034
[Codegen] call       .Lfrom51039
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom51047
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $56
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoGetElemSuperFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel51076, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel51085, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel51094, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel51103, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel51112, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel51121, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel51130, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel51139, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel51145, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel51151, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel51157, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel51163, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel51169, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel51175, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel51181, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom51221
[Codegen] .set .Llabel51221, .
[Codegen] int3
[Codegen] .set .Llabel51222, .
[Codegen] .set .Lfrom51221, .Llabel51222
[Codegen] call       .Lfrom51227
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel51232, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel51241, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel51250, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel51259, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel51268, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel51277, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel51286, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel51295, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel51301, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel51307, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel51313, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel51319, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel51325, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel51331, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel51337, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel51376, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel51390, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel51397, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x72
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] subq       $16, %rsp
[Codegen] leaq       -0x10(%rbp), %r11
[Codegen] movq       %r11, 0x0(%rsp)
[Codegen] leaq       0x38(%rbp), %r9
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel51443, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel51447, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom51461
[Codegen] .set .Llabel51461, .
[Codegen] int3
[Codegen] .set .Llabel51462, .
[Codegen] .set .Lfrom51461, .Llabel51462
[Codegen] call       .Lfrom51467
[Codegen] addq       $16, %rsp
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom51479
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $72
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoGetImportFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel51508, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel51517, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel51526, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel51535, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel51544, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel51553, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel51562, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel51571, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel51577, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel51583, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel51589, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel51595, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel51601, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel51607, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel51613, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom51653
[Codegen] .set .Llabel51653, .
[Codegen] int3
[Codegen] .set .Llabel51654, .
[Codegen] .set .Lfrom51653, .Llabel51654
[Codegen] call       .Lfrom51659
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel51664, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel51673, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel51682, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel51691, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel51700, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel51709, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel51718, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel51727, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel51733, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel51739, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel51745, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel51751, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel51757, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel51763, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel51769, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel51808, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel51822, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel51829, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x73
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] .set .Llabel51855, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel51859, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom51873
[Codegen] .set .Llabel51873, .
[Codegen] int3
[Codegen] .set .Llabel51874, .
[Codegen] .set .Lfrom51873, .Llabel51874
[Codegen] call       .Lfrom51879
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom51887
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoGetIteratorFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel51916, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel51925, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel51934, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel51943, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel51952, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel51961, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel51970, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel51979, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel51985, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel51991, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel51997, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel52003, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel52009, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel52015, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel52021, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom52061
[Codegen] .set .Llabel52061, .
[Codegen] int3
[Codegen] .set .Llabel52062, .
[Codegen] .set .Lfrom52061, .Llabel52062
[Codegen] call       .Lfrom52067
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel52072, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel52081, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel52090, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel52099, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel52108, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel52117, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel52126, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel52135, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel52141, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel52147, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel52153, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel52159, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel52165, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel52171, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel52177, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel52208, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel52222, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel52229, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x74
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel52259, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel52263, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom52277
[Codegen] .set .Llabel52277, .
[Codegen] int3
[Codegen] .set .Llabel52278, .
[Codegen] .set .Lfrom52277, .Llabel52278
[Codegen] call       .Lfrom52283
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom52291
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoGetNameFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel52320, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel52329, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel52338, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel52347, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel52356, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel52365, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel52374, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel52383, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel52389, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel52395, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel52401, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel52407, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel52413, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel52419, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel52425, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom52465
[Codegen] .set .Llabel52465, .
[Codegen] int3
[Codegen] .set .Llabel52466, .
[Codegen] .set .Lfrom52465, .Llabel52466
[Codegen] call       .Lfrom52471
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel52476, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel52485, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel52494, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel52503, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel52512, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel52521, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel52530, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel52539, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel52545, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel52551, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel52557, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel52563, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel52569, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel52575, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel52581, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel52608, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel52622, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel52629, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x75
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel52659, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel52663, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom52677
[Codegen] .set .Llabel52677, .
[Codegen] int3
[Codegen] .set .Llabel52678, .
[Codegen] .set .Lfrom52677, .Llabel52678
[Codegen] call       .Lfrom52683
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom52691
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoGetPropFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel52720, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel52729, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel52738, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel52747, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel52756, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel52765, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel52774, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel52783, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel52789, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel52795, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel52801, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel52807, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel52813, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel52819, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel52825, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom52865
[Codegen] .set .Llabel52865, .
[Codegen] int3
[Codegen] .set .Llabel52866, .
[Codegen] .set .Lfrom52865, .Llabel52866
[Codegen] call       .Lfrom52871
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel52876, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel52885, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel52894, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel52903, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel52912, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel52921, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel52930, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel52939, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel52945, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel52951, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel52957, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel52963, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel52969, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel52975, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel52981, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel53008, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel53022, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel53029, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x76
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel53059, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel53063, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom53077
[Codegen] .set .Llabel53077, .
[Codegen] int3
[Codegen] .set .Llabel53078, .
[Codegen] .set .Lfrom53077, .Llabel53078
[Codegen] call       .Lfrom53083
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom53091
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoGetPropSuperFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel53120, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel53129, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel53138, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel53147, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel53156, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel53165, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel53174, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel53183, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel53189, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel53195, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel53201, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel53207, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel53213, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel53219, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel53225, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom53265
[Codegen] .set .Llabel53265, .
[Codegen] int3
[Codegen] .set .Llabel53266, .
[Codegen] .set .Lfrom53265, .Llabel53266
[Codegen] call       .Lfrom53271
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel53276, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel53285, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel53294, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel53303, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel53312, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel53321, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel53330, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel53339, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel53345, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel53351, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel53357, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel53363, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel53369, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel53375, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel53381, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel53408, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel53422, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel53429, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x77
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r9
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel53463, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel53467, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom53481
[Codegen] .set .Llabel53481, .
[Codegen] int3
[Codegen] .set .Llabel53482, .
[Codegen] .set .Lfrom53481, .Llabel53482
[Codegen] call       .Lfrom53487
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom53495
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoHasOwnFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel53524, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel53533, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel53542, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel53551, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel53560, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel53569, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel53578, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel53587, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel53593, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel53599, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel53605, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel53611, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel53617, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel53623, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel53629, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom53669
[Codegen] .set .Llabel53669, .
[Codegen] int3
[Codegen] .set .Llabel53670, .
[Codegen] .set .Lfrom53669, .Llabel53670
[Codegen] call       .Lfrom53675
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel53680, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel53689, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel53698, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel53707, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel53716, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel53725, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel53734, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel53743, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel53749, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel53755, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel53761, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel53767, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel53773, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel53779, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel53785, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel53824, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel53838, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel53845, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x78
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r9
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel53879, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel53883, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom53897
[Codegen] .set .Llabel53897, .
[Codegen] int3
[Codegen] .set .Llabel53898, .
[Codegen] .set .Lfrom53897, .Llabel53898
[Codegen] call       .Lfrom53903
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom53911
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $56
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoInFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel53940, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel53949, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel53958, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel53967, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel53976, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel53985, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel53994, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel54003, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel54009, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel54015, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel54021, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel54027, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel54033, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel54039, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel54045, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom54085
[Codegen] .set .Llabel54085, .
[Codegen] int3
[Codegen] .set .Llabel54086, .
[Codegen] .set .Lfrom54085, .Llabel54086
[Codegen] call       .Lfrom54091
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel54096, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel54105, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel54114, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel54123, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel54132, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel54141, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel54150, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel54159, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel54165, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel54171, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel54177, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel54183, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel54189, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel54195, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel54201, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel54240, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel54254, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel54261, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x79
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r9
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel54295, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel54299, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom54313
[Codegen] .set .Llabel54313, .
[Codegen] int3
[Codegen] .set .Llabel54314, .
[Codegen] .set .Lfrom54313, .Llabel54314
[Codegen] call       .Lfrom54319
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom54327
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $56
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoInstanceOfFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel54356, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel54365, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel54374, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel54383, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel54392, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel54401, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel54410, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel54419, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel54425, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel54431, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel54437, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel54443, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel54449, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel54455, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel54461, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom54501
[Codegen] .set .Llabel54501, .
[Codegen] int3
[Codegen] .set .Llabel54502, .
[Codegen] .set .Lfrom54501, .Llabel54502
[Codegen] call       .Lfrom54507
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel54512, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel54521, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel54530, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel54539, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel54548, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel54557, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel54566, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel54575, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel54581, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel54587, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel54593, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel54599, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel54605, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel54611, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel54617, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel54656, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel54670, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel54677, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x7a
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r9
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel54711, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel54715, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom54729
[Codegen] .set .Llabel54729, .
[Codegen] int3
[Codegen] .set .Llabel54730, .
[Codegen] .set .Lfrom54729, .Llabel54730
[Codegen] call       .Lfrom54735
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom54743
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $56
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoLambdaFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel54772, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel54781, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel54790, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel54799, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel54808, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel54817, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel54826, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel54835, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel54841, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel54847, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel54853, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel54859, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel54865, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel54871, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel54877, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom54917
[Codegen] .set .Llabel54917, .
[Codegen] int3
[Codegen] .set .Llabel54918, .
[Codegen] .set .Lfrom54917, .Llabel54918
[Codegen] call       .Lfrom54923
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel54928, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel54937, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel54946, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel54955, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel54964, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel54973, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel54982, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel54991, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel54997, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel55003, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel55009, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel55015, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel55021, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel55027, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel55033, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel55072, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel55086, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel55093, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x7b
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] .set .Llabel55119, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel55123, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom55137
[Codegen] .set .Llabel55137, .
[Codegen] int3
[Codegen] .set .Llabel55138, .
[Codegen] .set .Lfrom55137, .Llabel55138
[Codegen] call       .Lfrom55143
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom55151
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoLazyConstantFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel55180, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel55189, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel55198, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel55207, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel55216, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel55225, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel55234, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel55243, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel55249, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel55255, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel55261, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel55267, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel55273, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel55279, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel55285, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom55325
[Codegen] .set .Llabel55325, .
[Codegen] int3
[Codegen] .set .Llabel55326, .
[Codegen] .set .Lfrom55325, .Llabel55326
[Codegen] call       .Lfrom55331
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel55336, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel55345, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel55354, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel55363, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel55372, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel55381, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel55390, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel55399, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel55405, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel55411, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel55417, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel55423, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel55429, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel55435, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel55441, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel55472, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel55486, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel55493, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x7c
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] .set .Llabel55519, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel55523, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom55537
[Codegen] .set .Llabel55537, .
[Codegen] int3
[Codegen] .set .Llabel55538, .
[Codegen] .set .Lfrom55537, .Llabel55538
[Codegen] call       .Lfrom55543
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom55551
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoNewArrayFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel55580, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel55589, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel55598, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel55607, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel55616, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel55625, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel55634, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel55643, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel55649, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel55655, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel55661, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel55667, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel55673, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel55679, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel55685, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom55725
[Codegen] .set .Llabel55725, .
[Codegen] int3
[Codegen] .set .Llabel55726, .
[Codegen] .set .Lfrom55725, .Llabel55726
[Codegen] call       .Lfrom55731
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel55736, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel55745, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel55754, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel55763, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel55772, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel55781, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel55790, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel55799, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel55805, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel55811, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel55817, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel55823, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel55829, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel55835, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel55841, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel55872, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel55886, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel55893, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x7d
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] .set .Llabel55919, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel55923, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom55937
[Codegen] .set .Llabel55937, .
[Codegen] int3
[Codegen] .set .Llabel55938, .
[Codegen] .set .Lfrom55937, .Llabel55938
[Codegen] call       .Lfrom55943
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom55951
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoNewObjectFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel55980, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel55989, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel55998, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel56007, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel56016, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel56025, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel56034, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel56043, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel56049, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel56055, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel56061, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel56067, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel56073, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel56079, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel56085, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom56125
[Codegen] .set .Llabel56125, .
[Codegen] int3
[Codegen] .set .Llabel56126, .
[Codegen] .set .Lfrom56125, .Llabel56126
[Codegen] call       .Lfrom56131
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel56136, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel56145, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel56154, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel56163, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel56172, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel56181, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel56190, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel56199, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel56205, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel56211, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel56217, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel56223, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel56229, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel56235, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel56241, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel56272, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel56286, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel56293, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x7e
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] .set .Llabel56319, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel56323, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom56337
[Codegen] .set .Llabel56337, .
[Codegen] int3
[Codegen] .set .Llabel56338, .
[Codegen] .set .Lfrom56337, .Llabel56338
[Codegen] call       .Lfrom56343
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom56351
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoOptimizeGetIteratorFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel56380, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel56389, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel56398, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel56407, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel56416, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel56425, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel56434, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel56443, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel56449, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel56455, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel56461, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel56467, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel56473, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel56479, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel56485, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom56525
[Codegen] .set .Llabel56525, .
[Codegen] int3
[Codegen] .set .Llabel56526, .
[Codegen] .set .Lfrom56525, .Llabel56526
[Codegen] call       .Lfrom56531
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel56536, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel56545, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel56554, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel56563, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel56572, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel56581, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel56590, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel56599, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel56605, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel56611, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel56617, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel56623, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel56629, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel56635, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel56641, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel56672, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel56686, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel56693, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x7f
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel56723, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel56727, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom56741
[Codegen] .set .Llabel56741, .
[Codegen] int3
[Codegen] .set .Llabel56742, .
[Codegen] .set .Lfrom56741, .Llabel56742
[Codegen] call       .Lfrom56747
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom56755
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoOptimizeSpreadCallFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel56784, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel56793, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel56802, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel56811, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel56820, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel56829, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel56838, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel56847, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel56853, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel56859, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel56865, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel56871, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel56877, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel56883, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel56889, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom56929
[Codegen] .set .Llabel56929, .
[Codegen] int3
[Codegen] .set .Llabel56930, .
[Codegen] .set .Lfrom56929, .Llabel56930
[Codegen] call       .Lfrom56935
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel56940, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel56949, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel56958, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel56967, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel56976, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel56985, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel56994, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel57003, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel57009, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel57015, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel57021, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel57027, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel57033, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel57039, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel57045, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel57072, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel57086, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel57093, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x80
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel57126, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel57130, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom57144
[Codegen] .set .Llabel57144, .
[Codegen] int3
[Codegen] .set .Llabel57145, .
[Codegen] .set .Lfrom57144, .Llabel57145
[Codegen] call       .Lfrom57150
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom57158
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoRestFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel57187, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel57196, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel57205, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel57214, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel57223, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel57232, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel57241, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel57250, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel57256, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel57262, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel57268, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel57274, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel57280, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel57286, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel57292, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom57332
[Codegen] .set .Llabel57332, .
[Codegen] int3
[Codegen] .set .Llabel57333, .
[Codegen] .set .Lfrom57332, .Llabel57333
[Codegen] call       .Lfrom57338
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel57343, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel57352, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel57361, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel57370, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel57379, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel57388, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel57397, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel57406, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel57412, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel57418, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel57424, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel57430, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel57436, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel57442, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel57448, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel57472, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel57486, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel57493, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x81
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] .set .Llabel57522, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel57526, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom57540
[Codegen] .set .Llabel57540, .
[Codegen] int3
[Codegen] .set .Llabel57541, .
[Codegen] .set .Lfrom57540, .Llabel57541
[Codegen] call       .Lfrom57546
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom57554
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoSetElemFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel57583, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel57592, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel57601, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel57610, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel57619, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel57628, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel57637, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel57646, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel57652, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel57658, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel57664, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel57670, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel57676, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel57682, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel57688, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom57728
[Codegen] .set .Llabel57728, .
[Codegen] int3
[Codegen] .set .Llabel57729, .
[Codegen] .set .Lfrom57728, .Llabel57729
[Codegen] call       .Lfrom57734
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel57739, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel57748, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel57757, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel57766, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel57775, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel57784, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel57793, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel57802, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel57808, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel57814, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel57820, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel57826, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel57832, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel57838, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel57844, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel57872, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel57886, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel57893, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x82
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] subq       $16, %rsp
[Codegen] leaq       0x40(%rbp), %r11
[Codegen] movq       %r11, 0x0(%rsp)
[Codegen] leaq       0x38(%rbp), %r9
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] .set .Llabel57926, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] .set .Llabel57930, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel57934, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom57948
[Codegen] .set .Llabel57948, .
[Codegen] int3
[Codegen] .set .Llabel57949, .
[Codegen] .set .Lfrom57948, .Llabel57949
[Codegen] call       .Lfrom57954
[Codegen] addq       $16, %rsp
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom57966
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $72
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoSetPropFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel57991, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel58000, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel58009, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel58018, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel58027, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel58036, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel58045, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel58054, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel58060, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel58066, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel58072, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel58078, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel58084, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel58090, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel58096, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom58136
[Codegen] .set .Llabel58136, .
[Codegen] int3
[Codegen] .set .Llabel58137, .
[Codegen] .set .Lfrom58136, .Llabel58137
[Codegen] call       .Lfrom58142
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel58147, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel58156, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel58165, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel58174, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel58183, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel58192, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel58201, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel58210, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel58216, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel58222, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel58228, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel58234, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel58240, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel58246, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel58252, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel58288, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel58302, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel58309, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x83
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x38(%rbp), %r9
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] .set .Llabel58330, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] .set .Llabel58334, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel58338, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom58352
[Codegen] .set .Llabel58352, .
[Codegen] int3
[Codegen] .set .Llabel58353, .
[Codegen] .set .Lfrom58352, .Llabel58353
[Codegen] call       .Lfrom58358
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom58366
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $56
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoSpreadCallFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel58391, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel58400, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel58409, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel58418, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel58427, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel58436, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel58445, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel58454, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel58460, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel58466, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel58472, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel58478, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel58484, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel58490, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel58496, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom58536
[Codegen] .set .Llabel58536, .
[Codegen] int3
[Codegen] .set .Llabel58537, .
[Codegen] .set .Lfrom58536, .Llabel58537
[Codegen] call       .Lfrom58542
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel58547, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel58556, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel58565, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel58574, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel58583, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel58592, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel58601, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel58610, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel58616, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel58622, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel58628, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel58634, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel58640, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel58646, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel58652, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel58688, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel58702, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel58709, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x84
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r8
[Codegen] .set .Llabel58738, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] .set .Llabel58742, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel58746, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom58760
[Codegen] .set .Llabel58760, .
[Codegen] int3
[Codegen] .set .Llabel58761, .
[Codegen] .set .Lfrom58760, .Llabel58761
[Codegen] call       .Lfrom58766
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom58774
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoStringToInt64)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel58803, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel58812, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel58821, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel58830, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel58839, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel58848, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel58857, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel58866, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel58872, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel58878, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel58884, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel58890, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel58896, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel58902, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel58908, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom58948
[Codegen] .set .Llabel58948, .
[Codegen] int3
[Codegen] .set .Llabel58949, .
[Codegen] .set .Lfrom58948, .Llabel58949
[Codegen] call       .Lfrom58954
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel58959, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel58968, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel58977, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel58986, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel58995, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel59004, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel59013, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel59022, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel59028, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel59034, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel59040, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel59046, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel59052, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel59058, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel59064, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel59088, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel59102, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel59109, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x85
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel59122, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom59140
[Codegen] .set .Llabel59140, .
[Codegen] int3
[Codegen] .set .Llabel59141, .
[Codegen] .set .Lfrom59140, .Llabel59141
[Codegen] call       .Lfrom59146
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom59154
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoToBoolFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel59179, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel59188, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel59197, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel59206, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel59215, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel59224, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel59233, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel59242, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel59248, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel59254, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel59260, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel59266, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel59272, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel59278, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel59284, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom59324
[Codegen] .set .Llabel59324, .
[Codegen] int3
[Codegen] .set .Llabel59325, .
[Codegen] .set .Lfrom59324, .Llabel59325
[Codegen] call       .Lfrom59330
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel59335, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel59344, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel59353, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel59362, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel59371, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel59380, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel59389, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel59398, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel59404, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel59410, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel59416, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel59422, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel59428, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel59434, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel59440, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel59472, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel59486, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel59493, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x86
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel59526, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel59530, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom59544
[Codegen] .set .Llabel59544, .
[Codegen] int3
[Codegen] .set .Llabel59545, .
[Codegen] .set .Lfrom59544, .Llabel59545
[Codegen] call       .Lfrom59550
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom59558
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoToPropertyKeyFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel59587, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel59596, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel59605, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel59614, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel59623, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel59632, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel59641, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel59650, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel59656, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel59662, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel59668, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel59674, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel59680, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel59686, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel59692, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom59732
[Codegen] .set .Llabel59732, .
[Codegen] int3
[Codegen] .set .Llabel59733, .
[Codegen] .set .Lfrom59732, .Llabel59733
[Codegen] call       .Lfrom59738
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel59743, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel59752, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel59761, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel59770, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel59779, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel59788, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel59797, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel59806, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel59812, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel59818, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel59824, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel59830, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel59836, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel59842, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel59848, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel59872, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel59886, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel59893, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x87
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel59926, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel59930, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom59944
[Codegen] .set .Llabel59944, .
[Codegen] int3
[Codegen] .set .Llabel59945, .
[Codegen] .set .Lfrom59944, .Llabel59945
[Codegen] call       .Lfrom59950
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom59958
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoTrialInlining)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel59987, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel59996, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel60005, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel60014, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel60023, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel60032, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel60041, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel60050, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel60056, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel60062, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel60068, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel60074, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel60080, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel60086, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel60092, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom60132
[Codegen] .set .Llabel60132, .
[Codegen] int3
[Codegen] .set .Llabel60133, .
[Codegen] .set .Lfrom60132, .Llabel60133
[Codegen] call       .Lfrom60138
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel60143, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel60152, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel60161, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel60170, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel60179, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel60188, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel60197, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel60206, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel60212, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel60218, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel60224, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel60230, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel60236, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel60242, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel60248, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel60272, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel60286, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel60293, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x88
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel60306, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom60320
[Codegen] .set .Llabel60320, .
[Codegen] int3
[Codegen] .set .Llabel60321, .
[Codegen] .set .Lfrom60320, .Llabel60321
[Codegen] call       .Lfrom60326
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom60334
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoTypeOfEqFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel60359, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel60368, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel60377, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel60386, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel60395, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel60404, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel60413, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel60422, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel60428, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel60434, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel60440, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel60446, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel60452, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel60458, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel60464, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom60504
[Codegen] .set .Llabel60504, .
[Codegen] int3
[Codegen] .set .Llabel60505, .
[Codegen] .set .Lfrom60504, .Llabel60505
[Codegen] call       .Lfrom60510
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel60515, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel60524, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel60533, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel60542, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel60551, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel60560, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel60569, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel60578, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel60584, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel60590, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel60596, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel60602, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel60608, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel60614, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel60620, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel60656, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel60670, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel60677, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x89
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel60710, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel60714, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom60728
[Codegen] .set .Llabel60728, .
[Codegen] int3
[Codegen] .set .Llabel60729, .
[Codegen] .set .Lfrom60728, .Llabel60729
[Codegen] call       .Lfrom60734
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom60742
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoTypeOfFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel60771, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel60780, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel60789, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel60798, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel60807, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel60816, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel60825, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel60834, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel60840, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel60846, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel60852, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel60858, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel60864, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel60870, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel60876, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom60916
[Codegen] .set .Llabel60916, .
[Codegen] int3
[Codegen] .set .Llabel60917, .
[Codegen] .set .Lfrom60916, .Llabel60917
[Codegen] call       .Lfrom60922
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel60927, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel60936, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel60945, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel60954, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel60963, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel60972, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel60981, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel60990, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel60996, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel61002, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel61008, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel61014, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel61020, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel61026, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel61032, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel61056, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel61070, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel61077, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x8a
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel61110, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel61114, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom61128
[Codegen] .set .Llabel61128, .
[Codegen] int3
[Codegen] .set .Llabel61129, .
[Codegen] .set .Lfrom61128, .Llabel61129
[Codegen] call       .Lfrom61134
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom61142
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (DoUnaryArithFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel61171, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel61180, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel61189, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel61198, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel61207, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel61216, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel61225, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel61234, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel61240, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel61246, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel61252, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel61258, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel61264, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel61270, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel61276, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom61316
[Codegen] .set .Llabel61316, .
[Codegen] int3
[Codegen] .set .Llabel61317, .
[Codegen] .set .Lfrom61316, .Llabel61317
[Codegen] call       .Lfrom61322
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel61327, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel61336, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel61345, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel61354, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel61363, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel61372, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel61381, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel61390, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel61396, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel61402, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel61408, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel61414, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel61420, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel61426, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel61432, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel61456, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel61470, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel61477, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x8b
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel61510, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel61514, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom61528
[Codegen] .set .Llabel61528, .
[Codegen] int3
[Codegen] .set .Llabel61529, .
[Codegen] .set .Lfrom61528, .Llabel61529
[Codegen] call       .Lfrom61534
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom61542
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (EnterWith)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel61571, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel61580, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel61589, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel61598, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel61607, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel61616, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel61625, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel61634, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel61640, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel61646, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel61652, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel61658, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel61664, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel61670, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel61676, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom61716
[Codegen] .set .Llabel61716, .
[Codegen] int3
[Codegen] .set .Llabel61717, .
[Codegen] .set .Lfrom61716, .Llabel61717
[Codegen] call       .Lfrom61722
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel61727, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel61736, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel61745, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel61754, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel61763, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel61772, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel61781, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel61790, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel61796, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel61802, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel61808, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel61814, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel61820, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel61826, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel61832, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel61856, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel61870, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel61877, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x8c
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] .set .Llabel61898, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom61912
[Codegen] .set .Llabel61912, .
[Codegen] int3
[Codegen] .set .Llabel61913, .
[Codegen] .set .Lfrom61912, .Llabel61913
[Codegen] call       .Lfrom61918
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom61926
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ExtractAwaitValue)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel61951, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel61960, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel61969, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel61978, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel61987, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel61996, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel62005, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel62014, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel62020, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel62026, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel62032, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel62038, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel62044, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel62050, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel62056, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom62096
[Codegen] .set .Llabel62096, .
[Codegen] int3
[Codegen] .set .Llabel62097, .
[Codegen] .set .Lfrom62096, .Llabel62097
[Codegen] call       .Lfrom62102
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel62107, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel62116, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel62125, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel62134, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel62143, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel62152, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel62161, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel62170, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel62176, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel62182, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel62188, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel62194, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel62200, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel62206, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel62212, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel62240, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel62254, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel62261, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x8d
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom62304
[Codegen] .set .Llabel62304, .
[Codegen] int3
[Codegen] .set .Llabel62305, .
[Codegen] .set .Lfrom62304, .Llabel62305
[Codegen] call       .Lfrom62310
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom62318
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (FinalSuspend)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel62347, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel62356, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel62365, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel62374, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel62383, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel62392, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel62401, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel62410, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel62416, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel62422, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel62428, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel62434, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel62440, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel62446, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel62452, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom62492
[Codegen] .set .Llabel62492, .
[Codegen] int3
[Codegen] .set .Llabel62493, .
[Codegen] .set .Lfrom62492, .Llabel62493
[Codegen] call       .Lfrom62498
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel62503, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel62512, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel62521, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel62530, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel62539, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel62548, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel62557, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel62566, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel62572, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel62578, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel62584, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel62590, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel62596, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel62602, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel62608, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel62640, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel62654, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel62661, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x8e
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel62674, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom62692
[Codegen] .set .Llabel62692, .
[Codegen] int3
[Codegen] .set .Llabel62693, .
[Codegen] .set .Lfrom62692, .Llabel62693
[Codegen] call       .Lfrom62698
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom62706
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (FreshenLexicalEnv)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel62731, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel62740, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel62749, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel62758, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel62767, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel62776, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel62785, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel62794, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel62800, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel62806, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel62812, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel62818, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel62824, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel62830, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel62836, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom62876
[Codegen] .set .Llabel62876, .
[Codegen] int3
[Codegen] .set .Llabel62877, .
[Codegen] .set .Lfrom62876, .Llabel62877
[Codegen] call       .Lfrom62882
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel62887, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel62896, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel62905, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel62914, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel62923, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel62932, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel62941, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel62950, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel62956, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel62962, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel62968, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel62974, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel62980, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel62986, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel62992, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel63024, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel63038, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel63045, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x8f
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel63058, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom63072
[Codegen] .set .Llabel63072, .
[Codegen] int3
[Codegen] .set .Llabel63073, .
[Codegen] .set .Lfrom63072, .Llabel63073
[Codegen] call       .Lfrom63078
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom63086
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (FunWithProtoOperation)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel63111, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel63120, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel63129, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel63138, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel63147, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel63156, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel63165, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel63174, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel63180, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel63186, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel63192, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel63198, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel63204, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel63210, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel63216, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom63256
[Codegen] .set .Llabel63256, .
[Codegen] int3
[Codegen] .set .Llabel63257, .
[Codegen] .set .Lfrom63256, .Llabel63257
[Codegen] call       .Lfrom63262
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel63267, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel63276, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel63285, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel63294, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel63303, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel63312, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel63321, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel63330, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel63336, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel63342, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel63348, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel63354, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel63360, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel63366, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel63372, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel63408, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel63422, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel63429, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x90
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom63464
[Codegen] .set .Llabel63464, .
[Codegen] int3
[Codegen] .set .Llabel63465, .
[Codegen] .set .Lfrom63464, .Llabel63465
[Codegen] call       .Lfrom63470
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom63479
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (FunctionBindCreate)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel63504, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel63513, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel63522, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel63531, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel63540, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel63549, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel63558, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel63567, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel63573, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel63579, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel63585, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel63591, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel63597, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel63603, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel63609, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom63649
[Codegen] .set .Llabel63649, .
[Codegen] int3
[Codegen] .set .Llabel63650, .
[Codegen] .set .Lfrom63649, .Llabel63650
[Codegen] call       .Lfrom63655
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel63660, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel63669, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel63678, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel63687, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel63696, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel63705, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel63714, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel63723, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel63729, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel63735, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel63741, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel63747, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel63753, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel63759, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel63765, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel63792, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel63806, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel63813, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x91
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom63840
[Codegen] .set .Llabel63840, .
[Codegen] int3
[Codegen] .set .Llabel63841, .
[Codegen] .set .Lfrom63840, .Llabel63841
[Codegen] call       .Lfrom63846
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom63855
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (FunctionBindImpl)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel63880, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel63889, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel63898, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel63907, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel63916, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel63925, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel63934, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel63943, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel63949, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel63955, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel63961, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel63967, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel63973, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel63979, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel63985, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom64025
[Codegen] .set .Llabel64025, .
[Codegen] int3
[Codegen] .set .Llabel64026, .
[Codegen] .set .Lfrom64025, .Llabel64026
[Codegen] call       .Lfrom64031
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel64036, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel64045, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel64054, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel64063, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel64072, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel64081, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel64090, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel64099, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel64105, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel64111, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel64117, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel64123, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel64129, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel64135, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel64141, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel64176, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel64190, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel64197, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x92
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] .set .Llabel64214, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] .set .Llabel64218, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom64236
[Codegen] .set .Llabel64236, .
[Codegen] int3
[Codegen] .set .Llabel64237, .
[Codegen] .set .Lfrom64236, .Llabel64237
[Codegen] call       .Lfrom64242
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom64251
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (FunctionBindSpecializedBaseline)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel64276, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel64285, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel64294, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel64303, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel64312, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel64321, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel64330, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel64339, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel64345, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel64351, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel64357, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel64363, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel64369, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel64375, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel64381, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom64421
[Codegen] .set .Llabel64421, .
[Codegen] int3
[Codegen] .set .Llabel64422, .
[Codegen] .set .Lfrom64421, .Llabel64422
[Codegen] call       .Lfrom64427
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel64432, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel64441, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel64450, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel64459, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel64468, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel64477, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel64486, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel64495, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel64501, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel64507, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel64513, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel64519, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel64525, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel64531, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel64537, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel64576, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel64590, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel64597, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x93
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] .set .Llabel64614, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] .set .Llabel64618, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom64636
[Codegen] .set .Llabel64636, .
[Codegen] int3
[Codegen] .set .Llabel64637, .
[Codegen] .set .Lfrom64636, .Llabel64637
[Codegen] call       .Lfrom64642
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom64651
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (GeneratorThrowOrReturn)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel64676, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel64685, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel64694, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel64703, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel64712, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel64721, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel64730, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel64739, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel64745, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel64751, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel64757, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel64763, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel64769, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel64775, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel64781, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom64821
[Codegen] .set .Llabel64821, .
[Codegen] int3
[Codegen] .set .Llabel64822, .
[Codegen] .set .Lfrom64821, .Llabel64822
[Codegen] call       .Lfrom64827
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel64832, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel64841, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel64850, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel64859, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel64868, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel64877, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel64886, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel64895, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel64901, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel64907, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel64913, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel64919, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel64925, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel64931, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel64937, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel64976, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel64990, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel64997, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x94
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel65010, .
[Codegen] movq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] .set .Llabel65022, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom65036
[Codegen] .set .Llabel65036, .
[Codegen] int3
[Codegen] .set .Llabel65037, .
[Codegen] .set .Lfrom65036, .Llabel65037
[Codegen] call       .Lfrom65042
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom65050
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (GetAndClearException)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel65075, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel65084, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel65093, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel65102, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel65111, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel65120, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel65129, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel65138, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel65144, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel65150, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel65156, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel65162, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel65168, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel65174, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel65180, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom65220
[Codegen] .set .Llabel65220, .
[Codegen] int3
[Codegen] .set .Llabel65221, .
[Codegen] .set .Lfrom65220, .Llabel65221
[Codegen] call       .Lfrom65226
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel65231, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel65240, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel65249, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel65258, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel65267, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel65276, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel65285, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel65294, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel65300, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel65306, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel65312, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel65318, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel65324, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel65330, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel65336, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel65360, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel65374, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel65381, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x95
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom65420
[Codegen] .set .Llabel65420, .
[Codegen] int3
[Codegen] .set .Llabel65421, .
[Codegen] .set .Lfrom65420, .Llabel65421
[Codegen] call       .Lfrom65426
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom65434
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $8
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (GetElemMaybeCached)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel65463, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel65472, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel65481, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel65490, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel65499, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel65508, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel65517, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel65526, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel65532, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel65538, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel65544, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel65550, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel65556, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel65562, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel65568, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom65608
[Codegen] .set .Llabel65608, .
[Codegen] int3
[Codegen] .set .Llabel65609, .
[Codegen] .set .Lfrom65608, .Llabel65609
[Codegen] call       .Lfrom65614
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel65619, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel65628, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel65637, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel65646, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel65655, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel65664, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel65673, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel65682, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel65688, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel65694, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel65700, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel65706, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel65712, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel65718, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel65724, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel65760, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel65774, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel65781, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x96
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r8
[Codegen] .set .Llabel65810, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom65832
[Codegen] .set .Llabel65832, .
[Codegen] int3
[Codegen] .set .Llabel65833, .
[Codegen] .set .Lfrom65832, .Llabel65833
[Codegen] call       .Lfrom65838
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom65846
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (GetFirstDollarIndexRaw)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel65875, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel65884, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel65893, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel65902, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel65911, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel65920, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel65929, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel65938, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel65944, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel65950, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel65956, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel65962, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel65968, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel65974, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel65980, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom66020
[Codegen] .set .Llabel66020, .
[Codegen] int3
[Codegen] .set .Llabel66021, .
[Codegen] .set .Lfrom66020, .Llabel66021
[Codegen] call       .Lfrom66026
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel66031, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel66040, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel66049, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel66058, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel66067, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel66076, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel66085, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel66094, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel66100, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel66106, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel66112, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel66118, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel66124, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel66130, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel66136, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel66160, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel66174, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel66181, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x97
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rdx
[Codegen] .set .Llabel66202, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom66216
[Codegen] .set .Llabel66216, .
[Codegen] int3
[Codegen] .set .Llabel66217, .
[Codegen] .set .Lfrom66216, .Llabel66217
[Codegen] call       .Lfrom66222
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom66230
[Codegen] .set .Llabel66230, .
[Codegen] movl       -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (GetImportOperation)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel66258, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel66267, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel66276, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel66285, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel66294, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel66303, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel66312, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel66321, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel66327, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel66333, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel66339, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel66345, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel66351, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel66357, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel66363, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom66403
[Codegen] .set .Llabel66403, .
[Codegen] int3
[Codegen] .set .Llabel66404, .
[Codegen] .set .Lfrom66403, .Llabel66404
[Codegen] call       .Lfrom66409
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel66414, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel66423, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel66432, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel66441, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel66450, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel66459, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel66468, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel66477, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel66483, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel66489, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel66495, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel66501, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel66507, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel66513, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel66519, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel66544, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel66558, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel66565, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x98
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r8
[Codegen] .set .Llabel66594, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom66616
[Codegen] .set .Llabel66616, .
[Codegen] int3
[Codegen] .set .Llabel66617, .
[Codegen] .set .Lfrom66616, .Llabel66617
[Codegen] call       .Lfrom66622
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom66630
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (GetIntrinsicValue)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel66659, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel66668, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel66677, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel66686, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel66695, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel66704, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel66713, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel66722, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel66728, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel66734, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel66740, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel66746, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel66752, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel66758, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel66764, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom66804
[Codegen] .set .Llabel66804, .
[Codegen] int3
[Codegen] .set .Llabel66805, .
[Codegen] .set .Lfrom66804, .Llabel66805
[Codegen] call       .Lfrom66810
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel66815, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel66824, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel66833, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel66842, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel66851, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel66860, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel66869, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel66878, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel66884, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel66890, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel66896, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel66902, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel66908, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel66914, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel66920, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel66944, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel66958, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel66965, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x99
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom67008
[Codegen] .set .Llabel67008, .
[Codegen] int3
[Codegen] .set .Llabel67009, .
[Codegen] .set .Lfrom67008, .Llabel67009
[Codegen] call       .Lfrom67014
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom67022
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (GetIterator)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel67051, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel67060, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel67069, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel67078, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel67087, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel67096, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel67105, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel67114, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel67120, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel67126, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel67132, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel67138, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel67144, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel67150, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel67156, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom67196
[Codegen] .set .Llabel67196, .
[Codegen] int3
[Codegen] .set .Llabel67197, .
[Codegen] .set .Lfrom67196, .Llabel67197
[Codegen] call       .Lfrom67202
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel67207, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel67216, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel67225, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel67234, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel67243, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel67252, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel67261, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel67270, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel67276, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel67282, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel67288, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel67294, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel67300, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel67306, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel67312, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel67344, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel67358, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel67365, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x9a
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom67392
[Codegen] .set .Llabel67392, .
[Codegen] int3
[Codegen] .set .Llabel67393, .
[Codegen] .set .Lfrom67392, .Llabel67393
[Codegen] call       .Lfrom67398
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom67407
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (GetIteratorWithIndices)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel67432, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel67441, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel67450, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel67459, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel67468, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel67477, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel67486, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel67495, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel67501, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel67507, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel67513, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel67519, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel67525, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel67531, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel67537, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom67577
[Codegen] .set .Llabel67577, .
[Codegen] int3
[Codegen] .set .Llabel67578, .
[Codegen] .set .Lfrom67577, .Llabel67578
[Codegen] call       .Lfrom67583
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel67588, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel67597, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel67606, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel67615, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel67624, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel67633, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel67642, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel67651, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel67657, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel67663, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel67669, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel67675, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel67681, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel67687, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel67693, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel67728, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel67742, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel67749, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x9b
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom67776
[Codegen] .set .Llabel67776, .
[Codegen] int3
[Codegen] .set .Llabel67777, .
[Codegen] .set .Lfrom67776, .Llabel67777
[Codegen] call       .Lfrom67782
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom67791
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (GetNonSyntacticGlobalThis)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel67816, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel67825, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel67834, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel67843, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel67852, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel67861, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel67870, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel67879, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel67885, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel67891, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel67897, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel67903, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel67909, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel67915, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel67921, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom67961
[Codegen] .set .Llabel67961, .
[Codegen] int3
[Codegen] .set .Llabel67962, .
[Codegen] .set .Lfrom67961, .Llabel67962
[Codegen] call       .Lfrom67967
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel67972, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel67981, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel67990, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel67999, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel68008, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel68017, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel68026, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel68035, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel68041, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel68047, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel68053, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel68059, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel68065, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel68071, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel68077, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel68112, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel68126, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel68133, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x9c
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom68176
[Codegen] .set .Llabel68176, .
[Codegen] int3
[Codegen] .set .Llabel68177, .
[Codegen] .set .Lfrom68176, .Llabel68177
[Codegen] call       .Lfrom68182
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (GetOrCreateModuleMetaObject)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel68211, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel68220, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel68229, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel68238, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel68247, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel68256, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel68265, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel68274, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel68280, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel68286, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel68292, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel68298, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel68304, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel68310, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel68316, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom68356
[Codegen] .set .Llabel68356, .
[Codegen] int3
[Codegen] .set .Llabel68357, .
[Codegen] .set .Lfrom68356, .Llabel68357
[Codegen] call       .Lfrom68362
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel68367, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel68376, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel68385, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel68394, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel68403, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel68412, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel68421, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel68430, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel68436, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel68442, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel68448, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel68454, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel68460, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel68466, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel68472, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel68496, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel68510, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel68517, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x9d
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom68544
[Codegen] .set .Llabel68544, .
[Codegen] int3
[Codegen] .set .Llabel68545, .
[Codegen] .set .Lfrom68544, .Llabel68545
[Codegen] call       .Lfrom68550
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom68559
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (GetPendingExceptionStack)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel68584, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel68593, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel68602, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel68611, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel68620, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel68629, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel68638, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel68647, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel68653, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel68659, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel68665, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel68671, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel68677, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel68683, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel68689, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom68729
[Codegen] .set .Llabel68729, .
[Codegen] int3
[Codegen] .set .Llabel68730, .
[Codegen] .set .Lfrom68729, .Llabel68730
[Codegen] call       .Lfrom68735
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel68740, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel68749, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel68758, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel68767, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel68776, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel68785, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel68794, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel68803, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel68809, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel68815, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel68821, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel68827, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel68833, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel68839, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel68845, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel68880, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel68894, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel68901, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x9e
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom68940
[Codegen] .set .Llabel68940, .
[Codegen] int3
[Codegen] .set .Llabel68941, .
[Codegen] .set .Lfrom68940, .Llabel68941
[Codegen] call       .Lfrom68946
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom68954
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $8
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (GetPropMaybeCached)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel68983, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel68992, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel69001, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel69010, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel69019, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel69028, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel69037, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel69046, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel69052, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel69058, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel69064, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel69070, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel69076, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel69082, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel69088, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom69128
[Codegen] .set .Llabel69128, .
[Codegen] int3
[Codegen] .set .Llabel69129, .
[Codegen] .set .Lfrom69128, .Llabel69129
[Codegen] call       .Lfrom69134
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel69139, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel69148, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel69157, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel69166, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel69175, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel69184, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel69193, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel69202, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel69208, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel69214, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel69220, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel69226, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel69232, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel69238, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel69244, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel69280, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel69294, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel69301, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x9f
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r8
[Codegen] .set .Llabel69330, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom69352
[Codegen] .set .Llabel69352, .
[Codegen] int3
[Codegen] .set .Llabel69353, .
[Codegen] .set .Lfrom69352, .Llabel69353
[Codegen] call       .Lfrom69358
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom69366
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (GetPrototypeOf)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel69395, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel69404, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel69413, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel69422, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel69431, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel69440, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel69449, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel69458, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel69464, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel69470, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel69476, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel69482, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel69488, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel69494, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel69500, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom69540
[Codegen] .set .Llabel69540, .
[Codegen] int3
[Codegen] .set .Llabel69541, .
[Codegen] .set .Lfrom69540, .Llabel69541
[Codegen] call       .Lfrom69546
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel69551, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel69560, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel69569, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel69578, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel69587, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel69596, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel69605, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel69614, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel69620, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel69626, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel69632, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel69638, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel69644, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel69650, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel69656, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel69680, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel69694, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel69701, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xa0
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom69744
[Codegen] .set .Llabel69744, .
[Codegen] int3
[Codegen] .set .Llabel69745, .
[Codegen] .set .Lfrom69744, .Llabel69745
[Codegen] call       .Lfrom69750
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom69758
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (GetSparseElementHelper)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel69787, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel69796, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel69805, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel69814, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel69823, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel69832, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel69841, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel69850, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel69856, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel69862, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel69868, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel69874, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel69880, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel69886, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel69892, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom69932
[Codegen] .set .Llabel69932, .
[Codegen] int3
[Codegen] .set .Llabel69933, .
[Codegen] .set .Lfrom69932, .Llabel69933
[Codegen] call       .Lfrom69938
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel69943, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel69952, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel69961, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel69970, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel69979, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel69988, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel69997, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel70006, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel70012, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel70018, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel70024, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel70030, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel70036, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel70042, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel70048, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel70080, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel70094, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel70101, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xa1
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] .set .Llabel70130, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom70148
[Codegen] .set .Llabel70148, .
[Codegen] int3
[Codegen] .set .Llabel70149, .
[Codegen] .set .Lfrom70148, .Llabel70149
[Codegen] call       .Lfrom70154
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom70162
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (GlobalDeclInstantiationFromIon)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel70191, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel70200, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel70209, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel70218, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel70227, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel70236, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel70245, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel70254, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel70260, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel70266, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel70272, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel70278, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel70284, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel70290, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel70296, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom70336
[Codegen] .set .Llabel70336, .
[Codegen] int3
[Codegen] .set .Llabel70337, .
[Codegen] .set .Lfrom70336, .Llabel70337
[Codegen] call       .Lfrom70342
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel70347, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel70356, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel70365, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel70374, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel70383, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel70392, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel70401, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel70410, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel70416, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel70422, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel70428, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel70434, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel70440, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel70446, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel70452, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel70480, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel70494, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel70501, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xa2
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel70514, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom70532
[Codegen] .set .Llabel70532, .
[Codegen] int3
[Codegen] .set .Llabel70533, .
[Codegen] .set .Lfrom70532, .Llabel70533
[Codegen] call       .Lfrom70538
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom70546
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (GlobalOrEvalDeclInstantiation)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel70571, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel70580, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel70589, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel70598, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel70607, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel70616, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel70625, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel70634, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel70640, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel70646, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel70652, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel70658, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel70664, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel70670, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel70676, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom70716
[Codegen] .set .Llabel70716, .
[Codegen] int3
[Codegen] .set .Llabel70717, .
[Codegen] .set .Lfrom70716, .Llabel70717
[Codegen] call       .Lfrom70722
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel70727, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel70736, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel70745, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel70754, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel70763, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel70772, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel70781, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel70790, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel70796, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel70802, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel70808, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel70814, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel70820, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel70826, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel70832, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel70864, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel70878, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel70885, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xa3
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel70898, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom70920
[Codegen] .set .Llabel70920, .
[Codegen] int3
[Codegen] .set .Llabel70921, .
[Codegen] .set .Lfrom70920, .Llabel70921
[Codegen] call       .Lfrom70926
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom70934
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (HandleDebugTrap)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel70959, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel70968, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel70977, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel70986, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel70995, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel71004, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel71013, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel71022, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel71028, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel71034, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel71040, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel71046, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel71052, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel71058, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel71064, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom71104
[Codegen] .set .Llabel71104, .
[Codegen] int3
[Codegen] .set .Llabel71105, .
[Codegen] .set .Lfrom71104, .Llabel71105
[Codegen] call       .Lfrom71110
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel71115, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel71124, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel71133, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel71142, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel71151, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel71160, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel71169, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel71178, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel71184, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel71190, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel71196, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel71202, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel71208, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel71214, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel71220, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel71248, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel71262, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel71269, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xa4
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel71282, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel71286, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom71300
[Codegen] .set .Llabel71300, .
[Codegen] int3
[Codegen] .set .Llabel71301, .
[Codegen] .set .Lfrom71300, .Llabel71301
[Codegen] call       .Lfrom71306
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom71314
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ImplicitThisOperation)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel71339, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel71348, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel71357, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel71366, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel71375, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel71384, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel71393, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel71402, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel71408, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel71414, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel71420, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel71426, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel71432, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel71438, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel71444, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom71484
[Codegen] .set .Llabel71484, .
[Codegen] int3
[Codegen] .set .Llabel71485, .
[Codegen] .set .Lfrom71484, .Llabel71485
[Codegen] call       .Lfrom71490
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel71495, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel71504, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel71513, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel71522, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel71531, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel71540, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel71549, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel71558, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel71564, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel71570, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel71576, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel71582, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel71588, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel71594, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel71600, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel71632, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel71646, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel71653, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xa5
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom71696
[Codegen] .set .Llabel71696, .
[Codegen] int3
[Codegen] .set .Llabel71697, .
[Codegen] .set .Lfrom71696, .Llabel71697
[Codegen] call       .Lfrom71702
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ImportMetaOperation)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel71731, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel71740, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel71749, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel71758, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel71767, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel71776, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel71785, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel71794, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel71800, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel71806, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel71812, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel71818, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel71824, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel71830, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel71836, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom71876
[Codegen] .set .Llabel71876, .
[Codegen] int3
[Codegen] .set .Llabel71877, .
[Codegen] .set .Lfrom71876, .Llabel71877
[Codegen] call       .Lfrom71882
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel71887, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel71896, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel71905, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel71914, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel71923, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel71932, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel71941, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel71950, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel71956, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel71962, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel71968, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel71974, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel71980, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel71986, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel71992, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel72016, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel72030, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel72037, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xa6
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom72064
[Codegen] .set .Llabel72064, .
[Codegen] int3
[Codegen] .set .Llabel72065, .
[Codegen] .set .Lfrom72064, .Llabel72065
[Codegen] call       .Lfrom72070
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom72079
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (InitElemGetterSetterOperation)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel72104, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel72113, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel72122, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel72131, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel72140, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel72149, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel72158, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel72167, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel72173, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel72179, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel72185, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel72191, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel72197, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel72203, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel72209, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom72249
[Codegen] .set .Llabel72249, .
[Codegen] int3
[Codegen] .set .Llabel72250, .
[Codegen] .set .Lfrom72249, .Llabel72250
[Codegen] call       .Lfrom72255
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel72260, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel72269, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel72278, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel72287, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel72296, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel72305, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel72314, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel72323, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel72329, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel72335, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel72341, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel72347, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel72353, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel72359, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel72365, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel72400, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel72414, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel72421, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xa7
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] .set .Llabel72446, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom72460
[Codegen] .set .Llabel72460, .
[Codegen] int3
[Codegen] .set .Llabel72461, .
[Codegen] .set .Lfrom72460, .Llabel72461
[Codegen] call       .Lfrom72466
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom72474
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (InitFunctionEnvironmentObjects)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel72499, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel72508, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel72517, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel72526, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel72535, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel72544, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel72553, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel72562, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel72568, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel72574, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel72580, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel72586, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel72592, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel72598, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel72604, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom72644
[Codegen] .set .Llabel72644, .
[Codegen] int3
[Codegen] .set .Llabel72645, .
[Codegen] .set .Lfrom72644, .Llabel72645
[Codegen] call       .Lfrom72650
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel72655, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel72664, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel72673, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel72682, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel72691, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel72700, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel72709, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel72718, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel72724, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel72730, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel72736, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel72742, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel72748, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel72754, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel72760, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel72784, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel72798, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel72805, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xa8
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel72818, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom72832
[Codegen] .set .Llabel72832, .
[Codegen] int3
[Codegen] .set .Llabel72833, .
[Codegen] .set .Lfrom72832, .Llabel72833
[Codegen] call       .Lfrom72838
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom72846
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (InitPropGetterSetterOperation)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel72871, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel72880, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel72889, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel72898, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel72907, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel72916, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel72925, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel72934, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel72940, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel72946, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel72952, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel72958, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel72964, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel72970, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel72976, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom73016
[Codegen] .set .Llabel73016, .
[Codegen] int3
[Codegen] .set .Llabel73017, .
[Codegen] .set .Lfrom73016, .Llabel73017
[Codegen] call       .Lfrom73022
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel73027, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel73036, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel73045, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel73054, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel73063, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel73072, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel73081, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel73090, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel73096, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel73102, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel73108, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel73114, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel73120, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel73126, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel73132, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel73168, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel73182, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel73189, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xa9
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] .set .Llabel73214, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom73228
[Codegen] .set .Llabel73228, .
[Codegen] int3
[Codegen] .set .Llabel73229, .
[Codegen] .set .Lfrom73228, .Llabel73229
[Codegen] call       .Lfrom73234
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom73242
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (InitRestParameter)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel73267, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel73276, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel73285, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel73294, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel73303, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel73312, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel73321, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel73330, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel73336, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel73342, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel73348, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel73354, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel73360, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel73366, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel73372, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom73412
[Codegen] .set .Llabel73412, .
[Codegen] int3
[Codegen] .set .Llabel73413, .
[Codegen] .set .Lfrom73412, .Llabel73413
[Codegen] call       .Lfrom73418
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel73423, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel73432, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel73441, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel73450, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel73459, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel73468, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel73477, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel73486, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel73492, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel73498, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel73504, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel73510, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel73516, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel73522, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel73528, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel73552, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel73566, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel73573, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xaa
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel73590, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel73594, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom73608
[Codegen] .set .Llabel73608, .
[Codegen] int3
[Codegen] .set .Llabel73609, .
[Codegen] .set .Lfrom73608, .Llabel73609
[Codegen] call       .Lfrom73614
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom73623
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (Int32ToString)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel73648, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel73657, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel73666, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel73675, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel73684, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel73693, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel73702, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel73711, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel73717, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel73723, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel73729, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel73735, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel73741, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel73747, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel73753, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom73793
[Codegen] .set .Llabel73793, .
[Codegen] int3
[Codegen] .set .Llabel73794, .
[Codegen] .set .Lfrom73793, .Llabel73794
[Codegen] call       .Lfrom73799
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel73804, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel73813, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel73822, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel73831, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel73840, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel73849, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel73858, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel73867, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel73873, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel73879, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel73885, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel73891, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel73897, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel73903, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel73909, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel73936, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel73950, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel73957, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xab
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel73970, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom73984
[Codegen] .set .Llabel73984, .
[Codegen] int3
[Codegen] .set .Llabel73985, .
[Codegen] .set .Lfrom73984, .Llabel73985
[Codegen] call       .Lfrom73990
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom73999
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (Int32ToStringWithBase)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel74024, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel74033, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel74042, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel74051, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel74060, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel74069, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel74078, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel74087, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel74093, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel74099, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel74105, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel74111, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel74117, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel74123, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel74129, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom74169
[Codegen] .set .Llabel74169, .
[Codegen] int3
[Codegen] .set .Llabel74170, .
[Codegen] .set .Lfrom74169, .Llabel74170
[Codegen] call       .Lfrom74175
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel74180, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel74189, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel74198, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel74207, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel74216, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel74225, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel74234, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel74243, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel74249, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel74255, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel74261, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel74267, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel74273, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel74279, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel74285, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel74320, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel74334, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel74341, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xac
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel74354, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] .set .Llabel74358, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel74362, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom74376
[Codegen] .set .Llabel74376, .
[Codegen] int3
[Codegen] .set .Llabel74377, .
[Codegen] .set .Lfrom74376, .Llabel74377
[Codegen] call       .Lfrom74382
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom74391
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (InterpretResume)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel74416, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel74425, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel74434, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel74443, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel74452, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel74461, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel74470, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel74479, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel74485, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel74491, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel74497, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel74503, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel74509, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel74515, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel74521, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom74561
[Codegen] .set .Llabel74561, .
[Codegen] int3
[Codegen] .set .Llabel74562, .
[Codegen] .set .Lfrom74561, .Llabel74562
[Codegen] call       .Lfrom74567
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel74572, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel74581, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel74590, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel74599, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel74608, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel74617, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel74626, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel74635, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel74641, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel74647, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel74653, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel74659, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel74665, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel74671, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel74677, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel74704, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel74718, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel74725, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xad
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] .set .Llabel74754, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom74772
[Codegen] .set .Llabel74772, .
[Codegen] int3
[Codegen] .set .Llabel74773, .
[Codegen] .set .Lfrom74772, .Llabel74773
[Codegen] call       .Lfrom74778
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom74786
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (InterruptCheck)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel74815, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel74824, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel74833, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel74842, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel74851, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel74860, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel74869, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel74878, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel74884, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel74890, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel74896, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel74902, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel74908, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel74914, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel74920, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom74960
[Codegen] .set .Llabel74960, .
[Codegen] int3
[Codegen] .set .Llabel74961, .
[Codegen] .set .Lfrom74960, .Llabel74961
[Codegen] call       .Lfrom74966
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel74971, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel74980, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel74989, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel74998, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel75007, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel75016, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel75025, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel75034, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel75040, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel75046, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel75052, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel75058, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel75064, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel75070, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel75076, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel75104, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel75118, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel75125, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xae
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom75148
[Codegen] .set .Llabel75148, .
[Codegen] int3
[Codegen] .set .Llabel75149, .
[Codegen] .set .Lfrom75148, .Llabel75149
[Codegen] call       .Lfrom75154
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom75162
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $8
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (InvokeFunction)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel75187, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel75196, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel75205, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel75214, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel75223, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel75232, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel75241, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel75250, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel75256, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel75262, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel75268, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel75274, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel75280, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel75286, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel75292, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom75332
[Codegen] .set .Llabel75332, .
[Codegen] int3
[Codegen] .set .Llabel75333, .
[Codegen] .set .Lfrom75332, .Llabel75333
[Codegen] call       .Lfrom75338
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel75343, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel75352, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel75361, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel75370, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel75379, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel75388, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel75397, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel75406, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel75412, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel75418, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel75424, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel75430, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel75436, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel75442, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel75448, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel75472, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel75486, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel75493, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xaf
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] subq       $16, %rsp
[Codegen] leaq       -0x10(%rbp), %r11
[Codegen] movq       %r11, 0x0(%rsp)
[Codegen] .set .Llabel75530, .
[Codegen] movq       0x38(%rbp), %r9
[Codegen] .set .Llabel75534, .
[Codegen] movq       0x30(%rbp), %r8
[Codegen] .set .Llabel75538, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] .set .Llabel75542, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom75560
[Codegen] .set .Llabel75560, .
[Codegen] int3
[Codegen] .set .Llabel75561, .
[Codegen] .set .Lfrom75560, .Llabel75561
[Codegen] call       .Lfrom75566
[Codegen] addq       $16, %rsp
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom75578
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $48
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (IonBinaryArithICUpdate)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel75607, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel75616, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel75625, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel75634, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel75643, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel75652, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel75661, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel75670, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel75676, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel75682, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel75688, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel75694, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel75700, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel75706, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel75712, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom75752
[Codegen] .set .Llabel75752, .
[Codegen] int3
[Codegen] .set .Llabel75753, .
[Codegen] .set .Lfrom75752, .Llabel75753
[Codegen] call       .Lfrom75758
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel75763, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel75772, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel75781, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel75790, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel75799, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel75808, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel75817, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel75826, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel75832, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel75838, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel75844, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel75850, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel75856, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel75862, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel75868, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel75904, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel75918, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel75925, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xb0
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r9
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel75962, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom75980
[Codegen] .set .Llabel75980, .
[Codegen] int3
[Codegen] .set .Llabel75981, .
[Codegen] .set .Lfrom75980, .Llabel75981
[Codegen] call       .Lfrom75986
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom75994
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (IonBindNameICUpdate)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel76023, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel76032, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel76041, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel76050, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel76059, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel76068, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel76077, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel76086, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel76092, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel76098, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel76104, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel76110, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel76116, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel76122, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel76128, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom76168
[Codegen] .set .Llabel76168, .
[Codegen] int3
[Codegen] .set .Llabel76169, .
[Codegen] .set .Lfrom76168, .Llabel76169
[Codegen] call       .Lfrom76174
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel76179, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel76188, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel76197, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel76206, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel76215, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel76224, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel76233, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel76242, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel76248, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel76254, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel76260, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel76266, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel76272, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel76278, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel76284, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel76320, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel76334, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel76341, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xb1
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel76358, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom76376
[Codegen] .set .Llabel76376, .
[Codegen] int3
[Codegen] .set .Llabel76377, .
[Codegen] .set .Lfrom76376, .Llabel76377
[Codegen] call       .Lfrom76382
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom76391
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (IonCheckPrivateFieldICUpdate)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel76416, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel76425, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel76434, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel76443, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel76452, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel76461, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel76470, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel76479, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel76485, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel76491, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel76497, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel76503, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel76509, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel76515, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel76521, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom76561
[Codegen] .set .Llabel76561, .
[Codegen] int3
[Codegen] .set .Llabel76562, .
[Codegen] .set .Lfrom76561, .Llabel76562
[Codegen] call       .Lfrom76567
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel76572, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel76581, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel76590, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel76599, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel76608, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel76617, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel76626, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel76635, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel76641, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel76647, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel76653, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel76659, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel76665, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel76671, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel76677, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel76704, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel76718, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel76725, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xb2
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r9
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel76754, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom76772
[Codegen] .set .Llabel76772, .
[Codegen] int3
[Codegen] .set .Llabel76773, .
[Codegen] .set .Lfrom76772, .Llabel76773
[Codegen] call       .Lfrom76778
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom76786
[Codegen] .set .Llabel76786, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (IonCloseIterICUpdate)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel76815, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel76824, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel76833, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel76842, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel76851, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel76860, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel76869, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel76878, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel76884, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel76890, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel76896, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel76902, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel76908, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel76914, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel76920, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom76960
[Codegen] .set .Llabel76960, .
[Codegen] int3
[Codegen] .set .Llabel76961, .
[Codegen] .set .Lfrom76960, .Llabel76961
[Codegen] call       .Lfrom76966
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel76971, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel76980, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel76989, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel76998, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel77007, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel77016, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel77025, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel77034, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel77040, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel77046, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel77052, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel77058, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel77064, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel77070, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel77076, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel77104, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel77118, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel77125, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xb3
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel77142, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom77160
[Codegen] .set .Llabel77160, .
[Codegen] int3
[Codegen] .set .Llabel77161, .
[Codegen] .set .Lfrom77160, .Llabel77161
[Codegen] call       .Lfrom77166
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom77174
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (IonCompareICUpdate)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel77199, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel77208, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel77217, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel77226, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel77235, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel77244, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel77253, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel77262, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel77268, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel77274, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel77280, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel77286, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel77292, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel77298, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel77304, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom77344
[Codegen] .set .Llabel77344, .
[Codegen] int3
[Codegen] .set .Llabel77345, .
[Codegen] .set .Lfrom77344, .Llabel77345
[Codegen] call       .Lfrom77350
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel77355, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel77364, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel77373, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel77382, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel77391, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel77400, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel77409, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel77418, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel77424, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel77430, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel77436, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel77442, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel77448, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel77454, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel77460, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel77488, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel77502, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel77509, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xb4
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r9
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel77538, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom77556
[Codegen] .set .Llabel77556, .
[Codegen] int3
[Codegen] .set .Llabel77557, .
[Codegen] .set .Lfrom77556, .Llabel77557
[Codegen] call       .Lfrom77562
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom77570
[Codegen] .set .Llabel77570, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (IonCompileScriptForBaselineAtEntry)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel77599, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel77608, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel77617, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel77626, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel77635, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel77644, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel77653, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel77662, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel77668, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel77674, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel77680, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel77686, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel77692, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel77698, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel77704, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom77744
[Codegen] .set .Llabel77744, .
[Codegen] int3
[Codegen] .set .Llabel77745, .
[Codegen] .set .Lfrom77744, .Llabel77745
[Codegen] call       .Lfrom77750
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel77755, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel77764, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel77773, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel77782, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel77791, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel77800, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel77809, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel77818, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel77824, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel77830, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel77836, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel77842, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel77848, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel77854, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel77860, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel77888, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel77902, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel77909, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xb5
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel77922, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom77936
[Codegen] .set .Llabel77936, .
[Codegen] int3
[Codegen] .set .Llabel77937, .
[Codegen] .set .Lfrom77936, .Llabel77937
[Codegen] call       .Lfrom77942
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom77950
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (IonCompileScriptForBaselineOSR)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel77975, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel77984, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel77993, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel78002, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel78011, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel78020, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel78029, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel78038, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel78044, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel78050, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel78056, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel78062, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel78068, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel78074, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel78080, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom78120
[Codegen] .set .Llabel78120, .
[Codegen] int3
[Codegen] .set .Llabel78121, .
[Codegen] .set .Lfrom78120, .Llabel78121
[Codegen] call       .Lfrom78126
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel78131, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel78140, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel78149, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel78158, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel78167, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel78176, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel78185, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel78194, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel78200, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel78206, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel78212, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel78218, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel78224, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel78230, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel78236, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel78272, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel78286, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel78293, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xb6
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r8
[Codegen] .set .Llabel78314, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] .set .Llabel78318, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel78322, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom78336
[Codegen] .set .Llabel78336, .
[Codegen] int3
[Codegen] .set .Llabel78337, .
[Codegen] .set .Lfrom78336, .Llabel78337
[Codegen] call       .Lfrom78342
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom78350
[Codegen] .set .Llabel78350, .
[Codegen] movq       -0x10(%rbp), %rax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (IonGetIteratorICUpdate)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel78379, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel78388, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel78397, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel78406, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel78415, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel78424, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel78433, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel78442, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel78448, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel78454, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel78460, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel78466, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel78472, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel78478, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel78484, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom78524
[Codegen] .set .Llabel78524, .
[Codegen] int3
[Codegen] .set .Llabel78525, .
[Codegen] .set .Lfrom78524, .Llabel78525
[Codegen] call       .Lfrom78530
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel78535, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel78544, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel78553, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel78562, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel78571, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel78580, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel78589, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel78598, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel78604, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel78610, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel78616, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel78622, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel78628, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel78634, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel78640, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel78672, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel78686, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel78693, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xb7
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel78710, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom78728
[Codegen] .set .Llabel78728, .
[Codegen] int3
[Codegen] .set .Llabel78729, .
[Codegen] .set .Lfrom78728, .Llabel78729
[Codegen] call       .Lfrom78734
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom78743
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (IonGetNameICUpdate)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel78768, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel78777, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel78786, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel78795, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel78804, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel78813, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel78822, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel78831, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel78837, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel78843, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel78849, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel78855, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel78861, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel78867, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel78873, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom78913
[Codegen] .set .Llabel78913, .
[Codegen] int3
[Codegen] .set .Llabel78914, .
[Codegen] .set .Lfrom78913, .Llabel78914
[Codegen] call       .Lfrom78919
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel78924, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel78933, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel78942, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel78951, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel78960, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel78969, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel78978, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel78987, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel78993, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel78999, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel79005, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel79011, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel79017, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel79023, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel79029, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel79056, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel79070, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel79077, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xb8
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel79110, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom79128
[Codegen] .set .Llabel79128, .
[Codegen] int3
[Codegen] .set .Llabel79129, .
[Codegen] .set .Lfrom79128, .Llabel79129
[Codegen] call       .Lfrom79134
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom79142
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (IonGetPropSuperICUpdate)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel79171, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel79180, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel79189, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel79198, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel79207, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel79216, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel79225, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel79234, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel79240, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel79246, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel79252, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel79258, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel79264, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel79270, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel79276, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom79316
[Codegen] .set .Llabel79316, .
[Codegen] int3
[Codegen] .set .Llabel79317, .
[Codegen] .set .Lfrom79316, .Llabel79317
[Codegen] call       .Lfrom79322
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel79327, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel79336, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel79345, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel79354, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel79363, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel79372, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel79381, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel79390, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel79396, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel79402, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel79408, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel79414, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel79420, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel79426, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel79432, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel79456, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel79470, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel79477, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xb9
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] subq       $16, %rsp
[Codegen] leaq       -0x10(%rbp), %r11
[Codegen] movq       %r11, 0x0(%rsp)
[Codegen] leaq       0x38(%rbp), %r9
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel79526, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom79544
[Codegen] .set .Llabel79544, .
[Codegen] int3
[Codegen] .set .Llabel79545, .
[Codegen] .set .Lfrom79544, .Llabel79545
[Codegen] call       .Lfrom79550
[Codegen] addq       $16, %rsp
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom79562
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $48
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (IonGetPropertyICUpdate)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel79591, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel79600, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel79609, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel79618, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel79627, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel79636, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel79645, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel79654, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel79660, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel79666, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel79672, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel79678, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel79684, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel79690, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel79696, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom79736
[Codegen] .set .Llabel79736, .
[Codegen] int3
[Codegen] .set .Llabel79737, .
[Codegen] .set .Lfrom79736, .Llabel79737
[Codegen] call       .Lfrom79742
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel79747, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel79756, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel79765, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel79774, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel79783, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel79792, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel79801, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel79810, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel79816, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel79822, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel79828, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel79834, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel79840, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel79846, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel79852, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel79888, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel79902, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel79909, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xba
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r9
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel79946, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom79964
[Codegen] .set .Llabel79964, .
[Codegen] int3
[Codegen] .set .Llabel79965, .
[Codegen] .set .Lfrom79964, .Llabel79965
[Codegen] call       .Lfrom79970
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom79978
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (IonHasOwnICUpdate)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel80007, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel80016, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel80025, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel80034, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel80043, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel80052, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel80061, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel80070, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel80076, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel80082, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel80088, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel80094, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel80100, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel80106, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel80112, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom80152
[Codegen] .set .Llabel80152, .
[Codegen] int3
[Codegen] .set .Llabel80153, .
[Codegen] .set .Lfrom80152, .Llabel80153
[Codegen] call       .Lfrom80158
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel80163, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel80172, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel80181, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel80190, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel80199, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel80208, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel80217, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel80226, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel80232, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel80238, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel80244, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel80250, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel80256, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel80262, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel80268, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel80304, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel80318, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel80325, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xbb
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r9
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel80354, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom80372
[Codegen] .set .Llabel80372, .
[Codegen] int3
[Codegen] .set .Llabel80373, .
[Codegen] .set .Lfrom80372, .Llabel80373
[Codegen] call       .Lfrom80378
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom80386
[Codegen] .set .Llabel80386, .
[Codegen] movl       -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (IonInICUpdate)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel80414, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel80423, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel80432, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel80441, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel80450, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel80459, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel80468, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel80477, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel80483, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel80489, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel80495, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel80501, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel80507, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel80513, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel80519, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom80559
[Codegen] .set .Llabel80559, .
[Codegen] int3
[Codegen] .set .Llabel80560, .
[Codegen] .set .Lfrom80559, .Llabel80560
[Codegen] call       .Lfrom80565
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel80570, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel80579, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel80588, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel80597, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel80606, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel80615, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel80624, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel80633, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel80639, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel80645, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel80651, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel80657, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel80663, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel80669, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel80675, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel80704, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel80718, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel80725, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xbc
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r9
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel80754, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom80772
[Codegen] .set .Llabel80772, .
[Codegen] int3
[Codegen] .set .Llabel80773, .
[Codegen] .set .Lfrom80772, .Llabel80773
[Codegen] call       .Lfrom80778
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom80786
[Codegen] .set .Llabel80786, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (IonInstanceOfICUpdate)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel80815, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel80824, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel80833, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel80842, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel80851, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel80860, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel80869, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel80878, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel80884, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel80890, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel80896, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel80902, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel80908, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel80914, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel80920, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom80960
[Codegen] .set .Llabel80960, .
[Codegen] int3
[Codegen] .set .Llabel80961, .
[Codegen] .set .Lfrom80960, .Llabel80961
[Codegen] call       .Lfrom80966
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel80971, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel80980, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel80989, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel80998, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel81007, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel81016, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel81025, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel81034, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel81040, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel81046, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel81052, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel81058, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel81064, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel81070, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel81076, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel81104, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel81118, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel81125, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xbd
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r9
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel81154, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom81172
[Codegen] .set .Llabel81172, .
[Codegen] int3
[Codegen] .set .Llabel81173, .
[Codegen] .set .Lfrom81172, .Llabel81173
[Codegen] call       .Lfrom81178
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom81186
[Codegen] .set .Llabel81186, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (IonOptimizeGetIteratorICUpdate)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel81215, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel81224, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel81233, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel81242, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel81251, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel81260, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel81269, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel81278, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel81284, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel81290, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel81296, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel81302, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel81308, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel81314, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel81320, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom81360
[Codegen] .set .Llabel81360, .
[Codegen] int3
[Codegen] .set .Llabel81361, .
[Codegen] .set .Lfrom81360, .Llabel81361
[Codegen] call       .Lfrom81366
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel81371, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel81380, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel81389, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel81398, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel81407, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel81416, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel81425, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel81434, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel81440, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel81446, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel81452, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel81458, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel81464, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel81470, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel81476, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel81504, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel81518, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel81525, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xbe
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel81550, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom81568
[Codegen] .set .Llabel81568, .
[Codegen] int3
[Codegen] .set .Llabel81569, .
[Codegen] .set .Lfrom81568, .Llabel81569
[Codegen] call       .Lfrom81574
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom81582
[Codegen] .set .Llabel81582, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (IonOptimizeSpreadCallICUpdate)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel81611, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel81620, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel81629, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel81638, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel81647, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel81656, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel81665, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel81674, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel81680, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel81686, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel81692, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel81698, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel81704, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel81710, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel81716, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom81756
[Codegen] .set .Llabel81756, .
[Codegen] int3
[Codegen] .set .Llabel81757, .
[Codegen] .set .Lfrom81756, .Llabel81757
[Codegen] call       .Lfrom81762
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel81767, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel81776, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel81785, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel81794, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel81803, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel81812, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel81821, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel81830, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel81836, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel81842, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel81848, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel81854, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel81860, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel81866, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel81872, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel81904, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel81918, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel81925, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xbf
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel81958, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom81976
[Codegen] .set .Llabel81976, .
[Codegen] int3
[Codegen] .set .Llabel81977, .
[Codegen] .set .Lfrom81976, .Llabel81977
[Codegen] call       .Lfrom81982
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom81990
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (IonSetPropertyICUpdate)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel82019, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel82028, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel82037, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel82046, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel82055, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel82064, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel82073, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel82082, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel82088, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel82094, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel82100, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel82106, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel82112, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel82118, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel82124, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom82164
[Codegen] .set .Llabel82164, .
[Codegen] int3
[Codegen] .set .Llabel82165, .
[Codegen] .set .Lfrom82164, .Llabel82165
[Codegen] call       .Lfrom82170
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel82175, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel82184, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel82193, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel82202, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel82211, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel82220, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel82229, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel82238, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel82244, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel82250, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel82256, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel82262, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel82268, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel82274, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel82280, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel82304, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel82318, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel82325, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xc0
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x38(%rbp), %r9
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel82350, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom82368
[Codegen] .set .Llabel82368, .
[Codegen] int3
[Codegen] .set .Llabel82369, .
[Codegen] .set .Lfrom82368, .Llabel82369
[Codegen] call       .Lfrom82374
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom82382
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $48
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (IonToPropertyKeyICUpdate)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel82407, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel82416, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel82425, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel82434, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel82443, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel82452, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel82461, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel82470, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel82476, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel82482, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel82488, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel82494, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel82500, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel82506, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel82512, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom82552
[Codegen] .set .Llabel82552, .
[Codegen] int3
[Codegen] .set .Llabel82553, .
[Codegen] .set .Lfrom82552, .Llabel82553
[Codegen] call       .Lfrom82558
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel82563, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel82572, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel82581, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel82590, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel82599, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel82608, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel82617, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel82626, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel82632, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel82638, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel82644, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel82650, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel82656, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel82662, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel82668, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel82704, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel82718, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel82725, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xc1
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel82758, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom82776
[Codegen] .set .Llabel82776, .
[Codegen] int3
[Codegen] .set .Llabel82777, .
[Codegen] .set .Lfrom82776, .Llabel82777
[Codegen] call       .Lfrom82782
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom82790
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (IonUnaryArithICUpdate)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel82819, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel82828, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel82837, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel82846, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel82855, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel82864, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel82873, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel82882, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel82888, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel82894, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel82900, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel82906, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel82912, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel82918, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel82924, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom82964
[Codegen] .set .Llabel82964, .
[Codegen] int3
[Codegen] .set .Llabel82965, .
[Codegen] .set .Lfrom82964, .Llabel82965
[Codegen] call       .Lfrom82970
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel82975, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel82984, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel82993, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel83002, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel83011, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel83020, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel83029, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel83038, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel83044, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel83050, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel83056, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel83062, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel83068, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel83074, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel83080, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel83104, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel83118, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel83125, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xc2
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel83158, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom83176
[Codegen] .set .Llabel83176, .
[Codegen] int3
[Codegen] .set .Llabel83177, .
[Codegen] .set .Lfrom83176, .Llabel83177
[Codegen] call       .Lfrom83182
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom83190
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (IsArrayFromJit)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel83219, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel83228, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel83237, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel83246, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel83255, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel83264, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel83273, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel83282, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel83288, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel83294, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel83300, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel83306, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel83312, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel83318, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel83324, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom83364
[Codegen] .set .Llabel83364, .
[Codegen] int3
[Codegen] .set .Llabel83365, .
[Codegen] .set .Lfrom83364, .Llabel83365
[Codegen] call       .Lfrom83370
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel83375, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel83384, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel83393, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel83402, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel83411, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel83420, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel83429, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel83438, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel83444, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel83450, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel83456, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel83462, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel83468, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel83474, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel83480, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel83504, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel83518, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel83525, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xc3
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom83560
[Codegen] .set .Llabel83560, .
[Codegen] int3
[Codegen] .set .Llabel83561, .
[Codegen] .set .Lfrom83560, .Llabel83561
[Codegen] call       .Lfrom83566
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom83574
[Codegen] .set .Llabel83574, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (IsPossiblyWrappedTypedArray)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel83603, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel83612, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel83621, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel83630, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel83639, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel83648, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel83657, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel83666, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel83672, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel83678, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel83684, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel83690, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel83696, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel83702, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel83708, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom83748
[Codegen] .set .Llabel83748, .
[Codegen] int3
[Codegen] .set .Llabel83749, .
[Codegen] .set .Lfrom83748, .Llabel83749
[Codegen] call       .Lfrom83754
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel83759, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel83768, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel83777, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel83786, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel83795, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel83804, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel83813, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel83822, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel83828, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel83834, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel83840, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel83846, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel83852, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel83858, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel83864, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel83888, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel83902, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel83909, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xc4
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rdx
[Codegen] .set .Llabel83930, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom83944
[Codegen] .set .Llabel83944, .
[Codegen] int3
[Codegen] .set .Llabel83945, .
[Codegen] .set .Lfrom83944, .Llabel83945
[Codegen] call       .Lfrom83950
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom83958
[Codegen] .set .Llabel83958, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (IsPrototypeOf)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel83987, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel83996, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel84005, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel84014, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel84023, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel84032, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel84041, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel84050, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel84056, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel84062, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel84068, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel84074, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel84080, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel84086, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel84092, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom84132
[Codegen] .set .Llabel84132, .
[Codegen] int3
[Codegen] .set .Llabel84133, .
[Codegen] .set .Lfrom84132, .Llabel84133
[Codegen] call       .Lfrom84138
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel84143, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel84152, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel84161, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel84170, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel84179, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel84188, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel84197, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel84206, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel84212, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel84218, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel84224, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel84230, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel84236, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel84242, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel84248, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel84272, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel84286, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel84293, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xc5
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] .set .Llabel84314, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom84332
[Codegen] .set .Llabel84332, .
[Codegen] int3
[Codegen] .set .Llabel84333, .
[Codegen] .set .Lfrom84332, .Llabel84333
[Codegen] call       .Lfrom84338
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom84346
[Codegen] .set .Llabel84346, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (Lambda)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel84375, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel84384, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel84393, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel84402, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel84411, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel84420, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel84429, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel84438, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel84444, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel84450, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel84456, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel84462, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel84468, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel84474, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel84480, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom84520
[Codegen] .set .Llabel84520, .
[Codegen] int3
[Codegen] .set .Llabel84521, .
[Codegen] .set .Lfrom84520, .Llabel84521
[Codegen] call       .Lfrom84526
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel84531, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel84540, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel84549, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel84558, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel84567, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel84576, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel84585, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel84594, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel84600, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel84606, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel84612, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel84618, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel84624, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel84630, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel84636, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel84672, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel84686, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel84693, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xc6
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom84724
[Codegen] .set .Llabel84724, .
[Codegen] int3
[Codegen] .set .Llabel84725, .
[Codegen] .set .Lfrom84724, .Llabel84725
[Codegen] call       .Lfrom84730
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom84739
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (LeaveWith)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel84764, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel84773, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel84782, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel84791, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel84800, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel84809, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel84818, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel84827, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel84833, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel84839, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel84845, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel84851, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel84857, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel84863, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel84869, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom84909
[Codegen] .set .Llabel84909, .
[Codegen] int3
[Codegen] .set .Llabel84910, .
[Codegen] .set .Lfrom84909, .Llabel84910
[Codegen] call       .Lfrom84915
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel84920, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel84929, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel84938, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel84947, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel84956, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel84965, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel84974, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel84983, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel84989, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel84995, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel85001, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel85007, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel85013, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel85019, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel85025, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel85056, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel85070, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel85077, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xc7
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel85090, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom85104
[Codegen] .set .Llabel85104, .
[Codegen] int3
[Codegen] .set .Llabel85105, .
[Codegen] .set .Lfrom85104, .Llabel85105
[Codegen] call       .Lfrom85110
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom85118
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (LinearizeForCharAccess)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel85143, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel85152, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel85161, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel85170, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel85179, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel85188, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel85197, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel85206, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel85212, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel85218, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel85224, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel85230, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel85236, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel85242, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel85248, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom85288
[Codegen] .set .Llabel85288, .
[Codegen] int3
[Codegen] .set .Llabel85289, .
[Codegen] .set .Lfrom85288, .Llabel85289
[Codegen] call       .Lfrom85294
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel85299, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel85308, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel85317, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel85326, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel85335, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel85344, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel85353, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel85362, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel85368, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel85374, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel85380, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel85386, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel85392, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel85398, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel85404, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel85440, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel85454, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel85461, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xc8
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel85474, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom85488
[Codegen] .set .Llabel85488, .
[Codegen] int3
[Codegen] .set .Llabel85489, .
[Codegen] .set .Lfrom85488, .Llabel85489
[Codegen] call       .Lfrom85494
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom85503
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (LoadAliasedDebugVar)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel85528, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel85537, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel85546, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel85555, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel85564, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel85573, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel85582, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel85591, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel85597, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel85603, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel85609, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel85615, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel85621, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel85627, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel85633, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom85673
[Codegen] .set .Llabel85673, .
[Codegen] int3
[Codegen] .set .Llabel85674, .
[Codegen] .set .Lfrom85673, .Llabel85674
[Codegen] call       .Lfrom85679
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel85684, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel85693, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel85702, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel85711, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel85720, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel85729, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel85738, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel85747, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel85753, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel85759, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel85765, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel85771, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel85777, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel85783, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel85789, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel85824, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel85838, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel85845, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xc9
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] .set .Llabel85874, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel85878, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom85892
[Codegen] .set .Llabel85892, .
[Codegen] int3
[Codegen] .set .Llabel85893, .
[Codegen] .set .Lfrom85892, .Llabel85893
[Codegen] call       .Lfrom85898
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom85906
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (MapObjectCreate)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel85935, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel85944, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel85953, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel85962, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel85971, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel85980, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel85989, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel85998, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel86004, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel86010, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel86016, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel86022, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel86028, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel86034, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel86040, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom86080
[Codegen] .set .Llabel86080, .
[Codegen] int3
[Codegen] .set .Llabel86081, .
[Codegen] .set .Lfrom86080, .Llabel86081
[Codegen] call       .Lfrom86086
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel86091, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel86100, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel86109, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel86118, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel86127, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel86136, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel86145, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel86154, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel86160, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel86166, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel86172, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel86178, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel86184, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel86190, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel86196, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel86224, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel86238, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel86245, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xca
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom86272
[Codegen] .set .Llabel86272, .
[Codegen] int3
[Codegen] .set .Llabel86273, .
[Codegen] .set .Lfrom86272, .Llabel86273
[Codegen] call       .Lfrom86278
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom86287
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (MapObjectCreateFromIterable)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel86312, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel86321, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel86330, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel86339, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel86348, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel86357, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel86366, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel86375, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel86381, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel86387, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel86393, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel86399, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel86405, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel86411, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel86417, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom86457
[Codegen] .set .Llabel86457, .
[Codegen] int3
[Codegen] .set .Llabel86458, .
[Codegen] .set .Lfrom86457, .Llabel86458
[Codegen] call       .Lfrom86463
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel86468, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel86477, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel86486, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel86495, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel86504, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel86513, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel86522, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel86531, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel86537, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel86543, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel86549, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel86555, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel86561, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel86567, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel86573, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel86608, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel86622, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel86629, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xcb
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom86664
[Codegen] .set .Llabel86664, .
[Codegen] int3
[Codegen] .set .Llabel86665, .
[Codegen] .set .Lfrom86664, .Llabel86665
[Codegen] call       .Lfrom86670
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom86679
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (MapObjectDelete)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel86704, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel86713, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel86722, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel86731, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel86740, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel86749, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel86758, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel86767, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel86773, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel86779, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel86785, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel86791, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel86797, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel86803, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel86809, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom86849
[Codegen] .set .Llabel86849, .
[Codegen] int3
[Codegen] .set .Llabel86850, .
[Codegen] .set .Lfrom86849, .Llabel86850
[Codegen] call       .Lfrom86855
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel86860, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel86869, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel86878, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel86887, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel86896, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel86905, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel86914, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel86923, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel86929, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel86935, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel86941, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel86947, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel86953, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel86959, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel86965, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel86992, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel87006, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel87013, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xcc
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom87052
[Codegen] .set .Llabel87052, .
[Codegen] int3
[Codegen] .set .Llabel87053, .
[Codegen] .set .Lfrom87052, .Llabel87053
[Codegen] call       .Lfrom87058
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom87066
[Codegen] .set .Llabel87066, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (MapObjectGet)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel87095, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel87104, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel87113, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel87122, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel87131, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel87140, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel87149, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel87158, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel87164, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel87170, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel87176, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel87182, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel87188, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel87194, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel87200, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom87240
[Codegen] .set .Llabel87240, .
[Codegen] int3
[Codegen] .set .Llabel87241, .
[Codegen] .set .Lfrom87240, .Llabel87241
[Codegen] call       .Lfrom87246
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel87251, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel87260, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel87269, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel87278, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel87287, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel87296, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel87305, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel87314, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel87320, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel87326, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel87332, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel87338, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel87344, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel87350, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel87356, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel87392, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel87406, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel87413, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xcd
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom87460
[Codegen] .set .Llabel87460, .
[Codegen] int3
[Codegen] .set .Llabel87461, .
[Codegen] .set .Lfrom87460, .Llabel87461
[Codegen] call       .Lfrom87466
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom87474
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (MapObjectHas)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel87503, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel87512, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel87521, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel87530, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel87539, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel87548, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel87557, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel87566, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel87572, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel87578, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel87584, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel87590, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel87596, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel87602, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel87608, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom87648
[Codegen] .set .Llabel87648, .
[Codegen] int3
[Codegen] .set .Llabel87649, .
[Codegen] .set .Lfrom87648, .Llabel87649
[Codegen] call       .Lfrom87654
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel87659, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel87668, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel87677, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel87686, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel87695, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel87704, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel87713, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel87722, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel87728, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel87734, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel87740, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel87746, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel87752, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel87758, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel87764, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel87792, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel87806, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel87813, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xce
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom87852
[Codegen] .set .Llabel87852, .
[Codegen] int3
[Codegen] .set .Llabel87853, .
[Codegen] .set .Lfrom87852, .Llabel87853
[Codegen] call       .Lfrom87858
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom87866
[Codegen] .set .Llabel87866, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (MapObjectSet)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel87895, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel87904, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel87913, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel87922, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel87931, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel87940, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel87949, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel87958, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel87964, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel87970, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel87976, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel87982, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel87988, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel87994, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel88000, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom88040
[Codegen] .set .Llabel88040, .
[Codegen] int3
[Codegen] .set .Llabel88041, .
[Codegen] .set .Lfrom88040, .Llabel88041
[Codegen] call       .Lfrom88046
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel88051, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel88060, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel88069, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel88078, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel88087, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel88096, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel88105, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel88114, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel88120, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel88126, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel88132, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel88138, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel88144, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel88150, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel88156, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel88192, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel88206, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel88213, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xcf
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom88248
[Codegen] .set .Llabel88248, .
[Codegen] int3
[Codegen] .set .Llabel88249, .
[Codegen] .set .Lfrom88248, .Llabel88249
[Codegen] call       .Lfrom88254
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom88262
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (MapObjectSetFromIC)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel88287, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel88296, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel88305, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel88314, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel88323, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel88332, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel88341, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel88350, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel88356, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel88362, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel88368, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel88374, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel88380, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel88386, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel88392, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom88432
[Codegen] .set .Llabel88432, .
[Codegen] int3
[Codegen] .set .Llabel88433, .
[Codegen] .set .Lfrom88432, .Llabel88433
[Codegen] call       .Lfrom88438
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel88443, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel88452, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel88461, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel88470, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel88479, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel88488, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel88497, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel88506, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel88512, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel88518, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel88524, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel88530, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel88536, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel88542, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel88548, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel88576, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel88590, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel88597, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xd0
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom88648
[Codegen] .set .Llabel88648, .
[Codegen] int3
[Codegen] .set .Llabel88649, .
[Codegen] .set .Lfrom88648, .Llabel88649
[Codegen] call       .Lfrom88654
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom88662
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (MutatePrototype)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel88691, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel88700, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel88709, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel88718, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel88727, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel88736, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel88745, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel88754, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel88760, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel88766, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel88772, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel88778, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel88784, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel88790, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel88796, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom88836
[Codegen] .set .Llabel88836, .
[Codegen] int3
[Codegen] .set .Llabel88837, .
[Codegen] .set .Lfrom88836, .Llabel88837
[Codegen] call       .Lfrom88842
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel88847, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel88856, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel88865, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel88874, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel88883, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel88892, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel88901, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel88910, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel88916, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel88922, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel88928, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel88934, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel88940, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel88946, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel88952, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel88976, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel88990, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel88997, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xd1
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom89028
[Codegen] .set .Llabel89028, .
[Codegen] int3
[Codegen] .set .Llabel89029, .
[Codegen] .set .Lfrom89028, .Llabel89029
[Codegen] call       .Lfrom89034
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom89042
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (NamedLambdaObjectCreateWithoutEnclosing)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel89067, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel89076, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel89085, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel89094, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel89103, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel89112, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel89121, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel89130, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel89136, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel89142, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel89148, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel89154, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel89160, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel89166, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel89172, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom89212
[Codegen] .set .Llabel89212, .
[Codegen] int3
[Codegen] .set .Llabel89213, .
[Codegen] .set .Lfrom89212, .Llabel89213
[Codegen] call       .Lfrom89218
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel89223, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel89232, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel89241, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel89250, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel89259, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel89268, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel89277, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel89286, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel89292, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel89298, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel89304, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel89310, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel89316, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel89322, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel89328, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel89360, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel89374, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel89381, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xd2
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom89408
[Codegen] .set .Llabel89408, .
[Codegen] int3
[Codegen] .set .Llabel89409, .
[Codegen] .set .Lfrom89408, .Llabel89409
[Codegen] call       .Lfrom89414
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom89423
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (NativeGetElement)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel89448, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel89457, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel89466, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel89475, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel89484, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel89493, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel89502, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel89511, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel89517, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel89523, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel89529, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel89535, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel89541, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel89547, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel89553, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom89593
[Codegen] .set .Llabel89593, .
[Codegen] int3
[Codegen] .set .Llabel89594, .
[Codegen] .set .Lfrom89593, .Llabel89594
[Codegen] call       .Lfrom89599
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel89604, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel89613, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel89622, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel89631, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel89640, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel89649, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel89658, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel89667, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel89673, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel89679, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel89685, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel89691, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel89697, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel89703, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel89709, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel89744, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel89758, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel89765, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xd3
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r8
[Codegen] .set .Llabel89794, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom89816
[Codegen] .set .Llabel89816, .
[Codegen] int3
[Codegen] .set .Llabel89817, .
[Codegen] .set .Lfrom89816, .Llabel89817
[Codegen] call       .Lfrom89822
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom89830
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (NewArgumentsObject)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel89859, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel89868, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel89877, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel89886, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel89895, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel89904, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel89913, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel89922, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel89928, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel89934, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel89940, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel89946, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel89952, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel89958, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel89964, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom90004
[Codegen] .set .Llabel90004, .
[Codegen] int3
[Codegen] .set .Llabel90005, .
[Codegen] .set .Lfrom90004, .Llabel90005
[Codegen] call       .Lfrom90010
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel90015, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel90024, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel90033, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel90042, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel90051, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel90060, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel90069, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel90078, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel90084, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel90090, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel90096, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel90102, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel90108, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel90114, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel90120, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel90144, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel90158, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel90165, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xd4
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rdx
[Codegen] .set .Llabel90194, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom90208
[Codegen] .set .Llabel90208, .
[Codegen] int3
[Codegen] .set .Llabel90209, .
[Codegen] .set .Lfrom90208, .Llabel90209
[Codegen] call       .Lfrom90214
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom90222
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (NewArrayIterator)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel90251, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel90260, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel90269, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel90278, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel90287, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel90296, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel90305, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel90314, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel90320, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel90326, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel90332, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel90338, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel90344, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel90350, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel90356, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom90396
[Codegen] .set .Llabel90396, .
[Codegen] int3
[Codegen] .set .Llabel90397, .
[Codegen] .set .Lfrom90396, .Llabel90397
[Codegen] call       .Lfrom90402
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel90407, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel90416, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel90425, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel90434, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel90443, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel90452, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel90461, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel90470, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel90476, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel90482, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel90488, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel90494, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel90500, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel90506, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel90512, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel90544, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel90558, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel90565, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xd5
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom90588
[Codegen] .set .Llabel90588, .
[Codegen] int3
[Codegen] .set .Llabel90589, .
[Codegen] .set .Lfrom90588, .Llabel90589
[Codegen] call       .Lfrom90594
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom90603
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $8
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (NewArrayObjectBaselineFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel90628, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel90637, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel90646, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel90655, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel90664, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel90673, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel90682, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel90691, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel90697, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel90703, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel90709, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel90715, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel90721, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel90727, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel90733, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom90773
[Codegen] .set .Llabel90773, .
[Codegen] int3
[Codegen] .set .Llabel90774, .
[Codegen] .set .Lfrom90773, .Llabel90774
[Codegen] call       .Lfrom90779
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel90784, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel90793, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel90802, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel90811, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel90820, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel90829, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel90838, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel90847, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel90853, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel90859, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel90865, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel90871, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel90877, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel90883, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel90889, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel90928, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel90942, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel90949, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xd6
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel90962, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] .set .Llabel90966, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel90970, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom90984
[Codegen] .set .Llabel90984, .
[Codegen] int3
[Codegen] .set .Llabel90985, .
[Codegen] .set .Lfrom90984, .Llabel90985
[Codegen] call       .Lfrom90990
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom90999
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (NewArrayObjectEnsureDenseInitLength)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel91024, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel91033, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel91042, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel91051, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel91060, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel91069, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel91078, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel91087, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel91093, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel91099, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel91105, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel91111, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel91117, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel91123, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel91129, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom91169
[Codegen] .set .Llabel91169, .
[Codegen] int3
[Codegen] .set .Llabel91170, .
[Codegen] .set .Lfrom91169, .Llabel91170
[Codegen] call       .Lfrom91175
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel91180, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel91189, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel91198, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel91207, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel91216, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel91225, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel91234, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel91243, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel91249, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel91255, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel91261, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel91267, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel91273, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel91279, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel91285, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel91312, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel91326, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel91333, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xd7
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel91346, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom91360
[Codegen] .set .Llabel91360, .
[Codegen] int3
[Codegen] .set .Llabel91361, .
[Codegen] .set .Lfrom91360, .Llabel91361
[Codegen] call       .Lfrom91366
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom91375
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (NewArrayObjectOptimzedFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel91400, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel91409, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel91418, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel91427, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel91436, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel91445, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel91454, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel91463, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel91469, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel91475, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel91481, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel91487, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel91493, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel91499, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel91505, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom91545
[Codegen] .set .Llabel91545, .
[Codegen] int3
[Codegen] .set .Llabel91546, .
[Codegen] .set .Lfrom91545, .Llabel91546
[Codegen] call       .Lfrom91551
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel91556, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel91565, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel91574, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel91583, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel91592, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel91601, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel91610, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel91619, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel91625, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel91631, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel91637, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel91643, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel91649, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel91655, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel91661, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel91696, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel91710, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel91717, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xd8
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel91730, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] .set .Llabel91734, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel91738, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom91752
[Codegen] .set .Llabel91752, .
[Codegen] int3
[Codegen] .set .Llabel91753, .
[Codegen] .set .Lfrom91752, .Llabel91753
[Codegen] call       .Lfrom91758
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom91767
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (NewArrayOperation)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel91792, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel91801, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel91810, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel91819, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel91828, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel91837, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel91846, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel91855, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel91861, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel91867, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel91873, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel91879, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel91885, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel91891, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel91897, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom91937
[Codegen] .set .Llabel91937, .
[Codegen] int3
[Codegen] .set .Llabel91938, .
[Codegen] .set .Lfrom91937, .Llabel91938
[Codegen] call       .Lfrom91943
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel91948, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel91957, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel91966, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel91975, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel91984, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel91993, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel92002, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel92011, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel92017, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel92023, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel92029, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel92035, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel92041, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel92047, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel92053, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel92080, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel92094, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel92101, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xd9
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel92114, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel92118, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom92132
[Codegen] .set .Llabel92132, .
[Codegen] int3
[Codegen] .set .Llabel92133, .
[Codegen] .set .Lfrom92132, .Llabel92133
[Codegen] call       .Lfrom92138
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom92147
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (NewArrayWithShape)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel92172, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel92181, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel92190, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel92199, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel92208, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel92217, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel92226, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel92235, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel92241, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel92247, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel92253, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel92259, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel92265, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel92271, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel92277, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom92317
[Codegen] .set .Llabel92317, .
[Codegen] int3
[Codegen] .set .Llabel92318, .
[Codegen] .set .Lfrom92317, .Llabel92318
[Codegen] call       .Lfrom92323
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel92328, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel92337, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel92346, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel92355, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel92364, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel92373, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel92382, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel92391, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel92397, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel92403, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel92409, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel92415, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel92421, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel92427, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel92433, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel92464, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel92478, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel92485, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xda
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] .set .Llabel92502, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom92516
[Codegen] .set .Llabel92516, .
[Codegen] int3
[Codegen] .set .Llabel92517, .
[Codegen] .set .Lfrom92516, .Llabel92517
[Codegen] call       .Lfrom92522
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom92531
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (NewObjectOperation)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel92556, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel92565, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel92574, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel92583, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel92592, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel92601, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel92610, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel92619, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel92625, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel92631, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel92637, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel92643, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel92649, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel92655, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel92661, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom92701
[Codegen] .set .Llabel92701, .
[Codegen] int3
[Codegen] .set .Llabel92702, .
[Codegen] .set .Lfrom92701, .Llabel92702
[Codegen] call       .Lfrom92707
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel92712, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel92721, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel92730, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel92739, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel92748, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel92757, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel92766, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel92775, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel92781, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel92787, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel92793, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel92799, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel92805, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel92811, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel92817, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel92848, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel92862, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel92869, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xdb
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel92882, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom92900
[Codegen] .set .Llabel92900, .
[Codegen] int3
[Codegen] .set .Llabel92901, .
[Codegen] .set .Lfrom92900, .Llabel92901
[Codegen] call       .Lfrom92906
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom92915
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (NewPlainObjectBaselineFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel92940, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel92949, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel92958, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel92967, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel92976, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel92985, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel92994, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel93003, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel93009, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel93015, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel93021, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel93027, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel93033, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel93039, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel93045, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom93085
[Codegen] .set .Llabel93085, .
[Codegen] int3
[Codegen] .set .Llabel93086, .
[Codegen] .set .Lfrom93085, .Llabel93086
[Codegen] call       .Lfrom93091
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel93096, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel93105, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel93114, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel93123, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel93132, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel93141, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel93150, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel93159, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel93165, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel93171, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel93177, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel93183, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel93189, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel93195, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel93201, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel93232, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel93246, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel93253, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xdc
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel93266, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] .set .Llabel93270, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom93288
[Codegen] .set .Llabel93288, .
[Codegen] int3
[Codegen] .set .Llabel93289, .
[Codegen] .set .Lfrom93288, .Llabel93289
[Codegen] call       .Lfrom93294
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom93303
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (NewPlainObjectOptimizedFallback)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel93328, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel93337, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel93346, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel93355, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel93364, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel93373, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel93382, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel93391, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel93397, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel93403, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel93409, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel93415, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel93421, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel93427, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel93433, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom93473
[Codegen] .set .Llabel93473, .
[Codegen] int3
[Codegen] .set .Llabel93474, .
[Codegen] .set .Lfrom93473, .Llabel93474
[Codegen] call       .Lfrom93479
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel93484, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel93493, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel93502, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel93511, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel93520, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel93529, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel93538, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel93547, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel93553, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel93559, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel93565, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel93571, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel93577, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel93583, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel93589, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel93616, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel93630, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel93637, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xdd
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel93650, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] .set .Llabel93654, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom93672
[Codegen] .set .Llabel93672, .
[Codegen] int3
[Codegen] .set .Llabel93673, .
[Codegen] .set .Lfrom93672, .Llabel93673
[Codegen] call       .Lfrom93678
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom93687
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (NewPrivateName)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel93712, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel93721, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel93730, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel93739, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel93748, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel93757, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel93766, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel93775, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel93781, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel93787, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel93793, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel93799, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel93805, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel93811, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel93817, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom93857
[Codegen] .set .Llabel93857, .
[Codegen] int3
[Codegen] .set .Llabel93858, .
[Codegen] .set .Lfrom93857, .Llabel93858
[Codegen] call       .Lfrom93863
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel93868, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel93877, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel93886, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel93895, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel93904, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel93913, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel93922, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel93931, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel93937, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel93943, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel93949, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel93955, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel93961, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel93967, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel93973, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel94000, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel94014, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel94021, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xde
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom94048
[Codegen] .set .Llabel94048, .
[Codegen] int3
[Codegen] .set .Llabel94049, .
[Codegen] .set .Lfrom94048, .Llabel94049
[Codegen] call       .Lfrom94054
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom94063
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (NewRegExpStringIterator)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel94088, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel94097, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel94106, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel94115, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel94124, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel94133, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel94142, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel94151, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel94157, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel94163, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel94169, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel94175, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel94181, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel94187, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel94193, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom94233
[Codegen] .set .Llabel94233, .
[Codegen] int3
[Codegen] .set .Llabel94234, .
[Codegen] .set .Lfrom94233, .Llabel94234
[Codegen] call       .Lfrom94239
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel94244, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel94253, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel94262, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel94271, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel94280, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel94289, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel94298, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel94307, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel94313, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel94319, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel94325, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel94331, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel94337, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel94343, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel94349, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel94384, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel94398, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel94405, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xdf
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom94428
[Codegen] .set .Llabel94428, .
[Codegen] int3
[Codegen] .set .Llabel94429, .
[Codegen] .set .Lfrom94428, .Llabel94429
[Codegen] call       .Lfrom94434
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom94443
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $8
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (NewStringIterator)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel94468, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel94477, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel94486, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel94495, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel94504, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel94513, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel94522, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel94531, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel94537, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel94543, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel94549, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel94555, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel94561, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel94567, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel94573, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom94613
[Codegen] .set .Llabel94613, .
[Codegen] int3
[Codegen] .set .Llabel94614, .
[Codegen] .set .Lfrom94613, .Llabel94614
[Codegen] call       .Lfrom94619
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel94624, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel94633, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel94642, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel94651, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel94660, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel94669, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel94678, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel94687, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel94693, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel94699, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel94705, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel94711, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel94717, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel94723, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel94729, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel94768, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel94782, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel94789, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xe0
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom94812
[Codegen] .set .Llabel94812, .
[Codegen] int3
[Codegen] .set .Llabel94813, .
[Codegen] .set .Lfrom94812, .Llabel94813
[Codegen] call       .Lfrom94818
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom94827
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $8
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (NewStringObject)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel94852, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel94861, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel94870, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel94879, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel94888, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel94897, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel94906, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel94915, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel94921, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel94927, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel94933, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel94939, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel94945, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel94951, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel94957, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom94997
[Codegen] .set .Llabel94997, .
[Codegen] int3
[Codegen] .set .Llabel94998, .
[Codegen] .set .Lfrom94997, .Llabel94998
[Codegen] call       .Lfrom95003
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel95008, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel95017, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel95026, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel95035, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel95044, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel95053, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel95062, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel95071, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel95077, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel95083, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel95089, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel95095, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel95101, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel95107, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel95113, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel95152, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel95166, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel95173, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xe1
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom95200
[Codegen] .set .Llabel95200, .
[Codegen] int3
[Codegen] .set .Llabel95201, .
[Codegen] .set .Lfrom95200, .Llabel95201
[Codegen] call       .Lfrom95206
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom95215
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (NewTypedArrayWithTemplateAndArray)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel95240, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel95249, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel95258, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel95267, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel95276, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel95285, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel95294, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel95303, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel95309, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel95315, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel95321, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel95327, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel95333, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel95339, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel95345, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom95385
[Codegen] .set .Llabel95385, .
[Codegen] int3
[Codegen] .set .Llabel95386, .
[Codegen] .set .Lfrom95385, .Llabel95386
[Codegen] call       .Lfrom95391
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel95396, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel95405, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel95414, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel95423, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel95432, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel95441, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel95450, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel95459, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel95465, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel95471, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel95477, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel95483, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel95489, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel95495, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel95501, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel95536, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel95550, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel95557, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xe2
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom95588
[Codegen] .set .Llabel95588, .
[Codegen] int3
[Codegen] .set .Llabel95589, .
[Codegen] .set .Lfrom95588, .Llabel95589
[Codegen] call       .Lfrom95594
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom95603
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (NewTypedArrayWithTemplateAndBuffer)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel95628, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel95637, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel95646, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel95655, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel95664, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel95673, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel95682, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel95691, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel95697, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel95703, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel95709, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel95715, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel95721, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel95727, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel95733, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom95773
[Codegen] .set .Llabel95773, .
[Codegen] int3
[Codegen] .set .Llabel95774, .
[Codegen] .set .Lfrom95773, .Llabel95774
[Codegen] call       .Lfrom95779
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel95784, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel95793, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel95802, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel95811, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel95820, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel95829, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel95838, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel95847, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel95853, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel95859, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel95865, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel95871, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel95877, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel95883, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel95889, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel95920, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel95934, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel95941, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xe3
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom95980
[Codegen] .set .Llabel95980, .
[Codegen] int3
[Codegen] .set .Llabel95981, .
[Codegen] .set .Lfrom95980, .Llabel95981
[Codegen] call       .Lfrom95986
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom95995
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (NewTypedArrayWithTemplateAndLength)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel96020, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel96029, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel96038, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel96047, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel96056, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel96065, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel96074, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel96083, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel96089, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel96095, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel96101, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel96107, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel96113, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel96119, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel96125, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom96165
[Codegen] .set .Llabel96165, .
[Codegen] int3
[Codegen] .set .Llabel96166, .
[Codegen] .set .Lfrom96165, .Llabel96166
[Codegen] call       .Lfrom96171
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel96176, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel96185, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel96194, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel96203, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel96212, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel96221, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel96230, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel96239, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel96245, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel96251, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel96257, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel96263, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel96269, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel96275, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel96281, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel96320, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel96334, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel96341, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xe4
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel96354, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom96372
[Codegen] .set .Llabel96372, .
[Codegen] int3
[Codegen] .set .Llabel96373, .
[Codegen] .set .Lfrom96372, .Llabel96373
[Codegen] call       .Lfrom96378
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom96387
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (NormalSuspend)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel96412, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel96421, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel96430, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel96439, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel96448, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel96457, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel96466, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel96475, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel96481, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel96487, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel96493, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel96499, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel96505, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel96511, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel96517, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom96557
[Codegen] .set .Llabel96557, .
[Codegen] int3
[Codegen] .set .Llabel96558, .
[Codegen] .set .Lfrom96557, .Llabel96558
[Codegen] call       .Lfrom96563
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel96568, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel96577, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel96586, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel96595, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel96604, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel96613, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel96622, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel96631, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel96637, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel96643, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel96649, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel96655, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel96661, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel96667, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel96673, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel96704, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel96718, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel96725, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xe5
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel96738, .
[Codegen] movq       0x30(%rbp), %r8
[Codegen] .set .Llabel96742, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] .set .Llabel96746, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom96764
[Codegen] .set .Llabel96764, .
[Codegen] int3
[Codegen] .set .Llabel96765, .
[Codegen] .set .Lfrom96764, .Llabel96765
[Codegen] call       .Lfrom96770
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom96778
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (NumberParseInt)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel96803, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel96812, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel96821, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel96830, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel96839, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel96848, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel96857, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel96866, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel96872, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel96878, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel96884, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel96890, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel96896, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel96902, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel96908, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom96948
[Codegen] .set .Llabel96948, .
[Codegen] int3
[Codegen] .set .Llabel96949, .
[Codegen] .set .Lfrom96948, .Llabel96949
[Codegen] call       .Lfrom96954
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel96959, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel96968, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel96977, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel96986, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel96995, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel97004, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel97013, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel97022, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel97028, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel97034, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel97040, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel97046, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel97052, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel97058, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel97064, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel97088, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel97102, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel97109, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xe6
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] .set .Llabel97138, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom97156
[Codegen] .set .Llabel97156, .
[Codegen] int3
[Codegen] .set .Llabel97157, .
[Codegen] .set .Lfrom97156, .Llabel97157
[Codegen] call       .Lfrom97162
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom97170
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (NumberToString)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel97199, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel97208, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel97217, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel97226, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel97235, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel97244, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel97253, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel97262, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel97268, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel97274, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel97280, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel97286, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel97292, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel97298, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel97304, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom97344
[Codegen] .set .Llabel97344, .
[Codegen] int3
[Codegen] .set .Llabel97345, .
[Codegen] .set .Lfrom97344, .Llabel97345
[Codegen] call       .Lfrom97350
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel97355, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel97364, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel97373, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel97382, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel97391, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel97400, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel97409, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel97418, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel97424, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel97430, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel97436, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel97442, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel97448, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel97454, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel97460, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel97488, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel97502, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel97509, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xe7
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel97522, .
[Codegen] vmovsd     0x18(%rbp), %xmm0
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom97537
[Codegen] .set .Llabel97537, .
[Codegen] int3
[Codegen] .set .Llabel97538, .
[Codegen] .set .Lfrom97537, .Llabel97538
[Codegen] call       .Lfrom97543
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom97552
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ObjectCreateWithTemplate)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel97577, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel97586, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel97595, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel97604, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel97613, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel97622, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel97631, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel97640, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel97646, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel97652, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel97658, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel97664, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel97670, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel97676, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel97682, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom97722
[Codegen] .set .Llabel97722, .
[Codegen] int3
[Codegen] .set .Llabel97723, .
[Codegen] .set .Lfrom97722, .Llabel97723
[Codegen] call       .Lfrom97728
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel97733, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel97742, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel97751, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel97760, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel97769, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel97778, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel97787, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel97796, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel97802, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel97808, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel97814, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel97820, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel97826, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel97832, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel97838, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel97872, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel97886, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel97893, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xe8
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom97920
[Codegen] .set .Llabel97920, .
[Codegen] int3
[Codegen] .set .Llabel97921, .
[Codegen] .set .Lfrom97920, .Llabel97921
[Codegen] call       .Lfrom97926
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom97935
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ObjectKeys)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel97960, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel97969, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel97978, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel97987, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel97996, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel98005, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel98014, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel98023, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel98029, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel98035, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel98041, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel98047, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel98053, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel98059, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel98065, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom98105
[Codegen] .set .Llabel98105, .
[Codegen] int3
[Codegen] .set .Llabel98106, .
[Codegen] .set .Lfrom98105, .Llabel98106
[Codegen] call       .Lfrom98111
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel98116, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel98125, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel98134, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel98143, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel98152, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel98161, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel98170, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel98179, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel98185, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel98191, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel98197, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel98203, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel98209, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel98215, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel98221, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel98256, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel98270, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel98277, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xe9
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom98304
[Codegen] .set .Llabel98304, .
[Codegen] int3
[Codegen] .set .Llabel98305, .
[Codegen] .set .Lfrom98304, .Llabel98305
[Codegen] call       .Lfrom98310
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom98319
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ObjectKeysLength)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel98344, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel98353, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel98362, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel98371, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel98380, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel98389, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel98398, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel98407, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel98413, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel98419, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel98425, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel98431, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel98437, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel98443, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel98449, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom98489
[Codegen] .set .Llabel98489, .
[Codegen] int3
[Codegen] .set .Llabel98490, .
[Codegen] .set .Lfrom98489, .Llabel98490
[Codegen] call       .Lfrom98495
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel98500, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel98509, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel98518, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel98527, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel98536, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel98545, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel98554, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel98563, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel98569, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel98575, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel98581, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel98587, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel98593, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel98599, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel98605, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel98640, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel98654, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel98661, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xea
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom98696
[Codegen] .set .Llabel98696, .
[Codegen] int3
[Codegen] .set .Llabel98697, .
[Codegen] .set .Lfrom98696, .Llabel98697
[Codegen] call       .Lfrom98702
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom98710
[Codegen] .set .Llabel98710, .
[Codegen] movl       -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ObjectWithProtoOperation)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel98738, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel98747, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel98756, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel98765, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel98774, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel98783, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel98792, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel98801, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel98807, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel98813, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel98819, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel98825, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel98831, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel98837, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel98843, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom98883
[Codegen] .set .Llabel98883, .
[Codegen] int3
[Codegen] .set .Llabel98884, .
[Codegen] .set .Lfrom98883, .Llabel98884
[Codegen] call       .Lfrom98889
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel98894, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel98903, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel98912, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel98921, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel98930, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel98939, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel98948, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel98957, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel98963, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel98969, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel98975, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel98981, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel98987, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel98993, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel98999, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel99024, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel99038, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel99045, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xeb
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom99072
[Codegen] .set .Llabel99072, .
[Codegen] int3
[Codegen] .set .Llabel99073, .
[Codegen] .set .Lfrom99072, .Llabel99073
[Codegen] call       .Lfrom99078
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom99087
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (OnDebuggerStatement)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel99112, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel99121, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel99130, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel99139, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel99148, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel99157, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel99166, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel99175, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel99181, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel99187, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel99193, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel99199, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel99205, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel99211, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel99217, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom99257
[Codegen] .set .Llabel99257, .
[Codegen] int3
[Codegen] .set .Llabel99258, .
[Codegen] .set .Lfrom99257, .Llabel99258
[Codegen] call       .Lfrom99263
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel99268, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel99277, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel99286, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel99295, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel99304, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel99313, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel99322, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel99331, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel99337, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel99343, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel99349, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel99355, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel99361, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel99367, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel99373, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel99408, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel99422, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel99429, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xec
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel99442, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom99456
[Codegen] .set .Llabel99456, .
[Codegen] int3
[Codegen] .set .Llabel99457, .
[Codegen] .set .Lfrom99456, .Llabel99457
[Codegen] call       .Lfrom99462
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom99470
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ProxyGetProperty)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel99495, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel99504, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel99513, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel99522, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel99531, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel99540, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel99549, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel99558, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel99564, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel99570, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel99576, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel99582, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel99588, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel99594, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel99600, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom99640
[Codegen] .set .Llabel99640, .
[Codegen] int3
[Codegen] .set .Llabel99641, .
[Codegen] .set .Lfrom99640, .Llabel99641
[Codegen] call       .Lfrom99646
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel99651, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel99660, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel99669, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel99678, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel99687, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel99696, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel99705, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel99714, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel99720, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel99726, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel99732, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel99738, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel99744, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel99750, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel99756, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel99792, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel99806, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel99813, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xed
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom99860
[Codegen] .set .Llabel99860, .
[Codegen] int3
[Codegen] .set .Llabel99861, .
[Codegen] .set .Lfrom99860, .Llabel99861
[Codegen] call       .Lfrom99866
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom99874
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ProxyGetPropertyByValue)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel99903, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel99912, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel99921, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel99930, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel99939, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel99948, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel99957, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel99966, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel99972, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel99978, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel99984, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel99990, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel99996, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel100002, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel100008, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom100048
[Codegen] .set .Llabel100048, .
[Codegen] int3
[Codegen] .set .Llabel100049, .
[Codegen] .set .Lfrom100048, .Llabel100049
[Codegen] call       .Lfrom100054
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel100059, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel100068, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel100077, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel100086, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel100095, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel100104, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel100113, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel100122, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel100128, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel100134, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel100140, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel100146, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel100152, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel100158, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel100164, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel100192, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel100206, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel100213, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xee
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom100260
[Codegen] .set .Llabel100260, .
[Codegen] int3
[Codegen] .set .Llabel100261, .
[Codegen] .set .Lfrom100260, .Llabel100261
[Codegen] call       .Lfrom100266
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom100274
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ProxyHas)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel100303, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel100312, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel100321, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel100330, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel100339, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel100348, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel100357, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel100366, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel100372, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel100378, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel100384, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel100390, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel100396, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel100402, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel100408, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom100448
[Codegen] .set .Llabel100448, .
[Codegen] int3
[Codegen] .set .Llabel100449, .
[Codegen] .set .Lfrom100448, .Llabel100449
[Codegen] call       .Lfrom100454
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel100459, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel100468, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel100477, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel100486, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel100495, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel100504, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel100513, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel100522, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel100528, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel100534, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel100540, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel100546, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel100552, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel100558, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel100564, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel100592, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel100606, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel100613, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xef
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom100652
[Codegen] .set .Llabel100652, .
[Codegen] int3
[Codegen] .set .Llabel100653, .
[Codegen] .set .Lfrom100652, .Llabel100653
[Codegen] call       .Lfrom100658
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom100666
[Codegen] .set .Llabel100666, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ProxyHasOwn)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel100695, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel100704, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel100713, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel100722, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel100731, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel100740, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel100749, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel100758, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel100764, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel100770, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel100776, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel100782, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel100788, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel100794, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel100800, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom100840
[Codegen] .set .Llabel100840, .
[Codegen] int3
[Codegen] .set .Llabel100841, .
[Codegen] .set .Lfrom100840, .Llabel100841
[Codegen] call       .Lfrom100846
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel100851, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel100860, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel100869, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel100878, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel100887, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel100896, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel100905, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel100914, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel100920, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel100926, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel100932, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel100938, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel100944, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel100950, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel100956, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel100992, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel101006, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel101013, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xf0
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom101052
[Codegen] .set .Llabel101052, .
[Codegen] int3
[Codegen] .set .Llabel101053, .
[Codegen] .set .Lfrom101052, .Llabel101053
[Codegen] call       .Lfrom101058
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom101066
[Codegen] .set .Llabel101066, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ProxySetProperty)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel101095, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel101104, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel101113, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel101122, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel101131, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel101140, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel101149, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel101158, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel101164, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel101170, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel101176, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel101182, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel101188, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel101194, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel101200, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom101240
[Codegen] .set .Llabel101240, .
[Codegen] int3
[Codegen] .set .Llabel101241, .
[Codegen] .set .Lfrom101240, .Llabel101241
[Codegen] call       .Lfrom101246
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel101251, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel101260, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel101269, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel101278, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel101287, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel101296, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel101305, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel101314, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel101320, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel101326, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel101332, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel101338, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel101344, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel101350, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel101356, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel101392, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel101406, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel101413, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xf1
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel101426, .
[Codegen] movq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom101452
[Codegen] .set .Llabel101452, .
[Codegen] int3
[Codegen] .set .Llabel101453, .
[Codegen] .set .Lfrom101452, .Llabel101453
[Codegen] call       .Lfrom101458
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom101466
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ProxySetPropertyByValue)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel101491, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel101500, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel101509, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel101518, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel101527, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel101536, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel101545, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel101554, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel101560, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel101566, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel101572, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel101578, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel101584, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel101590, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel101596, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom101636
[Codegen] .set .Llabel101636, .
[Codegen] int3
[Codegen] .set .Llabel101637, .
[Codegen] .set .Lfrom101636, .Llabel101637
[Codegen] call       .Lfrom101642
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel101647, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel101656, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel101665, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel101674, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel101683, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel101692, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel101701, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel101710, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel101716, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel101722, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel101728, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel101734, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel101740, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel101746, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel101752, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel101776, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel101790, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel101797, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xf2
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel101810, .
[Codegen] movq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom101836
[Codegen] .set .Llabel101836, .
[Codegen] int3
[Codegen] .set .Llabel101837, .
[Codegen] .set .Lfrom101836, .Llabel101837
[Codegen] call       .Lfrom101842
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom101850
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (PushClassBodyEnv)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel101875, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel101884, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel101893, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel101902, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel101911, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel101920, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel101929, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel101938, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel101944, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel101950, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel101956, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel101962, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel101968, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel101974, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel101980, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom102020
[Codegen] .set .Llabel102020, .
[Codegen] int3
[Codegen] .set .Llabel102021, .
[Codegen] .set .Lfrom102020, .Llabel102021
[Codegen] call       .Lfrom102026
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel102031, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel102040, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel102049, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel102058, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel102067, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel102076, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel102085, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel102094, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel102100, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel102106, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel102112, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel102118, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel102124, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel102130, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel102136, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel102160, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel102174, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel102181, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xf3
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] .set .Llabel102198, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom102212
[Codegen] .set .Llabel102212, .
[Codegen] int3
[Codegen] .set .Llabel102213, .
[Codegen] .set .Lfrom102212, .Llabel102213
[Codegen] call       .Lfrom102218
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom102226
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (PushLexicalEnv)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel102251, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel102260, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel102269, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel102278, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel102287, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel102296, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel102305, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel102314, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel102320, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel102326, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel102332, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel102338, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel102344, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel102350, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel102356, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom102396
[Codegen] .set .Llabel102396, .
[Codegen] int3
[Codegen] .set .Llabel102397, .
[Codegen] .set .Lfrom102396, .Llabel102397
[Codegen] call       .Lfrom102402
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel102407, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel102416, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel102425, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel102434, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel102443, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel102452, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel102461, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel102470, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel102476, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel102482, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel102488, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel102494, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel102500, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel102506, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel102512, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel102544, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel102558, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel102565, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xf4
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] .set .Llabel102582, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom102596
[Codegen] .set .Llabel102596, .
[Codegen] int3
[Codegen] .set .Llabel102597, .
[Codegen] .set .Lfrom102596, .Llabel102597
[Codegen] call       .Lfrom102602
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom102610
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (PushVarEnv)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel102635, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel102644, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel102653, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel102662, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel102671, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel102680, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel102689, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel102698, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel102704, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel102710, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel102716, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel102722, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel102728, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel102734, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel102740, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom102780
[Codegen] .set .Llabel102780, .
[Codegen] int3
[Codegen] .set .Llabel102781, .
[Codegen] .set .Lfrom102780, .Llabel102781
[Codegen] call       .Lfrom102786
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel102791, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel102800, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel102809, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel102818, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel102827, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel102836, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel102845, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel102854, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel102860, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel102866, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel102872, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel102878, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel102884, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel102890, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel102896, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel102928, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel102942, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel102949, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xf5
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] .set .Llabel102966, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom102980
[Codegen] .set .Llabel102980, .
[Codegen] int3
[Codegen] .set .Llabel102981, .
[Codegen] .set .Lfrom102980, .Llabel102981
[Codegen] call       .Lfrom102986
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom102994
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (RecreateLexicalEnv)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel103019, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel103028, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel103037, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel103046, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel103055, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel103064, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel103073, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel103082, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel103088, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel103094, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel103100, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel103106, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel103112, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel103118, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel103124, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom103164
[Codegen] .set .Llabel103164, .
[Codegen] int3
[Codegen] .set .Llabel103165, .
[Codegen] .set .Lfrom103164, .Llabel103165
[Codegen] call       .Lfrom103170
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel103175, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel103184, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel103193, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel103202, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel103211, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel103220, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel103229, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel103238, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel103244, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel103250, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel103256, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel103262, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel103268, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel103274, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel103280, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel103312, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel103326, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel103333, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xf6
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel103346, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom103360
[Codegen] .set .Llabel103360, .
[Codegen] int3
[Codegen] .set .Llabel103361, .
[Codegen] .set .Lfrom103360, .Llabel103361
[Codegen] call       .Lfrom103366
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom103374
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (RegExpBuiltinExecMatchFromJit)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel103399, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel103408, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel103417, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel103426, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel103435, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel103444, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel103453, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel103462, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel103468, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel103474, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel103480, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel103486, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel103492, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel103498, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel103504, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom103544
[Codegen] .set .Llabel103544, .
[Codegen] int3
[Codegen] .set .Llabel103545, .
[Codegen] .set .Lfrom103544, .Llabel103545
[Codegen] call       .Lfrom103550
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel103555, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel103564, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel103573, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel103582, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel103591, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel103600, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel103609, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel103618, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel103624, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel103630, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel103636, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel103642, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel103648, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel103654, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel103660, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel103696, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel103710, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel103717, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xf7
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r8
[Codegen] .set .Llabel103746, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom103768
[Codegen] .set .Llabel103768, .
[Codegen] int3
[Codegen] .set .Llabel103769, .
[Codegen] .set .Lfrom103768, .Llabel103769
[Codegen] call       .Lfrom103774
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom103782
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (RegExpBuiltinExecTestFromJit)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel103811, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel103820, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel103829, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel103838, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel103847, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel103856, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel103865, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel103874, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel103880, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel103886, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel103892, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel103898, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel103904, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel103910, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel103916, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom103956
[Codegen] .set .Llabel103956, .
[Codegen] int3
[Codegen] .set .Llabel103957, .
[Codegen] .set .Lfrom103956, .Llabel103957
[Codegen] call       .Lfrom103962
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel103967, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel103976, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel103985, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel103994, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel104003, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel104012, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel104021, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel104030, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel104036, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel104042, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel104048, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel104054, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel104060, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel104066, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel104072, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel104096, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel104110, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel104117, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xf8
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom104156
[Codegen] .set .Llabel104156, .
[Codegen] int3
[Codegen] .set .Llabel104157, .
[Codegen] .set .Lfrom104156, .Llabel104157
[Codegen] call       .Lfrom104162
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom104170
[Codegen] .set .Llabel104170, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (RegExpHasCaptureGroups)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel104199, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel104208, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel104217, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel104226, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel104235, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel104244, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel104253, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel104262, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel104268, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel104274, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel104280, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel104286, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel104292, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel104298, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel104304, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom104344
[Codegen] .set .Llabel104344, .
[Codegen] int3
[Codegen] .set .Llabel104345, .
[Codegen] .set .Lfrom104344, .Llabel104345
[Codegen] call       .Lfrom104350
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel104355, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel104364, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel104373, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel104382, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel104391, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel104400, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel104409, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel104418, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel104424, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel104430, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel104436, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel104442, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel104448, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel104454, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel104460, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel104496, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel104510, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel104517, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xf9
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom104556
[Codegen] .set .Llabel104556, .
[Codegen] int3
[Codegen] .set .Llabel104557, .
[Codegen] .set .Lfrom104556, .Llabel104557
[Codegen] call       .Lfrom104562
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom104570
[Codegen] .set .Llabel104570, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (RegExpMatcherRaw)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel104599, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel104608, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel104617, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel104626, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel104635, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel104644, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel104653, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel104662, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel104668, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel104674, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel104680, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel104686, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel104692, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel104698, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel104704, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom104744
[Codegen] .set .Llabel104744, .
[Codegen] int3
[Codegen] .set .Llabel104745, .
[Codegen] .set .Lfrom104744, .Llabel104745
[Codegen] call       .Lfrom104750
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel104755, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel104764, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel104773, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel104782, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel104791, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel104800, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel104809, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel104818, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel104824, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel104830, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel104836, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel104842, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel104848, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel104854, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel104860, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel104896, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel104910, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel104917, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xfa
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r9
[Codegen] .set .Llabel104946, .
[Codegen] movq       0x30(%rbp), %r8
[Codegen] .set .Llabel104950, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom104972
[Codegen] .set .Llabel104972, .
[Codegen] int3
[Codegen] .set .Llabel104973, .
[Codegen] .set .Lfrom104972, .Llabel104973
[Codegen] call       .Lfrom104978
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom104986
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (RegExpSearcherRaw)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel105015, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel105024, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel105033, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel105042, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel105051, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel105060, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel105069, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel105078, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel105084, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel105090, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel105096, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel105102, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel105108, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel105114, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel105120, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom105160
[Codegen] .set .Llabel105160, .
[Codegen] int3
[Codegen] .set .Llabel105161, .
[Codegen] .set .Lfrom105160, .Llabel105161
[Codegen] call       .Lfrom105166
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel105171, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel105180, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel105189, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel105198, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel105207, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel105216, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel105225, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel105234, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel105240, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel105246, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel105252, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel105258, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel105264, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel105270, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel105276, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel105312, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel105326, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel105333, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xfb
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %r9
[Codegen] .set .Llabel105354, .
[Codegen] movq       0x30(%rbp), %r8
[Codegen] .set .Llabel105358, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom105380
[Codegen] .set .Llabel105380, .
[Codegen] int3
[Codegen] .set .Llabel105381, .
[Codegen] .set .Lfrom105380, .Llabel105381
[Codegen] call       .Lfrom105386
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom105394
[Codegen] .set .Llabel105394, .
[Codegen] movl       -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (SameValue)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel105422, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel105431, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel105440, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel105449, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel105458, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel105467, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel105476, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel105485, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel105491, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel105497, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel105503, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel105509, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel105515, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel105521, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel105527, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom105567
[Codegen] .set .Llabel105567, .
[Codegen] int3
[Codegen] .set .Llabel105568, .
[Codegen] .set .Lfrom105567, .Llabel105568
[Codegen] call       .Lfrom105573
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel105578, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel105587, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel105596, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel105605, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel105614, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel105623, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel105632, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel105641, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel105647, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel105653, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel105659, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel105665, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel105671, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel105677, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel105683, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel105712, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel105726, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel105733, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xfc
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom105772
[Codegen] .set .Llabel105772, .
[Codegen] int3
[Codegen] .set .Llabel105773, .
[Codegen] .set .Lfrom105772, .Llabel105773
[Codegen] call       .Lfrom105778
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom105786
[Codegen] .set .Llabel105786, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (SetArrayLength)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel105815, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel105824, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel105833, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel105842, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel105851, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel105860, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel105869, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel105878, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel105884, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel105890, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel105896, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel105902, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel105908, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel105914, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel105920, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom105960
[Codegen] .set .Llabel105960, .
[Codegen] int3
[Codegen] .set .Llabel105961, .
[Codegen] .set .Lfrom105960, .Llabel105961
[Codegen] call       .Lfrom105966
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel105971, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel105980, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel105989, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel105998, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel106007, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel106016, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel106025, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel106034, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel106040, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel106046, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel106052, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel106058, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel106064, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel106070, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel106076, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel106112, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel106126, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel106133, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xfd
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel106146, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom106168
[Codegen] .set .Llabel106168, .
[Codegen] int3
[Codegen] .set .Llabel106169, .
[Codegen] .set .Lfrom106168, .Llabel106169
[Codegen] call       .Lfrom106174
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom106182
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (SetElementMegamorphicNoCache)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel106207, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel106216, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel106225, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel106234, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel106243, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel106252, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel106261, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel106270, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel106276, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel106282, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel106288, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel106294, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel106300, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel106306, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel106312, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom106352
[Codegen] .set .Llabel106352, .
[Codegen] int3
[Codegen] .set .Llabel106353, .
[Codegen] .set .Lfrom106352, .Llabel106353
[Codegen] call       .Lfrom106358
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel106363, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel106372, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel106381, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel106390, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel106399, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel106408, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel106417, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel106426, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel106432, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel106438, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel106444, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel106450, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel106456, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel106462, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel106468, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel106496, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel106510, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel106517, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xfe
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel106530, .
[Codegen] movq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom106556
[Codegen] .set .Llabel106556, .
[Codegen] int3
[Codegen] .set .Llabel106557, .
[Codegen] .set .Lfrom106556, .Llabel106557
[Codegen] call       .Lfrom106562
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom106570
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (SetElementMegamorphicYesCache)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel106595, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel106604, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel106613, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel106622, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel106631, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel106640, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel106649, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel106658, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel106664, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel106670, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel106676, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel106682, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel106688, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel106694, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel106700, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom106740
[Codegen] .set .Llabel106740, .
[Codegen] int3
[Codegen] .set .Llabel106741, .
[Codegen] .set .Lfrom106740, .Llabel106741
[Codegen] call       .Lfrom106746
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel106751, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel106760, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel106769, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel106778, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel106787, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel106796, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel106805, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel106814, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel106820, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel106826, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel106832, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel106838, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel106844, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel106850, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel106856, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel106880, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel106894, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel106901, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0xff
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel106914, .
[Codegen] movq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom106940
[Codegen] .set .Llabel106940, .
[Codegen] int3
[Codegen] .set .Llabel106941, .
[Codegen] .set .Lfrom106940, .Llabel106941
[Codegen] call       .Lfrom106946
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom106954
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (SetElementSuper)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel106979, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel106988, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel106997, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel107006, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel107015, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel107024, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel107033, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel107042, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel107048, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel107054, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel107060, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel107066, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel107072, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel107078, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel107084, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom107124
[Codegen] .set .Llabel107124, .
[Codegen] int3
[Codegen] .set .Llabel107125, .
[Codegen] .set .Lfrom107124, .Llabel107125
[Codegen] call       .Lfrom107130
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel107135, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel107144, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel107153, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel107162, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel107171, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel107180, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel107189, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel107198, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel107204, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel107210, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel107216, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel107222, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel107228, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel107234, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel107240, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel107264, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel107278, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel107285, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x100
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel107298, .
[Codegen] movq       0x38(%rbp), %r9
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom107328
[Codegen] .set .Llabel107328, .
[Codegen] int3
[Codegen] .set .Llabel107329, .
[Codegen] .set .Lfrom107328, .Llabel107329
[Codegen] call       .Lfrom107334
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom107342
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $48
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (SetFunctionName)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel107367, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel107376, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel107385, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel107394, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel107403, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel107412, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel107421, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel107430, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel107436, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel107442, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel107448, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel107454, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel107460, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel107466, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel107472, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom107512
[Codegen] .set .Llabel107512, .
[Codegen] int3
[Codegen] .set .Llabel107513, .
[Codegen] .set .Lfrom107512, .Llabel107513
[Codegen] call       .Lfrom107518
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel107523, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel107532, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel107541, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel107550, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel107559, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel107568, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel107577, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel107586, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel107592, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel107598, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel107604, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel107610, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel107616, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel107622, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel107628, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel107664, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel107678, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel107685, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x101
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel107698, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom107720
[Codegen] .set .Llabel107720, .
[Codegen] int3
[Codegen] .set .Llabel107721, .
[Codegen] .set .Lfrom107720, .Llabel107721
[Codegen] call       .Lfrom107726
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom107734
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (SetIntrinsicOperation)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel107759, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel107768, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel107777, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel107786, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel107795, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel107804, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel107813, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel107822, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel107828, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel107834, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel107840, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel107846, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel107852, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel107858, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel107864, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom107904
[Codegen] .set .Llabel107904, .
[Codegen] int3
[Codegen] .set .Llabel107905, .
[Codegen] .set .Lfrom107904, .Llabel107905
[Codegen] call       .Lfrom107910
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel107915, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel107924, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel107933, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel107942, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel107951, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel107960, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel107969, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel107978, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel107984, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel107990, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel107996, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel108002, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel108008, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel108014, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel108020, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel108048, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel108062, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel108069, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x102
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] .set .Llabel108086, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] .set .Llabel108090, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom108104
[Codegen] .set .Llabel108104, .
[Codegen] int3
[Codegen] .set .Llabel108105, .
[Codegen] .set .Lfrom108104, .Llabel108105
[Codegen] call       .Lfrom108110
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom108118
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (SetObjectAdd)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel108143, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel108152, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel108161, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel108170, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel108179, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel108188, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel108197, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel108206, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel108212, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel108218, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel108224, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel108230, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel108236, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel108242, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel108248, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom108288
[Codegen] .set .Llabel108288, .
[Codegen] int3
[Codegen] .set .Llabel108289, .
[Codegen] .set .Lfrom108288, .Llabel108289
[Codegen] call       .Lfrom108294
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel108299, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel108308, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel108317, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel108326, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel108335, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel108344, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel108353, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel108362, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel108368, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel108374, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel108380, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel108386, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel108392, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel108398, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel108404, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel108432, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel108446, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel108453, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x103
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom108484
[Codegen] .set .Llabel108484, .
[Codegen] int3
[Codegen] .set .Llabel108485, .
[Codegen] .set .Lfrom108484, .Llabel108485
[Codegen] call       .Lfrom108490
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom108498
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (SetObjectAddFromIC)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel108523, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel108532, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel108541, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel108550, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel108559, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel108568, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel108577, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel108586, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel108592, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel108598, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel108604, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel108610, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel108616, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel108622, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel108628, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom108668
[Codegen] .set .Llabel108668, .
[Codegen] int3
[Codegen] .set .Llabel108669, .
[Codegen] .set .Lfrom108668, .Llabel108669
[Codegen] call       .Lfrom108674
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel108679, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel108688, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel108697, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel108706, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel108715, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel108724, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel108733, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel108742, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel108748, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel108754, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel108760, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel108766, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel108772, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel108778, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel108784, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel108816, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel108830, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel108837, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x104
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom108884
[Codegen] .set .Llabel108884, .
[Codegen] int3
[Codegen] .set .Llabel108885, .
[Codegen] .set .Lfrom108884, .Llabel108885
[Codegen] call       .Lfrom108890
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom108898
[Codegen] movq       -0x10(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (SetObjectCreate)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel108927, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel108936, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel108945, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel108954, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel108963, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel108972, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel108981, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel108990, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel108996, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel109002, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel109008, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel109014, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel109020, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel109026, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel109032, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom109072
[Codegen] .set .Llabel109072, .
[Codegen] int3
[Codegen] .set .Llabel109073, .
[Codegen] .set .Lfrom109072, .Llabel109073
[Codegen] call       .Lfrom109078
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel109083, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel109092, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel109101, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel109110, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel109119, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel109128, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel109137, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel109146, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel109152, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel109158, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel109164, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel109170, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel109176, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel109182, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel109188, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel109216, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel109230, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel109237, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x105
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom109264
[Codegen] .set .Llabel109264, .
[Codegen] int3
[Codegen] .set .Llabel109265, .
[Codegen] .set .Lfrom109264, .Llabel109265
[Codegen] call       .Lfrom109270
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom109279
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (SetObjectCreateFromIterable)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel109304, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel109313, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel109322, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel109331, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel109340, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel109349, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel109358, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel109367, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel109373, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel109379, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel109385, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel109391, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel109397, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel109403, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel109409, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom109449
[Codegen] .set .Llabel109449, .
[Codegen] int3
[Codegen] .set .Llabel109450, .
[Codegen] .set .Lfrom109449, .Llabel109450
[Codegen] call       .Lfrom109455
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel109460, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel109469, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel109478, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel109487, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel109496, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel109505, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel109514, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel109523, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel109529, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel109535, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel109541, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel109547, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel109553, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel109559, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel109565, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel109600, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel109614, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel109621, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x106
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom109656
[Codegen] .set .Llabel109656, .
[Codegen] int3
[Codegen] .set .Llabel109657, .
[Codegen] .set .Lfrom109656, .Llabel109657
[Codegen] call       .Lfrom109662
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom109671
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (SetObjectDelete)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel109696, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel109705, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel109714, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel109723, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel109732, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel109741, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel109750, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel109759, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel109765, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel109771, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel109777, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel109783, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel109789, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel109795, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel109801, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom109841
[Codegen] .set .Llabel109841, .
[Codegen] int3
[Codegen] .set .Llabel109842, .
[Codegen] .set .Lfrom109841, .Llabel109842
[Codegen] call       .Lfrom109847
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel109852, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel109861, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel109870, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel109879, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel109888, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel109897, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel109906, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel109915, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel109921, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel109927, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel109933, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel109939, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel109945, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel109951, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel109957, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel109984, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel109998, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel110005, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x107
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom110044
[Codegen] .set .Llabel110044, .
[Codegen] int3
[Codegen] .set .Llabel110045, .
[Codegen] .set .Lfrom110044, .Llabel110045
[Codegen] call       .Lfrom110050
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom110058
[Codegen] .set .Llabel110058, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (SetObjectHas)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel110087, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel110096, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel110105, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel110114, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel110123, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel110132, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel110141, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel110150, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel110156, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel110162, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel110168, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel110174, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel110180, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel110186, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel110192, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom110232
[Codegen] .set .Llabel110232, .
[Codegen] int3
[Codegen] .set .Llabel110233, .
[Codegen] .set .Lfrom110232, .Llabel110233
[Codegen] call       .Lfrom110238
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel110243, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel110252, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel110261, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel110270, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel110279, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel110288, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel110297, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel110306, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel110312, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel110318, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel110324, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel110330, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel110336, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel110342, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel110348, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel110384, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel110398, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel110405, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x108
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom110444
[Codegen] .set .Llabel110444, .
[Codegen] int3
[Codegen] .set .Llabel110445, .
[Codegen] .set .Lfrom110444, .Llabel110445
[Codegen] call       .Lfrom110450
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom110458
[Codegen] .set .Llabel110458, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (SetPropertyMegamorphicNoCache)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel110487, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel110496, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel110505, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel110514, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel110523, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel110532, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel110541, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel110550, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel110556, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel110562, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel110568, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel110574, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel110580, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel110586, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel110592, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom110632
[Codegen] .set .Llabel110632, .
[Codegen] int3
[Codegen] .set .Llabel110633, .
[Codegen] .set .Lfrom110632, .Llabel110633
[Codegen] call       .Lfrom110638
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel110643, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel110652, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel110661, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel110670, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel110679, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel110688, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel110697, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel110706, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel110712, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel110718, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel110724, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel110730, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel110736, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel110742, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel110748, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel110784, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel110798, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel110805, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x109
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel110818, .
[Codegen] movq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom110844
[Codegen] .set .Llabel110844, .
[Codegen] int3
[Codegen] .set .Llabel110845, .
[Codegen] .set .Lfrom110844, .Llabel110845
[Codegen] call       .Lfrom110850
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom110858
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (SetPropertyMegamorphicYesCache)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel110883, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel110892, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel110901, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel110910, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel110919, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel110928, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel110937, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel110946, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel110952, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel110958, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel110964, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel110970, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel110976, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel110982, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel110988, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom111028
[Codegen] .set .Llabel111028, .
[Codegen] int3
[Codegen] .set .Llabel111029, .
[Codegen] .set .Lfrom111028, .Llabel111029
[Codegen] call       .Lfrom111034
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel111039, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel111048, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel111057, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel111066, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel111075, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel111084, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel111093, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel111102, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel111108, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel111114, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel111120, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel111126, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel111132, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel111138, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel111144, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel111168, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel111182, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel111189, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x10a
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel111202, .
[Codegen] movq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom111228
[Codegen] .set .Llabel111228, .
[Codegen] int3
[Codegen] .set .Llabel111229, .
[Codegen] .set .Lfrom111228, .Llabel111229
[Codegen] call       .Lfrom111234
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom111242
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $40
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (SetPropertySuper)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel111267, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel111276, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel111285, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel111294, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel111303, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel111312, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel111321, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel111330, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel111336, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel111342, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel111348, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel111354, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel111360, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel111366, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel111372, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom111412
[Codegen] .set .Llabel111412, .
[Codegen] int3
[Codegen] .set .Llabel111413, .
[Codegen] .set .Lfrom111412, .Llabel111413
[Codegen] call       .Lfrom111418
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel111423, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel111432, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel111441, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel111450, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel111459, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel111468, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel111477, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel111486, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel111492, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel111498, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel111504, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel111510, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel111516, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel111522, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel111528, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel111552, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel111566, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel111573, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x10b
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel111586, .
[Codegen] movq       0x38(%rbp), %r9
[Codegen] leaq       0x30(%rbp), %r8
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom111616
[Codegen] .set .Llabel111616, .
[Codegen] int3
[Codegen] .set .Llabel111617, .
[Codegen] .set .Lfrom111616, .Llabel111617
[Codegen] call       .Lfrom111622
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom111630
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $48
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (StartDynamicModuleImport)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel111655, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel111664, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel111673, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel111682, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel111691, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel111700, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel111709, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel111718, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel111724, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel111730, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel111736, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel111742, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel111748, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel111754, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel111760, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom111800
[Codegen] .set .Llabel111800, .
[Codegen] int3
[Codegen] .set .Llabel111801, .
[Codegen] .set .Lfrom111800, .Llabel111801
[Codegen] call       .Lfrom111806
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel111811, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel111820, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel111829, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel111838, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel111847, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel111856, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel111865, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel111874, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel111880, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel111886, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel111892, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel111898, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel111904, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel111910, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel111916, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel111952, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel111966, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel111973, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x10c
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom112008
[Codegen] .set .Llabel112008, .
[Codegen] int3
[Codegen] .set .Llabel112009, .
[Codegen] .set .Lfrom112008, .Llabel112009
[Codegen] call       .Lfrom112014
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom112023
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (StringBigIntGreaterThanOrEqual)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel112048, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel112057, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel112066, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel112075, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel112084, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel112093, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel112102, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel112111, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel112117, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel112123, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel112129, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel112135, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel112141, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel112147, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel112153, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom112193
[Codegen] .set .Llabel112193, .
[Codegen] int3
[Codegen] .set .Llabel112194, .
[Codegen] .set .Lfrom112193, .Llabel112194
[Codegen] call       .Lfrom112199
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel112204, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel112213, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel112222, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel112231, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel112240, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel112249, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel112258, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel112267, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel112273, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel112279, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel112285, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel112291, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel112297, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel112303, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel112309, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel112336, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel112350, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel112357, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x10d
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom112396
[Codegen] .set .Llabel112396, .
[Codegen] int3
[Codegen] .set .Llabel112397, .
[Codegen] .set .Lfrom112396, .Llabel112397
[Codegen] call       .Lfrom112402
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom112410
[Codegen] .set .Llabel112410, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (StringBigIntLessThan)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel112439, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel112448, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel112457, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel112466, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel112475, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel112484, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel112493, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel112502, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel112508, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel112514, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel112520, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel112526, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel112532, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel112538, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel112544, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom112584
[Codegen] .set .Llabel112584, .
[Codegen] int3
[Codegen] .set .Llabel112585, .
[Codegen] .set .Lfrom112584, .Llabel112585
[Codegen] call       .Lfrom112590
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel112595, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel112604, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel112613, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel112622, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel112631, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel112640, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel112649, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel112658, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel112664, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel112670, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel112676, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel112682, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel112688, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel112694, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel112700, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel112736, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel112750, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel112757, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x10e
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom112796
[Codegen] .set .Llabel112796, .
[Codegen] int3
[Codegen] .set .Llabel112797, .
[Codegen] .set .Lfrom112796, .Llabel112797
[Codegen] call       .Lfrom112802
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom112810
[Codegen] .set .Llabel112810, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (StringEndsWith)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel112839, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel112848, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel112857, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel112866, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel112875, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel112884, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel112893, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel112902, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel112908, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel112914, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel112920, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel112926, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel112932, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel112938, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel112944, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom112984
[Codegen] .set .Llabel112984, .
[Codegen] int3
[Codegen] .set .Llabel112985, .
[Codegen] .set .Lfrom112984, .Llabel112985
[Codegen] call       .Lfrom112990
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel112995, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel113004, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel113013, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel113022, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel113031, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel113040, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel113049, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel113058, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel113064, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel113070, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel113076, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel113082, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel113088, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel113094, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel113100, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel113136, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel113150, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel113157, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x10f
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom113196
[Codegen] .set .Llabel113196, .
[Codegen] int3
[Codegen] .set .Llabel113197, .
[Codegen] .set .Lfrom113196, .Llabel113197
[Codegen] call       .Lfrom113202
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom113210
[Codegen] .set .Llabel113210, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (StringFlatReplaceString)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel113239, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel113248, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel113257, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel113266, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel113275, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel113284, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel113293, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel113302, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel113308, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel113314, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel113320, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel113326, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel113332, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel113338, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel113344, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom113384
[Codegen] .set .Llabel113384, .
[Codegen] int3
[Codegen] .set .Llabel113385, .
[Codegen] .set .Lfrom113384, .Llabel113385
[Codegen] call       .Lfrom113390
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel113395, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel113404, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel113413, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel113422, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel113431, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel113440, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel113449, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel113458, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel113464, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel113470, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel113476, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel113482, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel113488, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel113494, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel113500, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel113536, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel113550, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel113557, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x110
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom113592
[Codegen] .set .Llabel113592, .
[Codegen] int3
[Codegen] .set .Llabel113593, .
[Codegen] .set .Lfrom113592, .Llabel113593
[Codegen] call       .Lfrom113598
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom113607
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (StringFromCharCode)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel113632, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel113641, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel113650, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel113659, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel113668, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel113677, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel113686, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel113695, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel113701, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel113707, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel113713, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel113719, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel113725, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel113731, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel113737, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom113777
[Codegen] .set .Llabel113777, .
[Codegen] int3
[Codegen] .set .Llabel113778, .
[Codegen] .set .Lfrom113777, .Llabel113778
[Codegen] call       .Lfrom113783
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel113788, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel113797, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel113806, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel113815, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel113824, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel113833, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel113842, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel113851, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel113857, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel113863, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel113869, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel113875, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel113881, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel113887, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel113893, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel113920, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel113934, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel113941, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x111
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel113954, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom113968
[Codegen] .set .Llabel113968, .
[Codegen] int3
[Codegen] .set .Llabel113969, .
[Codegen] .set .Lfrom113968, .Llabel113969
[Codegen] call       .Lfrom113974
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom113983
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (StringFromCodePoint)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel114008, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel114017, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel114026, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel114035, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel114044, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel114053, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel114062, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel114071, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel114077, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel114083, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel114089, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel114095, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel114101, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel114107, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel114113, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom114153
[Codegen] .set .Llabel114153, .
[Codegen] int3
[Codegen] .set .Llabel114154, .
[Codegen] .set .Lfrom114153, .Llabel114154
[Codegen] call       .Lfrom114159
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel114164, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel114173, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel114182, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel114191, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel114200, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel114209, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel114218, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel114227, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel114233, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel114239, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel114245, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel114251, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel114257, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel114263, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel114269, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel114304, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel114318, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel114325, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x112
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel114338, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom114352
[Codegen] .set .Llabel114352, .
[Codegen] int3
[Codegen] .set .Llabel114353, .
[Codegen] .set .Lfrom114352, .Llabel114353
[Codegen] call       .Lfrom114358
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom114367
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (StringIncludes)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel114392, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel114401, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel114410, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel114419, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel114428, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel114437, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel114446, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel114455, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel114461, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel114467, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel114473, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel114479, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel114485, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel114491, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel114497, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom114537
[Codegen] .set .Llabel114537, .
[Codegen] int3
[Codegen] .set .Llabel114538, .
[Codegen] .set .Lfrom114537, .Llabel114538
[Codegen] call       .Lfrom114543
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel114548, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel114557, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel114566, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel114575, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel114584, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel114593, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel114602, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel114611, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel114617, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel114623, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel114629, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel114635, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel114641, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel114647, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel114653, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel114688, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel114702, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel114709, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x113
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom114748
[Codegen] .set .Llabel114748, .
[Codegen] int3
[Codegen] .set .Llabel114749, .
[Codegen] .set .Lfrom114748, .Llabel114749
[Codegen] call       .Lfrom114754
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom114762
[Codegen] .set .Llabel114762, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (StringIndexOf)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel114791, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel114800, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel114809, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel114818, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel114827, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel114836, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel114845, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel114854, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel114860, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel114866, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel114872, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel114878, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel114884, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel114890, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel114896, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom114936
[Codegen] .set .Llabel114936, .
[Codegen] int3
[Codegen] .set .Llabel114937, .
[Codegen] .set .Lfrom114936, .Llabel114937
[Codegen] call       .Lfrom114942
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel114947, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel114956, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel114965, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel114974, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel114983, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel114992, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel115001, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel115010, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel115016, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel115022, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel115028, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel115034, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel115040, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel115046, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel115052, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel115088, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel115102, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel115109, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x114
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom115148
[Codegen] .set .Llabel115148, .
[Codegen] int3
[Codegen] .set .Llabel115149, .
[Codegen] .set .Lfrom115148, .Llabel115149
[Codegen] call       .Lfrom115154
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom115162
[Codegen] .set .Llabel115162, .
[Codegen] movl       -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (StringLastIndexOf)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel115190, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel115199, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel115208, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel115217, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel115226, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel115235, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel115244, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel115253, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel115259, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel115265, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel115271, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel115277, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel115283, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel115289, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel115295, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom115335
[Codegen] .set .Llabel115335, .
[Codegen] int3
[Codegen] .set .Llabel115336, .
[Codegen] .set .Lfrom115335, .Llabel115336
[Codegen] call       .Lfrom115341
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel115346, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel115355, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel115364, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel115373, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel115382, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel115391, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel115400, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel115409, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel115415, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel115421, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel115427, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel115433, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel115439, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel115445, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel115451, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel115488, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel115502, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel115509, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x115
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom115548
[Codegen] .set .Llabel115548, .
[Codegen] int3
[Codegen] .set .Llabel115549, .
[Codegen] .set .Lfrom115548, .Llabel115549
[Codegen] call       .Lfrom115554
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom115562
[Codegen] .set .Llabel115562, .
[Codegen] movl       -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (StringReplace)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel115590, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel115599, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel115608, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel115617, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel115626, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel115635, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel115644, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel115653, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel115659, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel115665, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel115671, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel115677, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel115683, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel115689, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel115695, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom115735
[Codegen] .set .Llabel115735, .
[Codegen] int3
[Codegen] .set .Llabel115736, .
[Codegen] .set .Lfrom115735, .Llabel115736
[Codegen] call       .Lfrom115741
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel115746, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel115755, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel115764, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel115773, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel115782, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel115791, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel115800, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel115809, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel115815, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel115821, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel115827, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel115833, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel115839, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel115845, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel115851, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel115888, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel115902, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel115909, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x116
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom115944
[Codegen] .set .Llabel115944, .
[Codegen] int3
[Codegen] .set .Llabel115945, .
[Codegen] .set .Lfrom115944, .Llabel115945
[Codegen] call       .Lfrom115950
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom115959
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (StringSplitString)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel115984, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel115993, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel116002, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel116011, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel116020, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel116029, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel116038, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel116047, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel116053, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel116059, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel116065, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel116071, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel116077, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel116083, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel116089, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom116129
[Codegen] .set .Llabel116129, .
[Codegen] int3
[Codegen] .set .Llabel116130, .
[Codegen] .set .Lfrom116129, .Llabel116130
[Codegen] call       .Lfrom116135
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel116140, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel116149, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel116158, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel116167, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel116176, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel116185, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel116194, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel116203, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel116209, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel116215, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel116221, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel116227, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel116233, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel116239, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel116245, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel116272, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel116286, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel116293, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x117
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel116306, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom116328
[Codegen] .set .Llabel116328, .
[Codegen] int3
[Codegen] .set .Llabel116329, .
[Codegen] .set .Lfrom116328, .Llabel116329
[Codegen] call       .Lfrom116334
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom116343
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (StringStartsWith)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel116368, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel116377, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel116386, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel116395, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel116404, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel116413, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel116422, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel116431, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel116437, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel116443, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel116449, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel116455, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel116461, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel116467, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel116473, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom116513
[Codegen] .set .Llabel116513, .
[Codegen] int3
[Codegen] .set .Llabel116514, .
[Codegen] .set .Lfrom116513, .Llabel116514
[Codegen] call       .Lfrom116519
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel116524, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel116533, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel116542, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel116551, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel116560, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel116569, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel116578, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel116587, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel116593, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel116599, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel116605, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel116611, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel116617, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel116623, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel116629, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel116656, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel116670, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel116677, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x118
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom116716
[Codegen] .set .Llabel116716, .
[Codegen] int3
[Codegen] .set .Llabel116717, .
[Codegen] .set .Lfrom116716, .Llabel116717
[Codegen] call       .Lfrom116722
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom116730
[Codegen] .set .Llabel116730, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (StringToLowerCase)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel116759, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel116768, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel116777, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel116786, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel116795, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel116804, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel116813, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel116822, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel116828, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel116834, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel116840, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel116846, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel116852, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel116858, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel116864, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom116904
[Codegen] .set .Llabel116904, .
[Codegen] int3
[Codegen] .set .Llabel116905, .
[Codegen] .set .Lfrom116904, .Llabel116905
[Codegen] call       .Lfrom116910
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel116915, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel116924, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel116933, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel116942, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel116951, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel116960, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel116969, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel116978, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel116984, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel116990, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel116996, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel117002, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel117008, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel117014, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel117020, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel117056, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel117070, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel117077, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x119
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel117090, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom117104
[Codegen] .set .Llabel117104, .
[Codegen] int3
[Codegen] .set .Llabel117105, .
[Codegen] .set .Lfrom117104, .Llabel117105
[Codegen] call       .Lfrom117110
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom117119
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (StringToNumber)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel117144, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel117153, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel117162, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel117171, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel117180, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel117189, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel117198, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel117207, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel117213, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel117219, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel117225, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel117231, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel117237, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel117243, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel117249, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom117289
[Codegen] .set .Llabel117289, .
[Codegen] int3
[Codegen] .set .Llabel117290, .
[Codegen] .set .Lfrom117289, .Llabel117290
[Codegen] call       .Lfrom117295
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel117300, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel117309, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel117318, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel117327, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel117336, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel117345, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel117354, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel117363, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel117369, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel117375, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel117381, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel117387, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel117393, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel117399, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel117405, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel117440, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel117454, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel117461, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x11a
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rdx
[Codegen] .set .Llabel117482, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom117496
[Codegen] .set .Llabel117496, .
[Codegen] int3
[Codegen] .set .Llabel117497, .
[Codegen] .set .Lfrom117496, .Llabel117497
[Codegen] call       .Lfrom117502
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom117510
[Codegen] .set .Llabel117510, .
[Codegen] vmovsd     -0x10(%rbp), %xmm0
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (StringToUpperCase)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel117540, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel117549, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel117558, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel117567, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel117576, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel117585, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel117594, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel117603, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel117609, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel117615, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel117621, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel117627, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel117633, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel117639, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel117645, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom117685
[Codegen] .set .Llabel117685, .
[Codegen] int3
[Codegen] .set .Llabel117686, .
[Codegen] .set .Lfrom117685, .Llabel117686
[Codegen] call       .Lfrom117691
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel117696, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel117705, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel117714, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel117723, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel117732, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel117741, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel117750, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel117759, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel117765, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel117771, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel117777, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel117783, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel117789, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel117795, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel117801, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel117840, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel117854, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel117861, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x11b
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel117874, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom117888
[Codegen] .set .Llabel117888, .
[Codegen] int3
[Codegen] .set .Llabel117889, .
[Codegen] .set .Lfrom117888, .Llabel117889
[Codegen] call       .Lfrom117894
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom117903
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (StringTrim)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel117928, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel117937, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel117946, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel117955, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel117964, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel117973, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel117982, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel117991, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel117997, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel118003, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel118009, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel118015, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel118021, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel118027, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel118033, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom118073
[Codegen] .set .Llabel118073, .
[Codegen] int3
[Codegen] .set .Llabel118074, .
[Codegen] .set .Lfrom118073, .Llabel118074
[Codegen] call       .Lfrom118079
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel118084, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel118093, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel118102, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel118111, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel118120, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel118129, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel118138, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel118147, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel118153, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel118159, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel118165, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel118171, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel118177, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel118183, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel118189, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel118224, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel118238, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel118245, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x11c
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom118272
[Codegen] .set .Llabel118272, .
[Codegen] int3
[Codegen] .set .Llabel118273, .
[Codegen] .set .Lfrom118272, .Llabel118273
[Codegen] call       .Lfrom118278
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom118287
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (StringTrimEnd)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel118312, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel118321, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel118330, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel118339, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel118348, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel118357, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel118366, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel118375, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel118381, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel118387, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel118393, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel118399, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel118405, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel118411, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel118417, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom118457
[Codegen] .set .Llabel118457, .
[Codegen] int3
[Codegen] .set .Llabel118458, .
[Codegen] .set .Lfrom118457, .Llabel118458
[Codegen] call       .Lfrom118463
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel118468, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel118477, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel118486, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel118495, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel118504, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel118513, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel118522, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel118531, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel118537, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel118543, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel118549, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel118555, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel118561, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel118567, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel118573, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel118608, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel118622, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel118629, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x11d
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom118656
[Codegen] .set .Llabel118656, .
[Codegen] int3
[Codegen] .set .Llabel118657, .
[Codegen] .set .Lfrom118656, .Llabel118657
[Codegen] call       .Lfrom118662
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom118671
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (StringTrimStart)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel118696, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel118705, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel118714, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel118723, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel118732, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel118741, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel118750, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel118759, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel118765, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel118771, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel118777, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel118783, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel118789, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel118795, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel118801, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom118841
[Codegen] .set .Llabel118841, .
[Codegen] int3
[Codegen] .set .Llabel118842, .
[Codegen] .set .Lfrom118841, .Llabel118842
[Codegen] call       .Lfrom118847
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel118852, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel118861, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel118870, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel118879, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel118888, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel118897, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel118906, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel118915, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel118921, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel118927, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel118933, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel118939, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel118945, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel118951, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel118957, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel118992, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel119006, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel119013, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x11e
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom119040
[Codegen] .set .Llabel119040, .
[Codegen] int3
[Codegen] .set .Llabel119041, .
[Codegen] .set .Lfrom119040, .Llabel119041
[Codegen] call       .Lfrom119046
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom119055
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (StringsCompareGreaterThanOrEquals)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel119080, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel119089, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel119098, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel119107, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel119116, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel119125, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel119134, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel119143, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel119149, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel119155, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel119161, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel119167, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel119173, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel119179, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel119185, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom119225
[Codegen] .set .Llabel119225, .
[Codegen] int3
[Codegen] .set .Llabel119226, .
[Codegen] .set .Lfrom119225, .Llabel119226
[Codegen] call       .Lfrom119231
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel119236, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel119245, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel119254, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel119263, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel119272, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel119281, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel119290, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel119299, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel119305, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel119311, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel119317, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel119323, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel119329, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel119335, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel119341, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel119376, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel119390, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel119397, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x11f
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom119436
[Codegen] .set .Llabel119436, .
[Codegen] int3
[Codegen] .set .Llabel119437, .
[Codegen] .set .Lfrom119436, .Llabel119437
[Codegen] call       .Lfrom119442
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom119450
[Codegen] .set .Llabel119450, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (StringsCompareLessThan)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel119479, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel119488, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel119497, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel119506, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel119515, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel119524, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel119533, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel119542, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel119548, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel119554, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel119560, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel119566, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel119572, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel119578, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel119584, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom119624
[Codegen] .set .Llabel119624, .
[Codegen] int3
[Codegen] .set .Llabel119625, .
[Codegen] .set .Lfrom119624, .Llabel119625
[Codegen] call       .Lfrom119630
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel119635, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel119644, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel119653, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel119662, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel119671, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel119680, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel119689, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel119698, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel119704, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel119710, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel119716, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel119722, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel119728, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel119734, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel119740, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel119776, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel119790, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel119797, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x120
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom119836
[Codegen] .set .Llabel119836, .
[Codegen] int3
[Codegen] .set .Llabel119837, .
[Codegen] .set .Lfrom119836, .Llabel119837
[Codegen] call       .Lfrom119842
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom119850
[Codegen] .set .Llabel119850, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (StringsEqual)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel119879, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel119888, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel119897, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel119906, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel119915, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel119924, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel119933, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel119942, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel119948, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel119954, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel119960, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel119966, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel119972, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel119978, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel119984, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom120024
[Codegen] .set .Llabel120024, .
[Codegen] int3
[Codegen] .set .Llabel120025, .
[Codegen] .set .Lfrom120024, .Llabel120025
[Codegen] call       .Lfrom120030
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel120035, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel120044, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel120053, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel120062, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel120071, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel120080, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel120089, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel120098, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel120104, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel120110, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel120116, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel120122, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel120128, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel120134, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel120140, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel120176, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel120190, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel120197, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x121
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom120236
[Codegen] .set .Llabel120236, .
[Codegen] int3
[Codegen] .set .Llabel120237, .
[Codegen] .set .Lfrom120236, .Llabel120237
[Codegen] call       .Lfrom120242
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom120250
[Codegen] .set .Llabel120250, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (StringsNotEqual)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel120279, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel120288, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel120297, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel120306, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel120315, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel120324, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel120333, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel120342, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel120348, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel120354, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel120360, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel120366, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel120372, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel120378, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel120384, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom120424
[Codegen] .set .Llabel120424, .
[Codegen] int3
[Codegen] .set .Llabel120425, .
[Codegen] .set .Lfrom120424, .Llabel120425
[Codegen] call       .Lfrom120430
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel120435, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel120444, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel120453, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel120462, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel120471, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel120480, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel120489, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel120498, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel120504, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel120510, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel120516, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel120522, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel120528, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel120534, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel120540, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel120576, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel120590, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel120597, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x122
[Codegen] subq       $8, %rsp
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       -0x10(%rbp), %rcx
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom120636
[Codegen] .set .Llabel120636, .
[Codegen] int3
[Codegen] .set .Llabel120637, .
[Codegen] .set .Lfrom120636, .Llabel120637
[Codegen] call       .Lfrom120642
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom120650
[Codegen] .set .Llabel120650, .
[Codegen] movzbl     -0x10(%rbp), %eax
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (SubstringKernel)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel120679, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel120688, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel120697, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel120706, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel120715, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel120724, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel120733, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel120742, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel120748, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel120754, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel120760, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel120766, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel120772, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel120778, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel120784, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom120824
[Codegen] .set .Llabel120824, .
[Codegen] int3
[Codegen] .set .Llabel120825, .
[Codegen] .set .Lfrom120824, .Llabel120825
[Codegen] call       .Lfrom120830
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel120835, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel120844, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel120853, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel120862, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel120871, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel120880, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel120889, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel120898, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel120904, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel120910, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel120916, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel120922, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel120928, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel120934, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel120940, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel120976, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel120990, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel120997, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x123
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel121010, .
[Codegen] movq       0x28(%rbp), %rcx
[Codegen] .set .Llabel121014, .
[Codegen] movq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom121032
[Codegen] .set .Llabel121032, .
[Codegen] int3
[Codegen] .set .Llabel121033, .
[Codegen] .set .Lfrom121032, .Llabel121033
[Codegen] call       .Lfrom121038
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom121047
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $32
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ThrowBadDerivedReturnOrUninitializedThis)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel121072, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel121081, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel121090, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel121099, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel121108, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel121117, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel121126, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel121135, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel121141, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel121147, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel121153, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel121159, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel121165, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel121171, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel121177, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom121217
[Codegen] .set .Llabel121217, .
[Codegen] int3
[Codegen] .set .Llabel121218, .
[Codegen] .set .Lfrom121217, .Llabel121218
[Codegen] call       .Lfrom121223
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel121228, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel121237, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel121246, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel121255, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel121264, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel121273, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel121282, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel121291, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel121297, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel121303, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel121309, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel121315, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel121321, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel121327, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel121333, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel121360, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel121374, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel121381, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x124
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom121408
[Codegen] .set .Llabel121408, .
[Codegen] int3
[Codegen] .set .Llabel121409, .
[Codegen] .set .Lfrom121408, .Llabel121409
[Codegen] call       .Lfrom121414
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom121422
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ThrowCheckIsObject)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel121447, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel121456, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel121465, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel121474, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel121483, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel121492, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel121501, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel121510, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel121516, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel121522, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel121528, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel121534, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel121540, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel121546, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel121552, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom121592
[Codegen] .set .Llabel121592, .
[Codegen] int3
[Codegen] .set .Llabel121593, .
[Codegen] .set .Lfrom121592, .Llabel121593
[Codegen] call       .Lfrom121598
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel121603, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel121612, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel121621, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel121630, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel121639, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel121648, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel121657, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel121666, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel121672, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel121678, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel121684, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel121690, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel121696, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel121702, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel121708, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel121744, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel121758, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel121765, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x125
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel121778, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom121792
[Codegen] .set .Llabel121792, .
[Codegen] int3
[Codegen] .set .Llabel121793, .
[Codegen] .set .Lfrom121792, .Llabel121793
[Codegen] call       .Lfrom121798
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom121806
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ThrowInitializedThis)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel121831, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel121840, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel121849, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel121858, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel121867, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel121876, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel121885, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel121894, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel121900, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel121906, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel121912, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel121918, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel121924, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel121930, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel121936, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom121976
[Codegen] .set .Llabel121976, .
[Codegen] int3
[Codegen] .set .Llabel121977, .
[Codegen] .set .Lfrom121976, .Llabel121977
[Codegen] call       .Lfrom121982
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel121987, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel121996, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel122005, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel122014, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel122023, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel122032, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel122041, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel122050, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel122056, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel122062, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel122068, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel122074, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel122080, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel122086, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel122092, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel122128, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel122142, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel122149, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x126
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom122172
[Codegen] .set .Llabel122172, .
[Codegen] int3
[Codegen] .set .Llabel122173, .
[Codegen] .set .Lfrom122172, .Llabel122173
[Codegen] call       .Lfrom122178
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom122186
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $8
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ThrowMsgOperation)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel122211, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel122220, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel122229, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel122238, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel122247, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel122256, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel122265, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel122274, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel122280, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel122286, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel122292, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel122298, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel122304, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel122310, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel122316, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom122356
[Codegen] .set .Llabel122356, .
[Codegen] int3
[Codegen] .set .Llabel122357, .
[Codegen] .set .Lfrom122356, .Llabel122357
[Codegen] call       .Lfrom122362
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel122367, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel122376, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel122385, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel122394, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel122403, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel122412, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel122421, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel122430, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel122436, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel122442, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel122448, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel122454, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel122460, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel122466, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel122472, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel122496, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel122510, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel122517, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x127
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel122530, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom122544
[Codegen] .set .Llabel122544, .
[Codegen] int3
[Codegen] .set .Llabel122545, .
[Codegen] .set .Lfrom122544, .Llabel122545
[Codegen] call       .Lfrom122550
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom122558
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ThrowObjectCoercible)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel122583, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel122592, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel122601, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel122610, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel122619, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel122628, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel122637, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel122646, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel122652, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel122658, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel122664, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel122670, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel122676, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel122682, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel122688, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom122728
[Codegen] .set .Llabel122728, .
[Codegen] int3
[Codegen] .set .Llabel122729, .
[Codegen] .set .Lfrom122728, .Llabel122729
[Codegen] call       .Lfrom122734
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel122739, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel122748, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel122757, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel122766, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel122775, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel122784, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel122793, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel122802, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel122808, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel122814, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel122820, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel122826, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel122832, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel122838, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel122844, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel122880, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel122894, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel122901, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x128
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom122928
[Codegen] .set .Llabel122928, .
[Codegen] int3
[Codegen] .set .Llabel122929, .
[Codegen] .set .Lfrom122928, .Llabel122929
[Codegen] call       .Lfrom122934
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom122942
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ThrowOperation)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel122967, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel122976, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel122985, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel122994, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel123003, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel123012, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel123021, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel123030, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel123036, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel123042, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel123048, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel123054, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel123060, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel123066, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel123072, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom123112
[Codegen] .set .Llabel123112, .
[Codegen] int3
[Codegen] .set .Llabel123113, .
[Codegen] .set .Lfrom123112, .Llabel123113
[Codegen] call       .Lfrom123118
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel123123, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel123132, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel123141, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel123150, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel123159, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel123168, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel123177, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel123186, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel123192, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel123198, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel123204, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel123210, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel123216, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel123222, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel123228, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel123264, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel123278, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel123285, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x129
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom123312
[Codegen] .set .Llabel123312, .
[Codegen] int3
[Codegen] .set .Llabel123313, .
[Codegen] .set .Lfrom123312, .Llabel123313
[Codegen] call       .Lfrom123318
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom123326
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ThrowRuntimeLexicalError)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel123351, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel123360, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel123369, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel123378, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel123387, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel123396, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel123405, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel123414, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel123420, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel123426, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel123432, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel123438, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel123444, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel123450, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel123456, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom123496
[Codegen] .set .Llabel123496, .
[Codegen] int3
[Codegen] .set .Llabel123497, .
[Codegen] .set .Lfrom123496, .Llabel123497
[Codegen] call       .Lfrom123502
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel123507, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel123516, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel123525, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel123534, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel123543, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel123552, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel123561, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel123570, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel123576, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel123582, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel123588, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel123594, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel123600, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel123606, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel123612, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel123648, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel123662, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel123669, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x12a
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] .set .Llabel123682, .
[Codegen] movq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom123696
[Codegen] .set .Llabel123696, .
[Codegen] int3
[Codegen] .set .Llabel123697, .
[Codegen] .set .Lfrom123696, .Llabel123697
[Codegen] call       .Lfrom123702
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom123710
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ThrowUninitializedThis)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel123735, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel123744, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel123753, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel123762, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel123771, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel123780, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel123789, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel123798, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel123804, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel123810, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel123816, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel123822, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel123828, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel123834, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel123840, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom123880
[Codegen] .set .Llabel123880, .
[Codegen] int3
[Codegen] .set .Llabel123881, .
[Codegen] .set .Lfrom123880, .Llabel123881
[Codegen] call       .Lfrom123886
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel123891, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel123900, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel123909, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel123918, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel123927, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel123936, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel123945, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel123954, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel123960, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel123966, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel123972, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel123978, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel123984, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel123990, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel123996, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel124032, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel124046, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel124053, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x12b
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom124076
[Codegen] .set .Llabel124076, .
[Codegen] int3
[Codegen] .set .Llabel124077, .
[Codegen] .set .Lfrom124076, .Llabel124077
[Codegen] call       .Lfrom124082
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom124090
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $8
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ThrowWithStackOperation)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel124115, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel124124, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel124133, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel124142, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel124151, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel124160, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel124169, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel124178, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel124184, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel124190, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel124196, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel124202, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel124208, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel124214, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel124220, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom124260
[Codegen] .set .Llabel124260, .
[Codegen] int3
[Codegen] .set .Llabel124261, .
[Codegen] .set .Lfrom124260, .Llabel124261
[Codegen] call       .Lfrom124266
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel124271, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel124280, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel124289, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel124298, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel124307, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel124316, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel124325, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel124334, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel124340, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel124346, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel124352, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel124358, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel124364, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel124370, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel124376, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel124400, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel124414, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel124421, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x12c
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x20(%rbp), %rdx
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom124452
[Codegen] .set .Llabel124452, .
[Codegen] int3
[Codegen] .set .Llabel124453, .
[Codegen] .set .Lfrom124452, .Llabel124453
[Codegen] call       .Lfrom124458
[Codegen] testb      %al, %al
[Codegen] je         .Lfrom124466
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $24
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ToBigInt)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel124491, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel124500, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel124509, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel124518, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel124527, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel124536, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel124545, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel124554, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel124560, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel124566, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel124572, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel124578, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel124584, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel124590, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel124596, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom124636
[Codegen] .set .Llabel124636, .
[Codegen] int3
[Codegen] .set .Llabel124637, .
[Codegen] .set .Lfrom124636, .Llabel124637
[Codegen] call       .Lfrom124642
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel124647, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel124656, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel124665, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel124674, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel124683, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel124692, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel124701, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel124710, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel124716, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel124722, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel124728, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel124734, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel124740, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel124746, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel124752, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel124784, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel124798, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel124805, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x12d
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom124832
[Codegen] .set .Llabel124832, .
[Codegen] int3
[Codegen] .set .Llabel124833, .
[Codegen] .set .Lfrom124832, .Llabel124833
[Codegen] call       .Lfrom124838
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom124847
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ToStringSlow)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel124872, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel124881, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel124890, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel124899, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel124908, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel124917, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel124926, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel124935, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel124941, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel124947, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel124953, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel124959, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel124965, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel124971, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel124977, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom125017
[Codegen] .set .Llabel125017, .
[Codegen] int3
[Codegen] .set .Llabel125018, .
[Codegen] .set .Lfrom125017, .Llabel125018
[Codegen] call       .Lfrom125023
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel125028, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel125037, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel125046, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel125055, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel125064, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel125073, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel125082, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel125091, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel125097, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel125103, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel125109, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel125115, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel125121, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel125127, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel125133, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel125168, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel125182, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel125189, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x12e
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom125216
[Codegen] .set .Llabel125216, .
[Codegen] int3
[Codegen] .set .Llabel125217, .
[Codegen] .set .Lfrom125216, .Llabel125217
[Codegen] call       .Lfrom125222
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom125231
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (ValueToIterator)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel125256, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel125265, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel125274, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel125283, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel125292, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel125301, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel125310, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel125319, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel125325, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel125331, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel125337, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel125343, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel125349, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel125355, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel125361, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom125401
[Codegen] .set .Llabel125401, .
[Codegen] int3
[Codegen] .set .Llabel125402, .
[Codegen] .set .Lfrom125401, .Llabel125402
[Codegen] call       .Lfrom125407
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel125412, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel125421, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel125430, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel125439, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel125448, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel125457, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel125466, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel125475, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel125481, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel125487, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel125493, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel125499, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel125505, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel125511, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel125517, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel125552, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel125566, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel125573, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x12f
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom125600
[Codegen] .set .Llabel125600, .
[Codegen] int3
[Codegen] .set .Llabel125601, .
[Codegen] .set .Lfrom125600, .Llabel125601
[Codegen] call       .Lfrom125606
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom125615
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # VM function wrapper (VarEnvironmentObjectCreateWithoutEnclosing)
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper
[Codegen] # BEGIN creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel125640, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel125649, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel125658, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel125667, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel125676, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel125685, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel125694, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel125703, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel125709, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel125715, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel125721, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel125727, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel125733, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel125739, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel125745, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom125785
[Codegen] .set .Llabel125785, .
[Codegen] int3
[Codegen] .set .Llabel125786, .
[Codegen] .set .Lfrom125785, .Llabel125786
[Codegen] call       .Lfrom125791
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel125796, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel125805, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel125814, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel125823, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel125832, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel125841, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel125850, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel125859, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel125865, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel125871, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel125877, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel125883, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel125889, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel125895, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel125901, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel125936, .
[Codegen] # END   creators: JitRuntime::generateVMWrapper/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rdi
[Codegen] .set .Llabel125950, .
[Codegen] movq       0x140(%rdi), %rax
[Codegen] .set .Llabel125957, .
[Codegen] movq       %rsp, 0x70(%rax)
[Codegen] push       $0x130
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] leaq       0x18(%rbp), %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom125984
[Codegen] .set .Llabel125984, .
[Codegen] int3
[Codegen] .set .Llabel125985, .
[Codegen] .set .Lfrom125984, .Llabel125985
[Codegen] call       .Lfrom125990
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom125999
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret        $16
[Codegen] # END   creators: JitRuntime::generateVMWrapper
[Codegen] # Emitting profiler exit frame tail stub
[Codegen] # BEGIN creators: JitRuntime::generateProfilerExitFrameTailStub
[Codegen] # BEGIN creators: JitRuntime::generateProfilerExitFrameTailStub/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel126024, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel126033, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel126042, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel126051, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel126060, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel126069, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel126078, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel126087, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel126093, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel126099, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel126105, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel126111, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel126117, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel126123, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel126129, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom126169
[Codegen] .set .Llabel126169, .
[Codegen] int3
[Codegen] .set .Llabel126170, .
[Codegen] .set .Lfrom126169, .Llabel126170
[Codegen] call       .Lfrom126175
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel126180, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel126189, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel126198, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel126207, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel126216, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel126225, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel126234, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel126243, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel126249, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel126255, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel126261, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel126267, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel126273, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel126279, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel126285, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel126320, .
[Codegen] # END   creators: JitRuntime::generateProfilerExitFrameTailStub/startTrampolineCode
[Codegen] .set .Llabel126320, .
[Codegen] movabsq    $0x75bb8e73a200, %rdx
[Codegen] .set .Llabel126330, .
[Codegen] movq       0x150(%rdx), %rdx
[Codegen] .set .Llabel126337, .
[Codegen] movq       0xe0(%rdx), %rax
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom126353
[Codegen] cmpq       %rax, %rbp
[Codegen] je         .Lfrom126362
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel126380, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel126389, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel126398, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel126407, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel126416, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel126425, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel126434, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel126443, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel126449, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel126455, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel126461, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel126467, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel126473, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel126479, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel126485, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabe57a1, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom126525
[Codegen] .set .Llabel126525, .
[Codegen] int3
[Codegen] .set .Llabel126526, .
[Codegen] .set .Lfrom126525, .Llabel126526
[Codegen] call       .Lfrom126531
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel126536, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel126545, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel126554, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel126563, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel126572, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel126581, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel126590, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel126599, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel126605, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel126611, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel126617, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel126623, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel126629, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel126635, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel126641, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel126665, .
[Codegen] .set .Lfrom126362, .Llabel126665
[Codegen] .set .Lfrom126353, .Llabel126665
[Codegen] movq       %rbp, %rbx
[Codegen] .set .Llabel126668, .
[Codegen] .set .Llabel126668, .
[Codegen] movq       0x10(%rbx), %rax
[Codegen] andl       $0xf, %eax
[Codegen] testl      %eax, %eax
[Codegen] je         .Lfrom126683
[Codegen] cmpl       $0x2, %eax
[Codegen] je         .Lfrom126692
[Codegen] cmpl       $0x5, %eax
[Codegen] je         .Lfrom126701
[Codegen] cmpl       $0x3, %eax
[Codegen] je         .Lfrom126710
[Codegen] cmpl       $0x1, %eax
[Codegen] je         .Lfrom126719
[Codegen] cmpl       $0x6, %eax
[Codegen] je         .Lfrom126728
[Codegen] cmpl       $0xa, %eax
[Codegen] je         .Lfrom126737
[Codegen] cmpl       $0x9, %eax
[Codegen] je         .Lfrom126746
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel126764, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel126773, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel126782, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel126791, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel126800, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel126809, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel126818, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel126827, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel126833, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel126839, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel126845, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel126851, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel126857, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel126863, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel126869, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabe57e7, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom126909
[Codegen] .set .Llabel126909, .
[Codegen] int3
[Codegen] .set .Llabel126910, .
[Codegen] .set .Lfrom126909, .Llabel126910
[Codegen] call       .Lfrom126915
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel126920, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel126929, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel126938, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel126947, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel126956, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel126965, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel126974, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel126983, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel126989, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel126995, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel127001, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel127007, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel127013, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel127019, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel127025, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel127049, .
[Codegen] .set .Lfrom126719, .Llabel127049
[Codegen] .set .Lfrom126683, .Llabel127049
[Codegen] .set .Llabel127049, .
[Codegen] movq       0x8(%rbx), %rax
[Codegen] .set .Llabel127053, .
[Codegen] movq       %rax, 0xe8(%rdx)
[Codegen] .set .Llabel127060, .
[Codegen] movq       0x0(%rbx), %rax
[Codegen] .set .Llabel127063, .
[Codegen] movq       %rax, 0xe0(%rdx)
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret
[Codegen] .set .Llabel127075, .
[Codegen] .set .Lfrom126692, .Llabel127075
[Codegen] .set .Llabel127075, .
[Codegen] movq       0x0(%rbx), %rbx
[Codegen] .set .Llabel127078, .
[Codegen] movq       0x10(%rbx), %rax
[Codegen] andl       $0xf, %eax
[Codegen] cmpl       $0x1, %eax
[Codegen] je         .Lfrom127094
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel127112, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel127121, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel127130, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel127139, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel127148, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel127157, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel127166, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel127175, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel127181, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel127187, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel127193, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel127199, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel127205, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel127211, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel127217, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabea58b, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom127257
[Codegen] .set .Llabel127257, .
[Codegen] int3
[Codegen] .set .Llabel127258, .
[Codegen] .set .Lfrom127257, .Llabel127258
[Codegen] call       .Lfrom127263
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel127268, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel127277, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel127286, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel127295, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel127304, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel127313, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel127322, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel127331, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel127337, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel127343, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel127349, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel127355, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel127361, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel127367, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel127373, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel127397, .
[Codegen] .set .Lfrom127094, .Llabel127397
[Codegen] .set .Llabel127397, .
[Codegen] movq       0x8(%rbx), %rax
[Codegen] .set .Llabel127401, .
[Codegen] movq       %rax, 0xe8(%rdx)
[Codegen] .set .Llabel127408, .
[Codegen] movq       0x0(%rbx), %rax
[Codegen] .set .Llabel127411, .
[Codegen] movq       %rax, 0xe0(%rdx)
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret
[Codegen] .set .Llabel127423, .
[Codegen] .set .Lfrom126728, .Llabel127423
[Codegen] .set .Llabel127423, .
[Codegen] movq       0x0(%rbx), %rbx
[Codegen] .set .Llabel127426, .
[Codegen] movq       0x10(%rbx), %rax
[Codegen] andl       $0xf, %eax
[Codegen] testl      %eax, %eax
[Codegen] je         .Lfrom127441
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel127459, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel127468, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel127477, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel127486, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel127495, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel127504, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel127513, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel127522, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel127528, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel127534, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel127540, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel127546, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel127552, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel127558, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel127564, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabea58b, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom127604
[Codegen] .set .Llabel127604, .
[Codegen] int3
[Codegen] .set .Llabel127605, .
[Codegen] .set .Lfrom127604, .Llabel127605
[Codegen] call       .Lfrom127610
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel127615, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel127624, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel127633, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel127642, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel127651, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel127660, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel127669, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel127678, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel127684, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel127690, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel127696, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel127702, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel127708, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel127714, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel127720, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel127744, .
[Codegen] .set .Lfrom127441, .Llabel127744
[Codegen] .set .Llabel127744, .
[Codegen] movq       0x8(%rbx), %rax
[Codegen] .set .Llabel127748, .
[Codegen] movq       %rax, 0xe8(%rdx)
[Codegen] .set .Llabel127755, .
[Codegen] movq       0x0(%rbx), %rax
[Codegen] .set .Llabel127758, .
[Codegen] movq       %rax, 0xe0(%rdx)
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret
[Codegen] .set .Llabel127770, .
[Codegen] .set .Lfrom126701, .Llabel127770
[Codegen] .set .Llabel127770, .
[Codegen] movq       0x0(%rbx), %rbx
[Codegen] .set .Llabel127773, .
[Codegen] movq       0x10(%rbx), %rax
[Codegen] andl       $0xf, %eax
[Codegen] testl      %eax, %eax
[Codegen] je         .Lfrom127788
[Codegen] cmpl       $0x2, %eax
[Codegen] je         .Lfrom127797
[Codegen] cmpl       $0xa, %eax
[Codegen] je         .Lfrom127806
[Codegen] cmpl       $0x3, %eax
[Codegen] je         .Lfrom127815
[Codegen] cmpl       $0x9, %eax
[Codegen] je         .Lfrom127824
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel127842, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel127851, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel127860, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel127869, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel127878, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel127887, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel127896, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel127905, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel127911, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel127917, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel127923, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel127929, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel127935, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel127941, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel127947, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabea58b, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom127987
[Codegen] .set .Llabel127987, .
[Codegen] int3
[Codegen] .set .Llabel127988, .
[Codegen] .set .Lfrom127987, .Llabel127988
[Codegen] call       .Lfrom127993
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel127998, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel128007, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel128016, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel128025, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel128034, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel128043, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel128052, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel128061, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel128067, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel128073, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel128079, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel128085, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel128091, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel128097, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel128103, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel128127, .
[Codegen] .set .Lfrom127824, .Llabel128127
[Codegen] .set .Lfrom127815, .Llabel128127
[Codegen] .set .Lfrom127806, .Llabel128127
[Codegen] .set .Lfrom127797, .Llabel128127
[Codegen] .set .Lfrom127788, .Llabel128127
[Codegen] jmp        .Llabel126668
[Codegen] .set .Llabel128132, .
[Codegen] .set .Lfrom126737, .Llabel128132
[Codegen] .set .Llabel128132, .
[Codegen] movq       0x0(%rbx), %rbx
[Codegen] .set .Llabel128135, .
[Codegen] movq       0x10(%rbx), %rax
[Codegen] andl       $0xf, %eax
[Codegen] testl      %eax, %eax
[Codegen] je         .Lfrom128150
[Codegen] cmpl       $0x2, %eax
[Codegen] je         .Lfrom128159
[Codegen] cmpl       $0x5, %eax
[Codegen] je         .Lfrom128168
[Codegen] cmpl       $0x3, %eax
[Codegen] je         .Lfrom128177
[Codegen] cmpl       $0x9, %eax
[Codegen] je         .Lfrom128186
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel128204, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel128213, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel128222, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel128231, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel128240, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel128249, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel128258, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel128267, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel128273, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel128279, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel128285, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel128291, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel128297, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel128303, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel128309, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabea58b, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom128349
[Codegen] .set .Llabel128349, .
[Codegen] int3
[Codegen] .set .Llabel128350, .
[Codegen] .set .Lfrom128349, .Llabel128350
[Codegen] call       .Lfrom128355
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel128360, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel128369, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel128378, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel128387, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel128396, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel128405, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel128414, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel128423, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel128429, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel128435, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel128441, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel128447, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel128453, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel128459, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel128465, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel128489, .
[Codegen] .set .Lfrom128186, .Llabel128489
[Codegen] .set .Lfrom128177, .Llabel128489
[Codegen] .set .Lfrom128168, .Llabel128489
[Codegen] .set .Lfrom128159, .Llabel128489
[Codegen] .set .Lfrom128150, .Llabel128489
[Codegen] jmp        .Llabel126668
[Codegen] .set .Llabel128494, .
[Codegen] .set .Lfrom126746, .Llabel128494
[Codegen] .set .Lfrom126710, .Llabel128494
[Codegen] movl       $0x0, %eax
[Codegen] .set .Llabel128499, .
[Codegen] movq       %rax, 0xe8(%rdx)
[Codegen] .set .Llabel128506, .
[Codegen] movq       %rax, 0xe0(%rdx)
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret
[Codegen] # END   creators: JitRuntime::generateProfilerExitFrameTailStub
[Codegen] # Emitting exception tail stub
[Codegen] # BEGIN creators: JitRuntime::generateExceptionTailStub
[Codegen] # BEGIN creators: JitRuntime::generateExceptionTailStub/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel128536, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel128545, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel128554, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel128563, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel128572, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel128581, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel128590, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel128599, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel128605, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel128611, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel128617, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel128623, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel128629, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel128635, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel128641, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom128681
[Codegen] .set .Llabel128681, .
[Codegen] int3
[Codegen] .set .Llabel128682, .
[Codegen] .set .Lfrom128681, .Llabel128682
[Codegen] call       .Lfrom128687
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel128692, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel128701, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel128710, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel128719, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel128728, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel128737, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel128746, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel128755, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel128761, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel128767, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel128773, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel128779, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel128785, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel128791, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel128797, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel128832, .
[Codegen] # END   creators: JitRuntime::generateExceptionTailStub/startTrampolineCode
[Codegen] .set .Llabel128832, .
[Codegen] .set .Lfrom125999, .Llabel128832
[Codegen] .set .Lfrom125615, .Llabel128832
[Codegen] .set .Lfrom125231, .Llabel128832
[Codegen] .set .Lfrom124847, .Llabel128832
[Codegen] .set .Lfrom124466, .Llabel128832
[Codegen] .set .Lfrom124090, .Llabel128832
[Codegen] .set .Lfrom123710, .Llabel128832
[Codegen] .set .Lfrom123326, .Llabel128832
[Codegen] .set .Lfrom122942, .Llabel128832
[Codegen] .set .Lfrom122558, .Llabel128832
[Codegen] .set .Lfrom122186, .Llabel128832
[Codegen] .set .Lfrom121806, .Llabel128832
[Codegen] .set .Lfrom121422, .Llabel128832
[Codegen] .set .Lfrom121047, .Llabel128832
[Codegen] .set .Lfrom120650, .Llabel128832
[Codegen] .set .Lfrom120250, .Llabel128832
[Codegen] .set .Lfrom119850, .Llabel128832
[Codegen] .set .Lfrom119450, .Llabel128832
[Codegen] .set .Lfrom119055, .Llabel128832
[Codegen] .set .Lfrom118671, .Llabel128832
[Codegen] .set .Lfrom118287, .Llabel128832
[Codegen] .set .Lfrom117903, .Llabel128832
[Codegen] .set .Lfrom117510, .Llabel128832
[Codegen] .set .Lfrom117119, .Llabel128832
[Codegen] .set .Lfrom116730, .Llabel128832
[Codegen] .set .Lfrom116343, .Llabel128832
[Codegen] .set .Lfrom115959, .Llabel128832
[Codegen] .set .Lfrom115562, .Llabel128832
[Codegen] .set .Lfrom115162, .Llabel128832
[Codegen] .set .Lfrom114762, .Llabel128832
[Codegen] .set .Lfrom114367, .Llabel128832
[Codegen] .set .Lfrom113983, .Llabel128832
[Codegen] .set .Lfrom113607, .Llabel128832
[Codegen] .set .Lfrom113210, .Llabel128832
[Codegen] .set .Lfrom112810, .Llabel128832
[Codegen] .set .Lfrom112410, .Llabel128832
[Codegen] .set .Lfrom112023, .Llabel128832
[Codegen] .set .Lfrom111630, .Llabel128832
[Codegen] .set .Lfrom111242, .Llabel128832
[Codegen] .set .Lfrom110858, .Llabel128832
[Codegen] .set .Lfrom110458, .Llabel128832
[Codegen] .set .Lfrom110058, .Llabel128832
[Codegen] .set .Lfrom109671, .Llabel128832
[Codegen] .set .Lfrom109279, .Llabel128832
[Codegen] .set .Lfrom108898, .Llabel128832
[Codegen] .set .Lfrom108498, .Llabel128832
[Codegen] .set .Lfrom108118, .Llabel128832
[Codegen] .set .Lfrom107734, .Llabel128832
[Codegen] .set .Lfrom107342, .Llabel128832
[Codegen] .set .Lfrom106954, .Llabel128832
[Codegen] .set .Lfrom106570, .Llabel128832
[Codegen] .set .Lfrom106182, .Llabel128832
[Codegen] .set .Lfrom105786, .Llabel128832
[Codegen] .set .Lfrom105394, .Llabel128832
[Codegen] .set .Lfrom104986, .Llabel128832
[Codegen] .set .Lfrom104570, .Llabel128832
[Codegen] .set .Lfrom104170, .Llabel128832
[Codegen] .set .Lfrom103782, .Llabel128832
[Codegen] .set .Lfrom103374, .Llabel128832
[Codegen] .set .Lfrom102994, .Llabel128832
[Codegen] .set .Lfrom102610, .Llabel128832
[Codegen] .set .Lfrom102226, .Llabel128832
[Codegen] .set .Lfrom101850, .Llabel128832
[Codegen] .set .Lfrom101466, .Llabel128832
[Codegen] .set .Lfrom101066, .Llabel128832
[Codegen] .set .Lfrom100666, .Llabel128832
[Codegen] .set .Lfrom100274, .Llabel128832
[Codegen] .set .Lfrom99874, .Llabel128832
[Codegen] .set .Lfrom99470, .Llabel128832
[Codegen] .set .Lfrom99087, .Llabel128832
[Codegen] .set .Lfrom98710, .Llabel128832
[Codegen] .set .Lfrom98319, .Llabel128832
[Codegen] .set .Lfrom97935, .Llabel128832
[Codegen] .set .Lfrom97552, .Llabel128832
[Codegen] .set .Lfrom97170, .Llabel128832
[Codegen] .set .Lfrom96778, .Llabel128832
[Codegen] .set .Lfrom96387, .Llabel128832
[Codegen] .set .Lfrom95995, .Llabel128832
[Codegen] .set .Lfrom95603, .Llabel128832
[Codegen] .set .Lfrom95215, .Llabel128832
[Codegen] .set .Lfrom94827, .Llabel128832
[Codegen] .set .Lfrom94443, .Llabel128832
[Codegen] .set .Lfrom94063, .Llabel128832
[Codegen] .set .Lfrom93687, .Llabel128832
[Codegen] .set .Lfrom93303, .Llabel128832
[Codegen] .set .Lfrom92915, .Llabel128832
[Codegen] .set .Lfrom92531, .Llabel128832
[Codegen] .set .Lfrom92147, .Llabel128832
[Codegen] .set .Lfrom91767, .Llabel128832
[Codegen] .set .Lfrom91375, .Llabel128832
[Codegen] .set .Lfrom90999, .Llabel128832
[Codegen] .set .Lfrom90603, .Llabel128832
[Codegen] .set .Lfrom90222, .Llabel128832
[Codegen] .set .Lfrom89830, .Llabel128832
[Codegen] .set .Lfrom89423, .Llabel128832
[Codegen] .set .Lfrom89042, .Llabel128832
[Codegen] .set .Lfrom88662, .Llabel128832
[Codegen] .set .Lfrom88262, .Llabel128832
[Codegen] .set .Lfrom87866, .Llabel128832
[Codegen] .set .Lfrom87474, .Llabel128832
[Codegen] .set .Lfrom87066, .Llabel128832
[Codegen] .set .Lfrom86679, .Llabel128832
[Codegen] .set .Lfrom86287, .Llabel128832
[Codegen] .set .Lfrom85906, .Llabel128832
[Codegen] .set .Lfrom85503, .Llabel128832
[Codegen] .set .Lfrom85118, .Llabel128832
[Codegen] .set .Lfrom84739, .Llabel128832
[Codegen] .set .Lfrom84346, .Llabel128832
[Codegen] .set .Lfrom83958, .Llabel128832
[Codegen] .set .Lfrom83574, .Llabel128832
[Codegen] .set .Lfrom83190, .Llabel128832
[Codegen] .set .Lfrom82790, .Llabel128832
[Codegen] .set .Lfrom82382, .Llabel128832
[Codegen] .set .Lfrom81990, .Llabel128832
[Codegen] .set .Lfrom81582, .Llabel128832
[Codegen] .set .Lfrom81186, .Llabel128832
[Codegen] .set .Lfrom80786, .Llabel128832
[Codegen] .set .Lfrom80386, .Llabel128832
[Codegen] .set .Lfrom79978, .Llabel128832
[Codegen] .set .Lfrom79562, .Llabel128832
[Codegen] .set .Lfrom79142, .Llabel128832
[Codegen] .set .Lfrom78743, .Llabel128832
[Codegen] .set .Lfrom78350, .Llabel128832
[Codegen] .set .Lfrom77950, .Llabel128832
[Codegen] .set .Lfrom77570, .Llabel128832
[Codegen] .set .Lfrom77174, .Llabel128832
[Codegen] .set .Lfrom76786, .Llabel128832
[Codegen] .set .Lfrom76391, .Llabel128832
[Codegen] .set .Lfrom75994, .Llabel128832
[Codegen] .set .Lfrom75578, .Llabel128832
[Codegen] .set .Lfrom75162, .Llabel128832
[Codegen] .set .Lfrom74786, .Llabel128832
[Codegen] .set .Lfrom74391, .Llabel128832
[Codegen] .set .Lfrom73999, .Llabel128832
[Codegen] .set .Lfrom73623, .Llabel128832
[Codegen] .set .Lfrom73242, .Llabel128832
[Codegen] .set .Lfrom72846, .Llabel128832
[Codegen] .set .Lfrom72474, .Llabel128832
[Codegen] .set .Lfrom72079, .Llabel128832
[Codegen] .set .Lfrom71314, .Llabel128832
[Codegen] .set .Lfrom70934, .Llabel128832
[Codegen] .set .Lfrom70546, .Llabel128832
[Codegen] .set .Lfrom70162, .Llabel128832
[Codegen] .set .Lfrom69758, .Llabel128832
[Codegen] .set .Lfrom69366, .Llabel128832
[Codegen] .set .Lfrom68954, .Llabel128832
[Codegen] .set .Lfrom68559, .Llabel128832
[Codegen] .set .Lfrom67791, .Llabel128832
[Codegen] .set .Lfrom67407, .Llabel128832
[Codegen] .set .Lfrom67022, .Llabel128832
[Codegen] .set .Lfrom66630, .Llabel128832
[Codegen] .set .Lfrom66230, .Llabel128832
[Codegen] .set .Lfrom65846, .Llabel128832
[Codegen] .set .Lfrom65434, .Llabel128832
[Codegen] .set .Lfrom65050, .Llabel128832
[Codegen] .set .Lfrom64651, .Llabel128832
[Codegen] .set .Lfrom64251, .Llabel128832
[Codegen] .set .Lfrom63855, .Llabel128832
[Codegen] .set .Lfrom63479, .Llabel128832
[Codegen] .set .Lfrom63086, .Llabel128832
[Codegen] .set .Lfrom62706, .Llabel128832
[Codegen] .set .Lfrom62318, .Llabel128832
[Codegen] .set .Lfrom61926, .Llabel128832
[Codegen] .set .Lfrom61542, .Llabel128832
[Codegen] .set .Lfrom61142, .Llabel128832
[Codegen] .set .Lfrom60742, .Llabel128832
[Codegen] .set .Lfrom60334, .Llabel128832
[Codegen] .set .Lfrom59958, .Llabel128832
[Codegen] .set .Lfrom59558, .Llabel128832
[Codegen] .set .Lfrom59154, .Llabel128832
[Codegen] .set .Lfrom58774, .Llabel128832
[Codegen] .set .Lfrom58366, .Llabel128832
[Codegen] .set .Lfrom57966, .Llabel128832
[Codegen] .set .Lfrom57554, .Llabel128832
[Codegen] .set .Lfrom57158, .Llabel128832
[Codegen] .set .Lfrom56755, .Llabel128832
[Codegen] .set .Lfrom56351, .Llabel128832
[Codegen] .set .Lfrom55951, .Llabel128832
[Codegen] .set .Lfrom55551, .Llabel128832
[Codegen] .set .Lfrom55151, .Llabel128832
[Codegen] .set .Lfrom54743, .Llabel128832
[Codegen] .set .Lfrom54327, .Llabel128832
[Codegen] .set .Lfrom53911, .Llabel128832
[Codegen] .set .Lfrom53495, .Llabel128832
[Codegen] .set .Lfrom53091, .Llabel128832
[Codegen] .set .Lfrom52691, .Llabel128832
[Codegen] .set .Lfrom52291, .Llabel128832
[Codegen] .set .Lfrom51887, .Llabel128832
[Codegen] .set .Lfrom51479, .Llabel128832
[Codegen] .set .Lfrom51047, .Llabel128832
[Codegen] .set .Lfrom50639, .Llabel128832
[Codegen] .set .Lfrom50231, .Llabel128832
[Codegen] .set .Lfrom49827, .Llabel128832
[Codegen] .set .Lfrom49431, .Llabel128832
[Codegen] .set .Lfrom49015, .Llabel128832
[Codegen] .set .Lfrom48611, .Llabel128832
[Codegen] .set .Lfrom48199, .Llabel128832
[Codegen] .set .Lfrom47799, .Llabel128832
[Codegen] .set .Lfrom47423, .Llabel128832
[Codegen] .set .Lfrom47015, .Llabel128832
[Codegen] .set .Lfrom46615, .Llabel128832
[Codegen] .set .Lfrom46215, .Llabel128832
[Codegen] .set .Lfrom45815, .Llabel128832
[Codegen] .set .Lfrom45423, .Llabel128832
[Codegen] .set .Lfrom45039, .Llabel128832
[Codegen] .set .Lfrom44651, .Llabel128832
[Codegen] .set .Lfrom44271, .Llabel128832
[Codegen] .set .Lfrom43887, .Llabel128832
[Codegen] .set .Lfrom43503, .Llabel128832
[Codegen] .set .Lfrom43115, .Llabel128832
[Codegen] .set .Lfrom42735, .Llabel128832
[Codegen] .set .Lfrom42335, .Llabel128832
[Codegen] .set .Lfrom41936, .Llabel128832
[Codegen] .set .Lfrom41548, .Llabel128832
[Codegen] .set .Lfrom41176, .Llabel128832
[Codegen] .set .Lfrom40780, .Llabel128832
[Codegen] .set .Lfrom40396, .Llabel128832
[Codegen] .set .Lfrom40012, .Llabel128832
[Codegen] .set .Lfrom39632, .Llabel128832
[Codegen] .set .Lfrom39252, .Llabel128832
[Codegen] .set .Lfrom38871, .Llabel128832
[Codegen] .set .Lfrom38479, .Llabel128832
[Codegen] .set .Lfrom38092, .Llabel128832
[Codegen] .set .Lfrom37708, .Llabel128832
[Codegen] .set .Lfrom37331, .Llabel128832
[Codegen] .set .Lfrom36923, .Llabel128832
[Codegen] .set .Lfrom36523, .Llabel128832
[Codegen] .set .Lfrom36151, .Llabel128832
[Codegen] .set .Lfrom35771, .Llabel128832
[Codegen] .set .Lfrom35388, .Llabel128832
[Codegen] .set .Lfrom35004, .Llabel128832
[Codegen] .set .Lfrom34631, .Llabel128832
[Codegen] .set .Lfrom34243, .Llabel128832
[Codegen] .set .Lfrom33852, .Llabel128832
[Codegen] .set .Lfrom33475, .Llabel128832
[Codegen] .set .Lfrom33087, .Llabel128832
[Codegen] .set .Lfrom32691, .Llabel128832
[Codegen] .set .Lfrom32303, .Llabel128832
[Codegen] .set .Lfrom31900, .Llabel128832
[Codegen] .set .Lfrom31516, .Llabel128832
[Codegen] .set .Lfrom31132, .Llabel128832
[Codegen] .set .Lfrom30748, .Llabel128832
[Codegen] .set .Lfrom30364, .Llabel128832
[Codegen] .set .Lfrom29984, .Llabel128832
[Codegen] .set .Lfrom29591, .Llabel128832
[Codegen] .set .Lfrom29191, .Llabel128832
[Codegen] .set .Lfrom28791, .Llabel128832
[Codegen] .set .Lfrom28391, .Llabel128832
[Codegen] .set .Lfrom28000, .Llabel128832
[Codegen] .set .Lfrom27616, .Llabel128832
[Codegen] .set .Lfrom27228, .Llabel128832
[Codegen] .set .Lfrom26848, .Llabel128832
[Codegen] .set .Lfrom26464, .Llabel128832
[Codegen] .set .Lfrom26080, .Llabel128832
[Codegen] .set .Lfrom25692, .Llabel128832
[Codegen] .set .Lfrom25312, .Llabel128832
[Codegen] .set .Lfrom24924, .Llabel128832
[Codegen] .set .Lfrom24540, .Llabel128832
[Codegen] .set .Lfrom24160, .Llabel128832
[Codegen] .set .Lfrom23776, .Llabel128832
[Codegen] .set .Lfrom23388, .Llabel128832
[Codegen] .set .Lfrom23008, .Llabel128832
[Codegen] .set .Lfrom22624, .Llabel128832
[Codegen] .set .Lfrom22240, .Llabel128832
[Codegen] .set .Lfrom21856, .Llabel128832
[Codegen] .set .Lfrom21467, .Llabel128832
[Codegen] .set .Lfrom21067, .Llabel128832
[Codegen] .set .Lfrom20691, .Llabel128832
[Codegen] .set .Lfrom20300, .Llabel128832
[Codegen] .set .Lfrom19924, .Llabel128832
[Codegen] .set .Lfrom19540, .Llabel128832
[Codegen] .set .Lfrom19156, .Llabel128832
[Codegen] .set .Lfrom18768, .Llabel128832
[Codegen] .set .Lfrom18388, .Llabel128832
[Codegen] .set .Lfrom18008, .Llabel128832
[Codegen] .set .Lfrom17620, .Llabel128832
[Codegen] .set .Lfrom17236, .Llabel128832
[Codegen] .set .Lfrom16848, .Llabel128832
[Codegen] .set .Lfrom16468, .Llabel128832
[Codegen] .set .Lfrom16080, .Llabel128832
[Codegen] .set .Lfrom15704, .Llabel128832
[Codegen] .set .Lfrom15312, .Llabel128832
[Codegen] .set .Lfrom14924, .Llabel128832
[Codegen] .set .Lfrom14548, .Llabel128832
[Codegen] .set .Lfrom14168, .Llabel128832
[Codegen] .set .Lfrom13776, .Llabel128832
[Codegen] .set .Lfrom13400, .Llabel128832
[Codegen] .set .Lfrom13011, .Llabel128832
[Codegen] .set .Lfrom12631, .Llabel128832
[Codegen] .set .Lfrom12235, .Llabel128832
[Codegen] .set .Lfrom11453, .Llabel128832
[Codegen] .set .Lfrom474, .Llabel128832
[Codegen] .set .Lfrom439, .Llabel128832
[Codegen] subq       $64, %rsp
[Codegen] movq       %rsp, %rax
[Codegen] movq       %rsp, %rcx
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rcx
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom128864
[Codegen] .set .Llabel128864, .
[Codegen] int3
[Codegen] .set .Llabel128865, .
[Codegen] .set .Lfrom128864, .Llabel128865
[Codegen] call       .Lfrom128870
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel128875, .
[Codegen] .set .Llabel128875, .
[Codegen] movl       0x18(%rsp), %eax
[Codegen] testl      %eax, %eax
[Codegen] je         .Lfrom128887
[Codegen] cmpl       $0x1, %eax
[Codegen] je         .Lfrom128896
[Codegen] cmpl       $0x2, %eax
[Codegen] je         .Lfrom128905
[Codegen] cmpl       $0x3, %eax
[Codegen] je         .Lfrom128914
[Codegen] cmpl       $0x4, %eax
[Codegen] je         .Lfrom128923
[Codegen] cmpl       $0x5, %eax
[Codegen] je         .Lfrom128932
[Codegen] cmpl       $0x6, %eax
[Codegen] je         .Lfrom128941
[Codegen] cmpl       $0x7, %eax
[Codegen] je         .Lfrom128950
[Codegen] int3
[Codegen] .set .Llabel128951, .
[Codegen] .set .Lfrom128887, .Llabel128951
[Codegen] movabsq    $0xfffa800000000007, %rcx
[Codegen] .set .Llabel128961, .
[Codegen] movq       0x0(%rsp), %rbp
[Codegen] .set .Llabel128965, .
[Codegen] movq       0x8(%rsp), %rsp
[Codegen] ret
[Codegen] .set .Llabel128971, .
[Codegen] .set .Lfrom128896, .Llabel128971
[Codegen] .set .Llabel128971, .
[Codegen] movq       0x10(%rsp), %rax
[Codegen] .set .Llabel128976, .
[Codegen] movq       0x0(%rsp), %rbp
[Codegen] .set .Llabel128980, .
[Codegen] movq       0x8(%rsp), %rsp
[Codegen] jmp        *%rax
[Codegen] .set .Llabel128987, .
[Codegen] .set .Lfrom128905, .Llabel128987
[Codegen] movq       0x28(%rsp), %rcx
[Codegen] movq       0x30(%rsp), %rdx
[Codegen] .set .Llabel128997, .
[Codegen] movq       0x10(%rsp), %rax
[Codegen] .set .Llabel129002, .
[Codegen] movq       0x0(%rsp), %rbp
[Codegen] .set .Llabel129006, .
[Codegen] movq       0x8(%rsp), %rsp
[Codegen] push       %rcx
[Codegen] push       %rdx
[Codegen] movabsq    $0xfff9000000000001, %r11
[Codegen] push       %r11
[Codegen] jmp        *%rax
[Codegen] .set .Llabel129027, .
[Codegen] .set .Lfrom128914, .Llabel129027
[Codegen] .set .Llabel129027, .
[Codegen] movq       0x0(%rsp), %rbp
[Codegen] .set .Llabel129031, .
[Codegen] movq       0x8(%rsp), %rsp
[Codegen] movq       -0x8(%rbp), %rcx
[Codegen] jmp        .Lfrom129045
[Codegen] .set .Llabel129045, .
[Codegen] .set .Lfrom128923, .Llabel129045
[Codegen] movq       0x28(%rsp), %rcx
[Codegen] .set .Llabel129050, .
[Codegen] movq       0x0(%rsp), %rbp
[Codegen] .set .Llabel129054, .
[Codegen] movq       0x8(%rsp), %rsp
[Codegen] .set .Llabel129059, .
[Codegen] .set .Lfrom129045, .Llabel129059
[Codegen] movabsq    $0x75bb8e7303bc, %r11
[Codegen] cmpl       $0x0, 0x0(%r11)
[Codegen] je         .Lfrom129079
[Codegen] jmp        .Llabel126320
[Codegen] .set .Llabel129084, .
[Codegen] .set .Lfrom129079, .Llabel129084
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret
[Codegen] .set .Llabel129089, .
[Codegen] .set .Lfrom128932, .Llabel129089
[Codegen] .set .Llabel129089, .
[Codegen] movq       0x38(%rsp), %r9
[Codegen] .set .Llabel129094, .
[Codegen] movq       0x8(%rsp), %rsp
[Codegen] movl       $0x1, %eax
[Codegen] jmp        .Llabel0
[Codegen] .set .Llabel129109, .
[Codegen] .set .Lfrom128941, .Llabel129109
[Codegen] .set .Llabel129109, .
[Codegen] movq       0x0(%rsp), %rbp
[Codegen] .set .Llabel129113, .
[Codegen] movq       0x8(%rsp), %rsp
[Codegen] movl       $0xbad, %r14d
[Codegen] ret
[Codegen] .set .Llabel129125, .
[Codegen] .set .Lfrom128950, .Llabel129125
[Codegen] .set .Llabel129125, .
[Codegen] movq       0x20(%rsp), %r14
[Codegen] .set .Llabel129130, .
[Codegen] movq       0x0(%r14), %r15
[Codegen] .set .Llabel129133, .
[Codegen] movq       0x20(%r14), %rax
[Codegen] .set .Llabel129137, .
[Codegen] movq       0x18(%r14), %rbx
[Codegen] .set .Llabel129141, .
[Codegen] movq       %rbx, 0xb8(%rax)
[Codegen] .set .Llabel129148, .
[Codegen] movq       0x10(%rsp), %rax
[Codegen] .set .Llabel129153, .
[Codegen] movq       0x0(%rsp), %rbp
[Codegen] .set .Llabel129157, .
[Codegen] movq       0x8(%rsp), %rsp
[Codegen] xorq       %rcx, %rcx
[Codegen] xorq       %rdx, %rdx
[Codegen] xorq       %rbx, %rbx
[Codegen] xorq       %rsi, %rsi
[Codegen] xorq       %rdi, %rdi
[Codegen] xorq       %r8, %r8
[Codegen] xorq       %r9, %r9
[Codegen] xorq       %r10, %r10
[Codegen] xorq       %r12, %r12
[Codegen] xorq       %r13, %r13
[Codegen] movsd      .Lfrom129200(%rip), %xmm0
[Codegen] vmovapd    %xmm0, %xmm1
[Codegen] vmovapd    %xmm0, %xmm2
[Codegen] vmovapd    %xmm0, %xmm3
[Codegen] vmovapd    %xmm0, %xmm4
[Codegen] vmovapd    %xmm0, %xmm5
[Codegen] vmovapd    %xmm0, %xmm6
[Codegen] vmovapd    %xmm0, %xmm7
[Codegen] vmovapd    %xmm0, %xmm8
[Codegen] vmovapd    %xmm0, %xmm9
[Codegen] vmovapd    %xmm0, %xmm10
[Codegen] vmovapd    %xmm0, %xmm11
[Codegen] vmovapd    %xmm0, %xmm12
[Codegen] vmovapd    %xmm0, %xmm13
[Codegen] vmovapd    %xmm0, %xmm14
[Codegen] jmp        *%rax
[Codegen] # END   creators: JitRuntime::generateExceptionTailStub
[Codegen] # Emitting Ion generic call stub
[Codegen] # BEGIN creators: JitRuntime::generateIonGenericCallStub
[Codegen] # BEGIN creators: JitRuntime::generateIonGenericCallStub/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel129276, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel129285, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel129294, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel129303, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel129312, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel129321, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel129330, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel129339, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel129345, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel129351, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel129357, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel129363, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel129369, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel129375, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel129381, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom129421
[Codegen] .set .Llabel129421, .
[Codegen] int3
[Codegen] .set .Llabel129422, .
[Codegen] .set .Lfrom129421, .Llabel129422
[Codegen] call       .Lfrom129427
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel129432, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel129441, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel129450, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel129459, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel129468, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel129477, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel129486, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel129495, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel129501, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel129507, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel129513, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel129519, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel129525, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel129531, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel129537, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel129568, .
[Codegen] # END   creators: JitRuntime::generateIonGenericCallStub/startTrampolineCode
[Codegen] pop        %rax
[Codegen] .set .Llabel129569, .
[Codegen] .set .Llabel129569, .
[Codegen] movq       0x0(%rdi), %rcx
[Codegen] .set .Llabel129572, .
[Codegen] movq       0x0(%rcx), %rcx
[Codegen] .set .Llabel129575, .
[Codegen] movq       0x0(%rcx), %rcx
[Codegen] movabsq    $0x5c7eddf37180, %r11
[Codegen] cmpq       %r11, %rcx
[Codegen] je         .Lfrom129597
[Codegen] movabsq    $0x5c7eddf37240, %r11
[Codegen] cmpq       %r11, %rcx
[Codegen] jne        .Lfrom129616
[Codegen] .set .Llabel129616, .
[Codegen] .set .Lfrom129597, .Llabel129616
[Codegen] movl       $0x0, %ecx
[Codegen] cmovne     %rcx, %rdi
[Codegen] .set .Llabel129625, .
[Codegen] movl       0x18(%rdi), %ecx
[Codegen] andl       $0x7, %ecx
[Codegen] cmpl       $0x3, %ecx
[Codegen] je         .Lfrom129640
[Codegen] .set .Llabel129640, .
[Codegen] movq       0x0(%rdi), %rcx
[Codegen] .set .Llabel129643, .
[Codegen] movq       0x0(%rcx), %rcx
[Codegen] .set .Llabel129646, .
[Codegen] movq       0x8(%rcx), %rcx
[Codegen] movabsq    $0x75bb8e73a2b8, %r11
[Codegen] .set .Llabel129660, .
[Codegen] movq       %rcx, 0x0(%r11)
[Codegen] testl      $0xe0, 0x18(%rdi)
[Codegen] je         .Lfrom129676
[Codegen] .set .Llabel129676, .
[Codegen] movq       0x28(%rdi), %rsi
[Codegen] .set .Llabel129680, .
[Codegen] movq       0x0(%rsi), %rsi
[Codegen] push       %rdi
[Codegen] movl       %ebx, %ecx
[Codegen] shll       $5, %ecx
[Codegen] orl        $0x0, %ecx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] .set .Llabel129694, .
[Codegen] movl       0x18(%rdi), %ecx
[Codegen] shrl       $16, %ecx
[Codegen] cmpl       %ebx, %ecx
[Codegen] jbe        .Lfrom129708
[Codegen] jmp        .Llabel1808
[Codegen] .set .Llabel129713, .
[Codegen] .set .Lfrom129708, .Llabel129713
[Codegen] jmp        *%rsi
[Codegen] .set .Llabel129715, .
[Codegen] .set .Lfrom129676, .Llabel129715
[Codegen] movabsq    $0x5c7edc659710, %r11
[Codegen] cmpq       %r11, 0x20(%rdi)
[Codegen] jne        .Lfrom129735
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] xorq       0x0(%rsp), %r11
[Codegen] movq       %r11, %rcx
[Codegen] shrq       $47, %r11
[Codegen] jne        .Lfrom129762
[Codegen] movq       %rcx, %rdi
[Codegen] testl      %ebx, %ebx
[Codegen] jne        .Lfrom129773
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] movq       %r11, 0x0(%rsp)
[Codegen] jmp        .Llabel129569
[Codegen] .set .Llabel129792, .
[Codegen] .set .Lfrom129773, .Llabel129792
[Codegen] movq       %rsp, %rcx
[Codegen] leaq       0x0(%rcx,%rbx,8), %rsi
[Codegen] .set .Llabel129799, .
[Codegen] cmpq       %rsi, %rcx
[Codegen] je         .Lfrom129808
[Codegen] .set .Llabel129808, .
[Codegen] movq       0x8(%rcx), %rdx
[Codegen] .set .Llabel129812, .
[Codegen] movq       %rdx, 0x0(%rcx)
[Codegen] addq       $8, %rcx
[Codegen] jmp        .Llabel129799
[Codegen] .set .Llabel129821, .
[Codegen] .set .Lfrom129808, .Llabel129821
[Codegen] subl       $1, %ebx
[Codegen] jmp        .Llabel129569
[Codegen] .set .Llabel129829, .
[Codegen] .set .Lfrom129735, .Llabel129829
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] orq        %rdi, %r11
[Codegen] push       %r11
[Codegen] .set .Llabel129844, .
[Codegen] movq       0x20(%rdi), %rdi
[Codegen] movq       %rsp, %rsi
[Codegen] push       %rbx
[Codegen] movabsq    $0x75bb8e73a200, %rdx
[Codegen] push       $0x0
[Codegen] push       %rax
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] .set .Llabel129869, .
[Codegen] movq       0x140(%rdx), %rcx
[Codegen] .set .Llabel129876, .
[Codegen] movq       %rsp, 0x70(%rcx)
[Codegen] push       $0x0
[Codegen] movq       %rsp, %rcx
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rcx
[Codegen] subq       $8, %rsp
[Codegen] movq       %rdi, %r10
[Codegen] movq       %rdx, %rdi
[Codegen] movq       %rsi, %rdx
[Codegen] movq       %rbx, %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom129916
[Codegen] .set .Llabel129916, .
[Codegen] int3
[Codegen] .set .Llabel129917, .
[Codegen] .set .Lfrom129916, .Llabel129917
[Codegen] call       *%r10
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] testb      $0xff, %al
[Codegen] je         .Llabel128832
[Codegen] movq       0x28(%rsp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret
[Codegen] .set .Llabel129943, .
[Codegen] .set .Lfrom129616, .Llabel129943
[Codegen] .set .Llabel129943, .
[Codegen] movq       0x0(%rdi), %rcx
[Codegen] .set .Llabel129946, .
[Codegen] movq       0x0(%rcx), %rcx
[Codegen] movabsq    $0x5c7eddf2e4e8, %r11
[Codegen] cmpq       %r11, 0x0(%rcx)
[Codegen] jne        .Lfrom129968
[Codegen] movl       $0x0, %ecx
[Codegen] cmovne     %rcx, %rdi
[Codegen] .set .Llabel129977, .
[Codegen] movl       0x20(%rdi), %ecx
[Codegen] shrl       $1, %ecx
[Codegen] addl       %ebx, %ecx
[Codegen] cmpl       $0x177, %ecx
[Codegen] ja         .Lfrom129996
[Codegen] testl      $0x2, 0x20(%rdi)
[Codegen] je         .Lfrom130009
[Codegen] movq       %rsp, %rcx
[Codegen] leaq       0x0(%rcx,%rbx,8), %rsi
[Codegen] .set .Llabel130016, .
[Codegen] cmpq       %rsi, %rcx
[Codegen] je         .Lfrom130025
[Codegen] .set .Llabel130025, .
[Codegen] movq       0x8(%rcx), %rdx
[Codegen] .set .Llabel130029, .
[Codegen] movq       %rdx, 0x0(%rcx)
[Codegen] addq       $8, %rcx
[Codegen] jmp        .Llabel130016
[Codegen] .set .Llabel130038, .
[Codegen] .set .Lfrom130009, .Llabel130038
[Codegen] addq       $8, %rsp
[Codegen] .set .Llabel130042, .
[Codegen] .set .Lfrom130025, .Llabel130042
[Codegen] .set .Llabel130042, .
[Codegen] movl       0x20(%rdi), %ecx
[Codegen] shrl       $1, %ecx
[Codegen] testl      %ecx, %ecx
[Codegen] je         .Lfrom130055
[Codegen] addl       %ecx, %ebx
[Codegen] cmpl       $0x3, %ecx
[Codegen] ja         .Lfrom130066
[Codegen] leaq       0x30(%rdi), %rsi
[Codegen] jmp        .Lfrom130075
[Codegen] .set .Llabel130075, .
[Codegen] .set .Lfrom130066, .Llabel130075
[Codegen] movabsq    $0xfffe000000000000, %rsi
[Codegen] xorq       0x30(%rdi), %rsi
[Codegen] .set .Llabel130089, .
[Codegen] movq       0x10(%rsi), %rsi
[Codegen] .set .Llabel130093, .
[Codegen] .set .Lfrom130075, .Llabel130093
[Codegen] leaq       0x0(%rsi,%rcx,8), %rcx
[Codegen] .set .Llabel130097, .
[Codegen] subq       $8, %rcx
[Codegen] push       0x0(%rcx)
[Codegen] cmpq       %rsi, %rcx
[Codegen] ja         .Llabel130097
[Codegen] .set .Llabel130108, .
[Codegen] .set .Lfrom130055, .Llabel130108
[Codegen] push       0x28(%rdi)
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] movq       0x18(%rdi), %rdi
[Codegen] xorq       %r11, %rdi
[Codegen] jmp        .Llabel129569
[Codegen] .set .Llabel130133, .
[Codegen] .set .Lfrom129996, .Llabel130133
[Codegen] .set .Lfrom129968, .Llabel130133
[Codegen] .set .Lfrom129762, .Llabel130133
[Codegen] .set .Lfrom129640, .Llabel130133
[Codegen] push       %rsp
[Codegen] push       %rbx
[Codegen] push       $0x0
[Codegen] push       $0x0
[Codegen] push       %rdi
[Codegen] push       $0x0
[Codegen] push       %rax
[Codegen] jmp        .Llabel75472
[Codegen] # END   creators: JitRuntime::generateIonGenericCallStub
[Codegen] # Emitting Ion generic construct stub
[Codegen] # BEGIN creators: JitRuntime::generateIonGenericCallStub
[Codegen] # BEGIN creators: JitRuntime::generateIonGenericCallStub/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel130166, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel130175, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel130184, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel130193, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel130202, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel130211, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel130220, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel130229, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel130235, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel130241, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel130247, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel130253, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel130259, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel130265, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel130271, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom130311
[Codegen] .set .Llabel130311, .
[Codegen] int3
[Codegen] .set .Llabel130312, .
[Codegen] .set .Lfrom130311, .Llabel130312
[Codegen] call       .Lfrom130317
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel130322, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel130331, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel130340, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel130349, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel130358, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel130367, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel130376, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel130385, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel130391, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel130397, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel130403, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel130409, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel130415, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel130421, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel130427, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel130464, .
[Codegen] # END   creators: JitRuntime::generateIonGenericCallStub/startTrampolineCode
[Codegen] pop        %rax
[Codegen] .set .Llabel130465, .
[Codegen] .set .Llabel130465, .
[Codegen] movq       0x0(%rdi), %rcx
[Codegen] .set .Llabel130468, .
[Codegen] movq       0x0(%rcx), %rcx
[Codegen] .set .Llabel130471, .
[Codegen] movq       0x0(%rcx), %rcx
[Codegen] movabsq    $0x5c7eddf37180, %r11
[Codegen] cmpq       %r11, %rcx
[Codegen] je         .Lfrom130493
[Codegen] movabsq    $0x5c7eddf37240, %r11
[Codegen] cmpq       %r11, %rcx
[Codegen] jne        .Lfrom130512
[Codegen] .set .Llabel130512, .
[Codegen] .set .Lfrom130493, .Llabel130512
[Codegen] movl       $0x0, %ecx
[Codegen] cmovne     %rcx, %rdi
[Codegen] testl      $0x100, 0x18(%rdi)
[Codegen] je         .Lfrom130534
[Codegen] cmpl       $0xfffa0000, 0x4(%rsp)
[Codegen] je         .Lfrom130548
[Codegen] .set .Llabel130548, .
[Codegen] movq       0x0(%rdi), %rcx
[Codegen] .set .Llabel130551, .
[Codegen] movq       0x0(%rcx), %rcx
[Codegen] .set .Llabel130554, .
[Codegen] movq       0x8(%rcx), %rcx
[Codegen] movabsq    $0x75bb8e73a2b8, %r11
[Codegen] .set .Llabel130568, .
[Codegen] movq       %rcx, 0x0(%r11)
[Codegen] testl      $0xe0, 0x18(%rdi)
[Codegen] je         .Lfrom130584
[Codegen] .set .Llabel130584, .
[Codegen] movq       0x28(%rdi), %rsi
[Codegen] .set .Llabel130588, .
[Codegen] movq       0x0(%rsi), %rsi
[Codegen] orq        $0x1, %rdi
[Codegen] push       %rdi
[Codegen] andq       $0xfffffffffffffffc, %rdi
[Codegen] movl       %ebx, %ecx
[Codegen] shll       $5, %ecx
[Codegen] orl        $0x0, %ecx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] .set .Llabel130610, .
[Codegen] movl       0x18(%rdi), %ecx
[Codegen] shrl       $16, %ecx
[Codegen] cmpl       %ebx, %ecx
[Codegen] jbe        .Lfrom130624
[Codegen] jmp        .Llabel1808
[Codegen] .set .Llabel130629, .
[Codegen] .set .Lfrom130624, .Llabel130629
[Codegen] jmp        *%rsi
[Codegen] .set .Llabel130631, .
[Codegen] .set .Lfrom130584, .Llabel130631
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] orq        %rdi, %r11
[Codegen] push       %r11
[Codegen] .set .Llabel130646, .
[Codegen] movq       0x20(%rdi), %rdi
[Codegen] movq       %rsp, %rsi
[Codegen] push       %rbx
[Codegen] movabsq    $0x75bb8e73a200, %rdx
[Codegen] push       $0x0
[Codegen] push       %rax
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] .set .Llabel130671, .
[Codegen] movq       0x140(%rdx), %rcx
[Codegen] .set .Llabel130678, .
[Codegen] movq       %rsp, 0x70(%rcx)
[Codegen] push       $0x1
[Codegen] movq       %rsp, %rcx
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rcx
[Codegen] subq       $8, %rsp
[Codegen] movq       %rdi, %r10
[Codegen] movq       %rdx, %rdi
[Codegen] movq       %rsi, %rdx
[Codegen] movq       %rbx, %rsi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom130718
[Codegen] .set .Llabel130718, .
[Codegen] int3
[Codegen] .set .Llabel130719, .
[Codegen] .set .Lfrom130718, .Llabel130719
[Codegen] call       *%r10
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] testb      $0xff, %al
[Codegen] je         .Llabel128832
[Codegen] movq       0x28(%rsp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret
[Codegen] .set .Llabel130745, .
[Codegen] .set .Lfrom130512, .Llabel130745
[Codegen] .set .Llabel130745, .
[Codegen] .set .Lfrom130548, .Llabel130745
[Codegen] .set .Lfrom130534, .Llabel130745
[Codegen] push       %rsp
[Codegen] push       %rbx
[Codegen] push       $0x0
[Codegen] push       $0x1
[Codegen] push       %rdi
[Codegen] push       $0x0
[Codegen] push       %rax
[Codegen] jmp        .Llabel75472
[Codegen] # END   creators: JitRuntime::generateIonGenericCallStub
[Codegen] # Emitting trampoline natives
[Codegen] # BEGIN creators: JitRuntime::generateArraySortTrampoline
[Codegen] # BEGIN creators: JitRuntime::generateArraySortTrampoline/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel130778, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel130787, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel130796, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel130805, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel130814, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel130823, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel130832, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel130841, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel130847, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel130853, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel130859, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel130865, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel130871, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel130877, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel130883, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom130923
[Codegen] .set .Llabel130923, .
[Codegen] int3
[Codegen] .set .Llabel130924, .
[Codegen] .set .Lfrom130923, .Llabel130924
[Codegen] call       .Lfrom130929
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel130934, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel130943, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel130952, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel130961, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel130970, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel130979, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel130988, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel130997, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel131003, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel131009, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel131015, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel131021, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel131027, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel131033, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel131039, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel131072, .
[Codegen] # END   creators: JitRuntime::generateArraySortTrampoline/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] subq       $224, %rsp
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom131093
[Codegen] .set .Llabel131093, .
[Codegen] int3
[Codegen] .set .Llabel131094, .
[Codegen] .set .Lfrom131093, .Llabel131094
[Codegen] movabsq    $0x75bb8e73a200, %rdx
[Codegen] push       $0xa
[Codegen] push       $0x0
[Codegen] push       %rbp
[Codegen] .set .Llabel131109, .
[Codegen] movq       0x140(%rdx), %rbx
[Codegen] .set .Llabel131116, .
[Codegen] movq       %rsp, 0x70(%rbx)
[Codegen] push       $0xc
[Codegen] movq       %rbp, %rsi
[Codegen] movq       %rdx, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom131138
[Codegen] .set .Llabel131138, .
[Codegen] int3
[Codegen] .set .Llabel131139, .
[Codegen] .set .Lfrom131138, .Llabel131139
[Codegen] call       .Lfrom131144
[Codegen] jmp        .Lfrom131149
[Codegen] .set .Llabel131149, .
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] movq       %r11, -0xd0(%rbp)
[Codegen] movq       $74, -0xe0(%rbp)
[Codegen] .set .Llabel131177, .
[Codegen] movq       -0xd8(%rbp), %rdx
[Codegen] .set .Llabel131184, .
[Codegen] movq       0x28(%rdx), %rbx
[Codegen] .set .Llabel131188, .
[Codegen] movq       0x0(%rbx), %rbx
[Codegen] call       *%rbx
[Codegen] .set .Llabel131193, .
[Codegen] jmp        .Lfrom131198
[Codegen] .set .Llabel131198, .
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] movq       %r11, -0xd0(%rbp)
[Codegen] movq       $74, -0xe0(%rbp)
[Codegen] .set .Llabel131226, .
[Codegen] movq       -0xd8(%rbp), %rdx
[Codegen] .set .Llabel131233, .
[Codegen] movq       0x28(%rdx), %rbx
[Codegen] .set .Llabel131237, .
[Codegen] movq       0x0(%rbx), %rbx
[Codegen] .set .Llabel131240, .
[Codegen] movq       0x0(%rdx), %rsi
[Codegen] .set .Llabel131243, .
[Codegen] movq       0x0(%rsi), %rsi
[Codegen] .set .Llabel131246, .
[Codegen] movq       0x8(%rsi), %rsi
[Codegen] movabsq    $0x75bb8e73a2b8, %r11
[Codegen] .set .Llabel131260, .
[Codegen] movq       %rsi, 0x0(%r11)
[Codegen] .set .Llabel131263, .
[Codegen] movl       0x18(%rdx), %edx
[Codegen] shrl       $16, %edx
[Codegen] cmpl       $0x2, %edx
[Codegen] jbe        .Lfrom131278
[Codegen] call       .Lfrom131283
[Codegen] .set .Lfrom131283, .Llabel1808
[Codegen] jmp        .Lfrom131288
[Codegen] .set .Llabel131288, .
[Codegen] .set .Lfrom131278, .Llabel131288
[Codegen] call       *%rbx
[Codegen] .set .Llabel131290, .
[Codegen] .set .Llabel131290, .
[Codegen] .set .Lfrom131288, .Llabel131290
[Codegen] .set .Llabel131290, .
[Codegen] movq       0x18(%rbp), %rdx
[Codegen] andq       $0x3, %rdx
[Codegen] testq      %rdx, %rdx
[Codegen] je         .Lfrom131307
[Codegen] cmpq       $0x1, %rdx
[Codegen] je         .Lfrom131317
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel131335, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel131344, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel131353, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel131362, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel131371, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel131380, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel131389, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel131398, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel131404, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel131410, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel131416, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel131422, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel131428, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel131434, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel131440, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabb5761, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom131480
[Codegen] .set .Llabel131480, .
[Codegen] int3
[Codegen] .set .Llabel131481, .
[Codegen] .set .Lfrom131480, .Llabel131481
[Codegen] call       .Lfrom131486
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel131491, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel131500, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel131509, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel131518, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel131527, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel131536, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel131545, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel131554, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel131560, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel131566, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel131572, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel131578, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel131584, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel131590, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel131596, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel131620, .
[Codegen] .set .Lfrom131317, .Llabel131620
[Codegen] .set .Lfrom131307, .Llabel131620
[Codegen] .set .Llabel131620, .
[Codegen] movq       0x18(%rbp), %rdx
[Codegen] andq       $0xfffffffffffffffc, %rdx
[Codegen] .set .Llabel131628, .
[Codegen] movq       0x0(%rdx), %rbx
[Codegen] .set .Llabel131631, .
[Codegen] movq       0x0(%rbx), %rbx
[Codegen] .set .Llabel131634, .
[Codegen] movq       0x8(%rbx), %rbx
[Codegen] movabsq    $0x75bb8e73a2b8, %r11
[Codegen] .set .Llabel131648, .
[Codegen] movq       %rbx, 0x0(%r11)
[Codegen] .set .Llabel131651, .
[Codegen] .set .Lfrom131198, .Llabel131651
[Codegen] movq       %rcx, -0xc8(%rbp)
[Codegen] movq       %rsp, %rsi
[Codegen] movabsq    $0x75bb8e73a200, %rdx
[Codegen] push       $0xa
[Codegen] push       $0x0
[Codegen] push       %rbp
[Codegen] .set .Llabel131676, .
[Codegen] movq       0x140(%rdx), %rbx
[Codegen] .set .Llabel131683, .
[Codegen] movq       %rsp, 0x70(%rbx)
[Codegen] push       $0xc
[Codegen] movq       %rsi, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom131702
[Codegen] .set .Llabel131702, .
[Codegen] int3
[Codegen] .set .Llabel131703, .
[Codegen] .set .Lfrom131702, .Llabel131703
[Codegen] call       .Lfrom131708
[Codegen] .set .Llabel131708, .
[Codegen] .set .Lfrom131149, .Llabel131708
[Codegen] testl      %eax, %eax
[Codegen] je         .Llabel128832
[Codegen] addq       $32, %rsp
[Codegen] cmpl       $0x3, %eax
[Codegen] je         .Llabel131149
[Codegen] cmpl       $0x2, %eax
[Codegen] je         .Llabel131198
[Codegen] cmpl       $0x1, %eax
[Codegen] je         .Lfrom131747
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel131765, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel131774, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel131783, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel131792, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel131801, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel131810, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel131819, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel131828, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel131834, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel131840, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel131846, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel131852, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel131858, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel131864, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel131870, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabe58c9, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom131910
[Codegen] .set .Llabel131910, .
[Codegen] int3
[Codegen] .set .Llabel131911, .
[Codegen] .set .Lfrom131910, .Llabel131911
[Codegen] call       .Lfrom131916
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel131921, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel131930, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel131939, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel131948, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel131957, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel131966, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel131975, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel131984, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel131990, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel131996, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel132002, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel132008, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel132014, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel132020, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel132026, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel132050, .
[Codegen] .set .Lfrom131747, .Llabel132050
[Codegen] movq       -0xc8(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret
[Codegen] # END   creators: JitRuntime::generateArraySortTrampoline
[Codegen] # BEGIN creators: JitRuntime::generateArraySortTrampoline
[Codegen] # BEGIN creators: JitRuntime::generateArraySortTrampoline/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel132080, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel132089, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel132098, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel132107, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel132116, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel132125, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel132134, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel132143, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel132149, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel132155, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel132161, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel132167, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel132173, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel132179, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel132185, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom132225
[Codegen] .set .Llabel132225, .
[Codegen] int3
[Codegen] .set .Llabel132226, .
[Codegen] .set .Lfrom132225, .Llabel132226
[Codegen] call       .Lfrom132231
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel132236, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel132245, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel132254, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel132263, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel132272, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel132281, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel132290, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel132299, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel132305, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel132311, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel132317, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel132323, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel132329, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel132335, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel132341, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel132368, .
[Codegen] # END   creators: JitRuntime::generateArraySortTrampoline/startTrampolineCode
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] subq       $224, %rsp
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom132389
[Codegen] .set .Llabel132389, .
[Codegen] int3
[Codegen] .set .Llabel132390, .
[Codegen] .set .Lfrom132389, .Llabel132390
[Codegen] movabsq    $0x75bb8e73a200, %rdx
[Codegen] push       $0xa
[Codegen] push       $0x0
[Codegen] push       %rbp
[Codegen] .set .Llabel132405, .
[Codegen] movq       0x140(%rdx), %rbx
[Codegen] .set .Llabel132412, .
[Codegen] movq       %rsp, 0x70(%rbx)
[Codegen] push       $0xc
[Codegen] movq       %rbp, %rsi
[Codegen] movq       %rdx, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom132434
[Codegen] .set .Llabel132434, .
[Codegen] int3
[Codegen] .set .Llabel132435, .
[Codegen] .set .Lfrom132434, .Llabel132435
[Codegen] call       .Lfrom132440
[Codegen] jmp        .Lfrom132445
[Codegen] .set .Llabel132445, .
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] movq       %r11, -0xd0(%rbp)
[Codegen] movq       $74, -0xe0(%rbp)
[Codegen] .set .Llabel132473, .
[Codegen] movq       -0xd8(%rbp), %rdx
[Codegen] .set .Llabel132480, .
[Codegen] movq       0x28(%rdx), %rbx
[Codegen] .set .Llabel132484, .
[Codegen] movq       0x0(%rbx), %rbx
[Codegen] call       *%rbx
[Codegen] .set .Llabel132489, .
[Codegen] jmp        .Lfrom132494
[Codegen] .set .Llabel132494, .
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] movq       %r11, -0xd0(%rbp)
[Codegen] movq       $74, -0xe0(%rbp)
[Codegen] .set .Llabel132522, .
[Codegen] movq       -0xd8(%rbp), %rdx
[Codegen] .set .Llabel132529, .
[Codegen] movq       0x28(%rdx), %rbx
[Codegen] .set .Llabel132533, .
[Codegen] movq       0x0(%rbx), %rbx
[Codegen] .set .Llabel132536, .
[Codegen] movq       0x0(%rdx), %rsi
[Codegen] .set .Llabel132539, .
[Codegen] movq       0x0(%rsi), %rsi
[Codegen] .set .Llabel132542, .
[Codegen] movq       0x8(%rsi), %rsi
[Codegen] movabsq    $0x75bb8e73a2b8, %r11
[Codegen] .set .Llabel132556, .
[Codegen] movq       %rsi, 0x0(%r11)
[Codegen] .set .Llabel132559, .
[Codegen] movl       0x18(%rdx), %edx
[Codegen] shrl       $16, %edx
[Codegen] cmpl       $0x2, %edx
[Codegen] jbe        .Lfrom132574
[Codegen] call       .Lfrom132579
[Codegen] .set .Lfrom132579, .Llabel1808
[Codegen] jmp        .Lfrom132584
[Codegen] .set .Llabel132584, .
[Codegen] .set .Lfrom132574, .Llabel132584
[Codegen] call       *%rbx
[Codegen] .set .Llabel132586, .
[Codegen] .set .Llabel132586, .
[Codegen] .set .Lfrom132584, .Llabel132586
[Codegen] .set .Llabel132586, .
[Codegen] movq       0x18(%rbp), %rdx
[Codegen] andq       $0x3, %rdx
[Codegen] testq      %rdx, %rdx
[Codegen] je         .Lfrom132603
[Codegen] cmpq       $0x1, %rdx
[Codegen] je         .Lfrom132613
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel132631, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel132640, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel132649, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel132658, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel132667, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel132676, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel132685, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel132694, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel132700, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel132706, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel132712, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel132718, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel132724, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel132730, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel132736, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabb5761, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom132776
[Codegen] .set .Llabel132776, .
[Codegen] int3
[Codegen] .set .Llabel132777, .
[Codegen] .set .Lfrom132776, .Llabel132777
[Codegen] call       .Lfrom132782
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel132787, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel132796, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel132805, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel132814, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel132823, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel132832, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel132841, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel132850, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel132856, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel132862, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel132868, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel132874, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel132880, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel132886, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel132892, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel132916, .
[Codegen] .set .Lfrom132613, .Llabel132916
[Codegen] .set .Lfrom132603, .Llabel132916
[Codegen] .set .Llabel132916, .
[Codegen] movq       0x18(%rbp), %rdx
[Codegen] andq       $0xfffffffffffffffc, %rdx
[Codegen] .set .Llabel132924, .
[Codegen] movq       0x0(%rdx), %rbx
[Codegen] .set .Llabel132927, .
[Codegen] movq       0x0(%rbx), %rbx
[Codegen] .set .Llabel132930, .
[Codegen] movq       0x8(%rbx), %rbx
[Codegen] movabsq    $0x75bb8e73a2b8, %r11
[Codegen] .set .Llabel132944, .
[Codegen] movq       %rbx, 0x0(%r11)
[Codegen] .set .Llabel132947, .
[Codegen] .set .Lfrom132494, .Llabel132947
[Codegen] movq       %rcx, -0xc8(%rbp)
[Codegen] movq       %rsp, %rsi
[Codegen] movabsq    $0x75bb8e73a200, %rdx
[Codegen] push       $0xa
[Codegen] push       $0x0
[Codegen] push       %rbp
[Codegen] .set .Llabel132972, .
[Codegen] movq       0x140(%rdx), %rbx
[Codegen] .set .Llabel132979, .
[Codegen] movq       %rsp, 0x70(%rbx)
[Codegen] push       $0xc
[Codegen] movq       %rsi, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom132998
[Codegen] .set .Llabel132998, .
[Codegen] int3
[Codegen] .set .Llabel132999, .
[Codegen] .set .Lfrom132998, .Llabel132999
[Codegen] call       .Lfrom133004
[Codegen] .set .Llabel133004, .
[Codegen] .set .Lfrom132445, .Llabel133004
[Codegen] testl      %eax, %eax
[Codegen] je         .Llabel128832
[Codegen] addq       $32, %rsp
[Codegen] cmpl       $0x3, %eax
[Codegen] je         .Llabel132445
[Codegen] cmpl       $0x2, %eax
[Codegen] je         .Llabel132494
[Codegen] cmpl       $0x1, %eax
[Codegen] je         .Lfrom133043
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel133061, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel133070, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel133079, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel133088, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel133097, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel133106, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel133115, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel133124, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel133130, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel133136, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel133142, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel133148, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel133154, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel133160, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel133166, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabe58c9, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom133206
[Codegen] .set .Llabel133206, .
[Codegen] int3
[Codegen] .set .Llabel133207, .
[Codegen] .set .Lfrom133206, .Llabel133207
[Codegen] call       .Lfrom133212
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel133217, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel133226, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel133235, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel133244, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel133253, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel133262, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel133271, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel133280, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel133286, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel133292, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel133298, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel133304, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel133310, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel133316, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel133322, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel133346, .
[Codegen] .set .Lfrom133043, .Llabel133346
[Codegen] movq       -0xc8(%rbp), %rcx
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret
[Codegen] # END   creators: JitRuntime::generateArraySortTrampoline
[Codegen] .balign 8, 0xf4   # hlt
[Codegen] .set .Llabel133360, .
[Codegen] .set .Lfrom129200, .Llabel133360
[Codegen] .double nan
[Codegen] # BEGIN creators: Assembler::finish
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] # END   creators: Assembler::finish
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode
[Codegen] # Emitting Baseline IC fallback code
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=NewArray
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=NewArray/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel18, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel27, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel36, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel45, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel54, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel63, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel72, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel81, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel87, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel93, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel99, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel105, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel111, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel117, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel123, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom163
[Codegen] .set .Llabel163, .
[Codegen] int3
[Codegen] .set .Llabel164, .
[Codegen] .set .Lfrom163, .Llabel164
[Codegen] call       .Lfrom169
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel174, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel183, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel192, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel201, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel210, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel219, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel228, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel237, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel243, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel249, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel255, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel261, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel267, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel273, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel279, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel304, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=NewArray/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $16, %r11
[Codegen] .set .Llabel324, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom336
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=NewArray
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=NewObject
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=NewObject/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel354, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel363, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel372, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel381, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel390, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel399, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel408, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel417, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel423, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel429, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel435, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel441, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel447, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel453, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel459, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom499
[Codegen] .set .Llabel499, .
[Codegen] int3
[Codegen] .set .Llabel500, .
[Codegen] .set .Lfrom499, .Llabel500
[Codegen] call       .Lfrom505
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel510, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel519, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel528, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel537, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel546, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel555, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel564, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel573, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel579, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel585, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel591, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel597, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel603, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel609, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel615, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel640, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=NewObject/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $16, %r11
[Codegen] .set .Llabel660, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom672
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=NewObject
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=Lambda
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=Lambda/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel690, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel699, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel708, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel717, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel726, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel735, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel744, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel753, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel759, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel765, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel771, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel777, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel783, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel789, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel795, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom835
[Codegen] .set .Llabel835, .
[Codegen] int3
[Codegen] .set .Llabel836, .
[Codegen] .set .Lfrom835, .Llabel836
[Codegen] call       .Lfrom841
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel846, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel855, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel864, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel873, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel882, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel891, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel900, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel909, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel915, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel921, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel927, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel933, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel939, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel945, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel951, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel976, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=Lambda/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $16, %r11
[Codegen] .set .Llabel996, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom1008
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=Lambda
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=ToBool
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=ToBool/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel1026, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel1035, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel1044, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel1053, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel1062, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel1071, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel1080, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel1089, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel1095, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel1101, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel1107, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel1113, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel1119, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel1125, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel1131, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom1171
[Codegen] .set .Llabel1171, .
[Codegen] int3
[Codegen] .set .Llabel1172, .
[Codegen] .set .Lfrom1171, .Llabel1172
[Codegen] call       .Lfrom1177
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel1182, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel1191, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel1200, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel1209, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel1218, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel1227, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel1236, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel1245, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel1251, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel1257, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel1263, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel1269, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel1275, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel1281, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel1287, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel1312, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=ToBool/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rcx
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $24, %r11
[Codegen] .set .Llabel1333, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom1345
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=ToBool
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=UnaryArith
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=UnaryArith/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel1363, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel1372, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel1381, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel1390, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel1399, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel1408, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel1417, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel1426, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel1432, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel1438, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel1444, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel1450, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel1456, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel1462, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel1468, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom1508
[Codegen] .set .Llabel1508, .
[Codegen] int3
[Codegen] .set .Llabel1509, .
[Codegen] .set .Lfrom1508, .Llabel1509
[Codegen] call       .Lfrom1514
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel1519, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel1528, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel1537, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel1546, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel1555, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel1564, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel1573, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel1582, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel1588, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel1594, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel1600, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel1606, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel1612, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel1618, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel1624, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel1648, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=UnaryArith/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rcx
[Codegen] push       %rcx
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $24, %r11
[Codegen] .set .Llabel1670, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom1682
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=UnaryArith
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=Call
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=Call/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel1700, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel1709, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel1718, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel1727, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel1736, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel1745, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel1754, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel1763, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel1769, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel1775, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel1781, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel1787, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel1793, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel1799, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel1805, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom1845
[Codegen] .set .Llabel1845, .
[Codegen] int3
[Codegen] .set .Llabel1846, .
[Codegen] .set .Lfrom1845, .Llabel1846
[Codegen] call       .Lfrom1851
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel1856, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel1865, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel1874, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel1883, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel1892, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel1901, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel1910, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel1919, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel1925, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel1931, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel1937, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel1943, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel1949, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel1955, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel1961, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel2000, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=Call/startTrampolineCode
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $8, %r11
[Codegen] .set .Llabel2010, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       0x0(%rsp)
[Codegen] movq       $1, 0x8(%rsp)
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rax
[Codegen] push       0x18(%rax)
[Codegen] push       0x20(%rax)
[Codegen] testl      %ecx, %ecx
[Codegen] je         .Lfrom2048
[Codegen] addq       $40, %rax
[Codegen] movl       %ecx, %edx
[Codegen] .set .Llabel2054, .
[Codegen] push       0x0(%rax)
[Codegen] addq       $8, %rax
[Codegen] subl       $1, %edx
[Codegen] jne        .Llabel2054
[Codegen] .set .Llabel2065, .
[Codegen] .set .Lfrom2048, .Llabel2065
[Codegen] push       %rsp
[Codegen] push       %rcx
[Codegen] push       %rdi
[Codegen] .set .Llabel2068, .
[Codegen] movq       0x0(%rbp), %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] push       $0x2
[Codegen] call       .Lfrom2084
[Codegen] .set .Llabel2084, .
[Codegen] movq       -0x8(%rbp), %rdi
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] pop        0x0(%rsp)
[Codegen] ret
[Codegen] .set .Llabel2096, .
[Codegen] movq       0x10(%rsp), %rbx
[Codegen] .set .Llabel2101, .
[Codegen] movq       -0x8(%rbp), %rdi
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] pop        0x0(%rsp)
[Codegen] ret
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=Call
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=CallConstructing
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=CallConstructing/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel2131, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel2140, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel2149, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel2158, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel2167, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel2176, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel2185, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel2194, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel2200, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel2206, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel2212, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel2218, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel2224, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel2230, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel2236, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom2276
[Codegen] .set .Llabel2276, .
[Codegen] int3
[Codegen] .set .Llabel2277, .
[Codegen] .set .Lfrom2276, .Llabel2277
[Codegen] call       .Lfrom2282
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel2287, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel2296, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel2305, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel2314, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel2323, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel2332, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel2341, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel2350, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel2356, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel2362, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel2368, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel2374, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel2380, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel2386, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel2392, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel2416, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=CallConstructing/startTrampolineCode
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $8, %r11
[Codegen] .set .Llabel2426, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       0x0(%rsp)
[Codegen] movq       $1, 0x8(%rsp)
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rax
[Codegen] push       0x18(%rax)
[Codegen] push       0x20(%rax)
[Codegen] push       0x28(%rax)
[Codegen] testl      %ecx, %ecx
[Codegen] je         .Lfrom2467
[Codegen] addq       $48, %rax
[Codegen] movl       %ecx, %edx
[Codegen] .set .Llabel2473, .
[Codegen] push       0x0(%rax)
[Codegen] addq       $8, %rax
[Codegen] subl       $1, %edx
[Codegen] jne        .Llabel2473
[Codegen] .set .Llabel2484, .
[Codegen] .set .Lfrom2467, .Llabel2484
[Codegen] push       %rsp
[Codegen] push       %rcx
[Codegen] push       %rdi
[Codegen] .set .Llabel2487, .
[Codegen] movq       0x0(%rbp), %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] push       $0x2
[Codegen] call       .Lfrom2503
[Codegen] .set .Llabel2503, .
[Codegen] movq       -0x8(%rbp), %rdi
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] pop        0x0(%rsp)
[Codegen] ret
[Codegen] .set .Llabel2515, .
[Codegen] movq       0x10(%rsp), %rbx
[Codegen] .set .Llabel2520, .
[Codegen] movq       -0x8(%rbp), %rdi
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] pop        0x0(%rsp)
[Codegen] movq       %rcx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fffc, %r11d
[Codegen] je         .Lfrom2551
[Codegen] movq       %rbx, %rcx
[Codegen] movq       %rcx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fffc, %r11d
[Codegen] je         .Lfrom2574
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel2592, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel2601, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel2610, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel2619, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel2628, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel2637, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel2646, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel2655, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel2661, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel2667, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel2673, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel2679, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel2685, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel2691, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel2697, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabb1b75, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom2737
[Codegen] .set .Llabel2737, .
[Codegen] int3
[Codegen] .set .Llabel2738, .
[Codegen] .set .Lfrom2737, .Llabel2738
[Codegen] call       .Lfrom2743
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel2748, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel2757, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel2766, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel2775, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel2784, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel2793, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel2802, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel2811, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel2817, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel2823, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel2829, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel2835, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel2841, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel2847, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel2853, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel2877, .
[Codegen] .set .Lfrom2574, .Llabel2877
[Codegen] .set .Lfrom2551, .Llabel2877
[Codegen] ret
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=CallConstructing
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=SpreadCall
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=SpreadCall/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel2896, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel2905, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel2914, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel2923, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel2932, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel2941, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel2950, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel2959, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel2965, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel2971, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel2977, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel2983, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel2989, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel2995, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel3001, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom3041
[Codegen] .set .Llabel3041, .
[Codegen] int3
[Codegen] .set .Llabel3042, .
[Codegen] .set .Lfrom3041, .Llabel3042
[Codegen] call       .Lfrom3047
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel3052, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel3061, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel3070, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel3079, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel3088, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel3097, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel3106, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel3115, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel3121, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel3127, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel3133, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel3139, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel3145, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel3151, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel3157, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel3184, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=SpreadCall/startTrampolineCode
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $8, %r11
[Codegen] .set .Llabel3194, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       0x0(%rsp)
[Codegen] movq       $1, 0x8(%rsp)
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] push       %rdi
[Codegen] push       0x18(%rbp)
[Codegen] push       0x20(%rbp)
[Codegen] push       0x28(%rbp)
[Codegen] push       %rsp
[Codegen] push       %rdi
[Codegen] .set .Llabel3226, .
[Codegen] movq       0x0(%rbp), %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] push       $0x2
[Codegen] call       .Lfrom3242
[Codegen] .set .Llabel3242, .
[Codegen] movq       -0x8(%rbp), %rdi
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] pop        0x0(%rsp)
[Codegen] ret
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=SpreadCall
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=SpreadCallConstructing
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=SpreadCallConstructing/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel3272, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel3281, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel3290, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel3299, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel3308, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel3317, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel3326, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel3335, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel3341, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel3347, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel3353, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel3359, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel3365, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel3371, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel3377, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom3417
[Codegen] .set .Llabel3417, .
[Codegen] int3
[Codegen] .set .Llabel3418, .
[Codegen] .set .Lfrom3417, .Llabel3418
[Codegen] call       .Lfrom3423
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel3428, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel3437, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel3446, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel3455, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel3464, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel3473, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel3482, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel3491, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel3497, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel3503, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel3509, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel3515, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel3521, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel3527, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel3533, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel3568, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=SpreadCallConstructing/startTrampolineCode
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $8, %r11
[Codegen] .set .Llabel3578, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       0x0(%rsp)
[Codegen] movq       $1, 0x8(%rsp)
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] push       %rdi
[Codegen] push       0x18(%rbp)
[Codegen] push       0x20(%rbp)
[Codegen] push       0x28(%rbp)
[Codegen] push       0x30(%rbp)
[Codegen] push       %rsp
[Codegen] push       %rdi
[Codegen] .set .Llabel3613, .
[Codegen] movq       0x0(%rbp), %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] push       $0x2
[Codegen] call       .Lfrom3629
[Codegen] .set .Llabel3629, .
[Codegen] movq       -0x8(%rbp), %rdi
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] pop        0x0(%rsp)
[Codegen] ret
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=SpreadCallConstructing
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=GetElem
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=GetElem/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel3659, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel3668, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel3677, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel3686, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel3695, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel3704, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel3713, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel3722, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel3728, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel3734, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel3740, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel3746, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel3752, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel3758, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel3764, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom3804
[Codegen] .set .Llabel3804, .
[Codegen] int3
[Codegen] .set .Llabel3805, .
[Codegen] .set .Lfrom3804, .Llabel3805
[Codegen] call       .Lfrom3810
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel3815, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel3824, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel3833, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel3842, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel3851, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel3860, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel3869, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel3878, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel3884, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel3890, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel3896, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel3902, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel3908, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel3914, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel3920, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel3952, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=GetElem/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rcx
[Codegen] push       %rbx
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $32, %r11
[Codegen] .set .Llabel3976, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom3988
[Codegen] .set .Llabel3988, .
[Codegen] .set .Llabel3988, .
[Codegen] movq       -0x8(%rbp), %rdi
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] pop        0x0(%rsp)
[Codegen] ret
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=GetElem
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=GetElemSuper
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=GetElemSuper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel4018, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel4027, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel4036, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel4045, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel4054, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel4063, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel4072, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel4081, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel4087, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel4093, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel4099, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel4105, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel4111, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel4117, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel4123, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom4163
[Codegen] .set .Llabel4163, .
[Codegen] int3
[Codegen] .set .Llabel4164, .
[Codegen] .set .Lfrom4163, .Llabel4164
[Codegen] call       .Lfrom4169
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel4174, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel4183, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel4192, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel4201, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel4210, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel4219, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel4228, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel4237, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel4243, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel4249, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel4255, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel4261, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel4267, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel4273, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel4279, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel4304, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=GetElemSuper/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rcx
[Codegen] push       %rbx
[Codegen] push       0x10(%rsp)
[Codegen] push       %rcx
[Codegen] push       %rbx
[Codegen] push       0x28(%rsp)
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $40, %r11
[Codegen] .set .Llabel4336, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom4348
[Codegen] .set .Llabel4348, .
[Codegen] .set .Llabel4348, .
[Codegen] movq       -0x8(%rbp), %rdi
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] pop        0x0(%rsp)
[Codegen] ret
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=GetElemSuper
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=SetElem
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=SetElem/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel4378, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel4387, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel4396, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel4405, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel4414, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel4423, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel4432, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel4441, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel4447, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel4453, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel4459, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel4465, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel4471, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel4477, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel4483, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom4523
[Codegen] .set .Llabel4523, .
[Codegen] int3
[Codegen] .set .Llabel4524, .
[Codegen] .set .Lfrom4523, .Llabel4524
[Codegen] call       .Lfrom4529
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel4534, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel4543, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel4552, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel4561, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel4570, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel4579, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel4588, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel4597, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel4603, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel4609, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel4615, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel4621, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel4627, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel4633, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel4639, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel4672, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=SetElem/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rbx
[Codegen] movq       0x8(%rsp), %rbx
[Codegen] movq       %rcx, 0x8(%rsp)
[Codegen] push       %rbx
[Codegen] push       %rbx
[Codegen] movq       %rsp, %rbx
[Codegen] push       0x10(%rbx)
[Codegen] push       %rcx
[Codegen] leaq       0x18(%rsp), %rcx
[Codegen] push       %rcx
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $48, %r11
[Codegen] .set .Llabel4718, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom4730
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=SetElem
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=In
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=In/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel4748, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel4757, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel4766, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel4775, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel4784, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel4793, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel4802, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel4811, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel4817, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel4823, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel4829, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel4835, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel4841, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel4847, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel4853, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom4893
[Codegen] .set .Llabel4893, .
[Codegen] int3
[Codegen] .set .Llabel4894, .
[Codegen] .set .Lfrom4893, .Llabel4894
[Codegen] call       .Lfrom4899
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel4904, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel4913, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel4922, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel4931, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel4940, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel4949, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel4958, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel4967, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel4973, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel4979, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel4985, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel4991, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel4997, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel5003, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel5009, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel5040, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=In/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rcx
[Codegen] push       %rbx
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $32, %r11
[Codegen] .set .Llabel5064, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom5076
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=In
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=HasOwn
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=HasOwn/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel5094, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel5103, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel5112, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel5121, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel5130, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel5139, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel5148, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel5157, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel5163, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel5169, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel5175, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel5181, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel5187, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel5193, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel5199, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom5239
[Codegen] .set .Llabel5239, .
[Codegen] int3
[Codegen] .set .Llabel5240, .
[Codegen] .set .Lfrom5239, .Llabel5240
[Codegen] call       .Lfrom5245
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel5250, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel5259, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel5268, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel5277, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel5286, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel5295, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel5304, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel5313, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel5319, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel5325, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel5331, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel5337, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel5343, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel5349, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel5355, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel5392, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=HasOwn/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rcx
[Codegen] push       %rbx
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $32, %r11
[Codegen] .set .Llabel5416, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom5428
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=HasOwn
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=CheckPrivateField
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=CheckPrivateField/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel5446, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel5455, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel5464, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel5473, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel5482, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel5491, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel5500, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel5509, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel5515, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel5521, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel5527, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel5533, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel5539, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel5545, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel5551, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom5591
[Codegen] .set .Llabel5591, .
[Codegen] int3
[Codegen] .set .Llabel5592, .
[Codegen] .set .Lfrom5591, .Llabel5592
[Codegen] call       .Lfrom5597
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel5602, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel5611, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel5620, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel5629, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel5638, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel5647, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel5656, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel5665, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel5671, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel5677, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel5683, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel5689, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel5695, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel5701, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel5707, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel5744, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=CheckPrivateField/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rcx
[Codegen] push       %rbx
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $32, %r11
[Codegen] .set .Llabel5768, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom5780
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=CheckPrivateField
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=GetName
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=GetName/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel5798, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel5807, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel5816, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel5825, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel5834, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel5843, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel5852, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel5861, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel5867, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel5873, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel5879, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel5885, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel5891, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel5897, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel5903, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom5943
[Codegen] .set .Llabel5943, .
[Codegen] int3
[Codegen] .set .Llabel5944, .
[Codegen] .set .Lfrom5943, .Llabel5944
[Codegen] call       .Lfrom5949
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel5954, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel5963, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel5972, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel5981, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel5990, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel5999, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel6008, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel6017, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel6023, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel6029, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel6035, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel6041, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel6047, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel6053, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel6059, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel6096, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=GetName/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rcx
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $24, %r11
[Codegen] .set .Llabel6117, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom6129
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=GetName
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=BindName
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=BindName/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel6147, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel6156, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel6165, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel6174, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel6183, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel6192, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel6201, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel6210, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel6216, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel6222, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel6228, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel6234, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel6240, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel6246, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel6252, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom6292
[Codegen] .set .Llabel6292, .
[Codegen] int3
[Codegen] .set .Llabel6293, .
[Codegen] .set .Lfrom6292, .Llabel6293
[Codegen] call       .Lfrom6298
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel6303, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel6312, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel6321, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel6330, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel6339, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel6348, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel6357, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel6366, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel6372, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel6378, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel6384, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel6390, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel6396, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel6402, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel6408, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel6432, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=BindName/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rcx
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $24, %r11
[Codegen] .set .Llabel6453, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom6465
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=BindName
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=LazyConstant
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=LazyConstant/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel6483, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel6492, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel6501, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel6510, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel6519, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel6528, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel6537, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel6546, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel6552, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel6558, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel6564, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel6570, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel6576, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel6582, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel6588, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom6628
[Codegen] .set .Llabel6628, .
[Codegen] int3
[Codegen] .set .Llabel6629, .
[Codegen] .set .Lfrom6628, .Llabel6629
[Codegen] call       .Lfrom6634
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel6639, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel6648, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel6657, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel6666, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel6675, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel6684, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel6693, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel6702, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel6708, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel6714, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel6720, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel6726, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel6732, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel6738, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel6744, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel6768, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=LazyConstant/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $16, %r11
[Codegen] .set .Llabel6788, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom6800
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=LazyConstant
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=SetProp
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=SetProp/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel6818, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel6827, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel6836, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel6845, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel6854, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel6863, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel6872, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel6881, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel6887, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel6893, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel6899, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel6905, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel6911, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel6917, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel6923, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom6963
[Codegen] .set .Llabel6963, .
[Codegen] int3
[Codegen] .set .Llabel6964, .
[Codegen] .set .Lfrom6963, .Llabel6964
[Codegen] call       .Lfrom6969
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel6974, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel6983, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel6992, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel7001, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel7010, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel7019, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel7028, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel7037, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel7043, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel7049, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel7055, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel7061, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel7067, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel7073, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel7079, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel7104, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=SetProp/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] movq       %rcx, 0x0(%rsp)
[Codegen] push       %rbx
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] leaq       0x10(%rsp), %rcx
[Codegen] push       %rcx
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $40, %r11
[Codegen] .set .Llabel7137, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom7149
[Codegen] .set .Llabel7149, .
[Codegen] .set .Llabel7149, .
[Codegen] movq       -0x8(%rbp), %rdi
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] pop        0x0(%rsp)
[Codegen] ret
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=SetProp
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=GetIterator
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=GetIterator/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel7179, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel7188, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel7197, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel7206, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel7215, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel7224, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel7233, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel7242, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel7248, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel7254, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel7260, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel7266, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel7272, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel7278, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel7284, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom7324
[Codegen] .set .Llabel7324, .
[Codegen] int3
[Codegen] .set .Llabel7325, .
[Codegen] .set .Lfrom7324, .Llabel7325
[Codegen] call       .Lfrom7330
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel7335, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel7344, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel7353, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel7362, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel7371, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel7380, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel7389, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel7398, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel7404, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel7410, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel7416, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel7422, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel7428, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel7434, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel7440, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel7472, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=GetIterator/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rcx
[Codegen] push       %rcx
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $24, %r11
[Codegen] .set .Llabel7494, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom7506
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=GetIterator
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=OptimizeSpreadCall
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=OptimizeSpreadCall/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel7524, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel7533, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel7542, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel7551, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel7560, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel7569, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel7578, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel7587, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel7593, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel7599, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel7605, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel7611, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel7617, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel7623, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel7629, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom7669
[Codegen] .set .Llabel7669, .
[Codegen] int3
[Codegen] .set .Llabel7670, .
[Codegen] .set .Lfrom7669, .Llabel7670
[Codegen] call       .Lfrom7675
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel7680, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel7689, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel7698, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel7707, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel7716, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel7725, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel7734, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel7743, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel7749, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel7755, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel7761, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel7767, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel7773, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel7779, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel7785, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel7824, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=OptimizeSpreadCall/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rcx
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $24, %r11
[Codegen] .set .Llabel7845, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom7857
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=OptimizeSpreadCall
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=InstanceOf
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=InstanceOf/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel7875, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel7884, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel7893, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel7902, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel7911, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel7920, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel7929, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel7938, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel7944, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel7950, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel7956, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel7962, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel7968, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel7974, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel7980, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom8020
[Codegen] .set .Llabel8020, .
[Codegen] int3
[Codegen] .set .Llabel8021, .
[Codegen] .set .Lfrom8020, .Llabel8021
[Codegen] call       .Lfrom8026
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel8031, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel8040, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel8049, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel8058, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel8067, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel8076, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel8085, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel8094, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel8100, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel8106, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel8112, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel8118, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel8124, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel8130, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel8136, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel8160, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=InstanceOf/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rcx
[Codegen] push       %rbx
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $32, %r11
[Codegen] .set .Llabel8184, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom8196
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=InstanceOf
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=TypeOf
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=TypeOf/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel8214, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel8223, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel8232, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel8241, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel8250, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel8259, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel8268, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel8277, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel8283, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel8289, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel8295, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel8301, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel8307, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel8313, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel8319, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom8359
[Codegen] .set .Llabel8359, .
[Codegen] int3
[Codegen] .set .Llabel8360, .
[Codegen] .set .Lfrom8359, .Llabel8360
[Codegen] call       .Lfrom8365
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel8370, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel8379, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel8388, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel8397, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel8406, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel8415, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel8424, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel8433, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel8439, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel8445, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel8451, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel8457, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel8463, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel8469, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel8475, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel8512, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=TypeOf/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rcx
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $24, %r11
[Codegen] .set .Llabel8533, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom8545
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=TypeOf
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=TypeOfEq
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=TypeOfEq/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel8563, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel8572, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel8581, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel8590, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel8599, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel8608, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel8617, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel8626, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel8632, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel8638, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel8644, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel8650, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel8656, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel8662, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel8668, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom8708
[Codegen] .set .Llabel8708, .
[Codegen] int3
[Codegen] .set .Llabel8709, .
[Codegen] .set .Lfrom8708, .Llabel8709
[Codegen] call       .Lfrom8714
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel8719, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel8728, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel8737, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel8746, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel8755, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel8764, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel8773, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel8782, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel8788, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel8794, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel8800, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel8806, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel8812, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel8818, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel8824, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel8848, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=TypeOfEq/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rcx
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $24, %r11
[Codegen] .set .Llabel8869, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom8881
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=TypeOfEq
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=ToPropertyKey
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=ToPropertyKey/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel8899, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel8908, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel8917, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel8926, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel8935, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel8944, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel8953, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel8962, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel8968, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel8974, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel8980, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel8986, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel8992, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel8998, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel9004, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom9044
[Codegen] .set .Llabel9044, .
[Codegen] int3
[Codegen] .set .Llabel9045, .
[Codegen] .set .Lfrom9044, .Llabel9045
[Codegen] call       .Lfrom9050
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel9055, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel9064, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel9073, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel9082, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel9091, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel9100, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel9109, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel9118, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel9124, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel9130, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel9136, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel9142, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel9148, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel9154, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel9160, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel9184, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=ToPropertyKey/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rcx
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $24, %r11
[Codegen] .set .Llabel9205, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom9217
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=ToPropertyKey
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=Rest
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=Rest/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel9235, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel9244, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel9253, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel9262, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel9271, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel9280, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel9289, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel9298, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel9304, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel9310, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel9316, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel9322, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel9328, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel9334, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel9340, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom9380
[Codegen] .set .Llabel9380, .
[Codegen] int3
[Codegen] .set .Llabel9381, .
[Codegen] .set .Lfrom9380, .Llabel9381
[Codegen] call       .Lfrom9386
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel9391, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel9400, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel9409, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel9418, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel9427, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel9436, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel9445, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel9454, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel9460, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel9466, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel9472, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel9478, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel9484, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel9490, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel9496, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel9520, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=Rest/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $16, %r11
[Codegen] .set .Llabel9540, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom9552
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=Rest
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=BinaryArith
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=BinaryArith/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel9570, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel9579, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel9588, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel9597, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel9606, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel9615, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel9624, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel9633, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel9639, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel9645, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel9651, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel9657, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel9663, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel9669, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel9675, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom9715
[Codegen] .set .Llabel9715, .
[Codegen] int3
[Codegen] .set .Llabel9716, .
[Codegen] .set .Lfrom9715, .Llabel9716
[Codegen] call       .Lfrom9721
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel9726, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel9735, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel9744, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel9753, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel9762, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel9771, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel9780, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel9789, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel9795, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel9801, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel9807, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel9813, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel9819, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel9825, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel9831, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel9856, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=BinaryArith/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rcx
[Codegen] push       %rbx
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $32, %r11
[Codegen] .set .Llabel9880, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom9892
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=BinaryArith
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=Compare
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=Compare/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel9910, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel9919, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel9928, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel9937, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel9946, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel9955, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel9964, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel9973, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel9979, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel9985, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel9991, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel9997, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel10003, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel10009, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel10015, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom10055
[Codegen] .set .Llabel10055, .
[Codegen] int3
[Codegen] .set .Llabel10056, .
[Codegen] .set .Lfrom10055, .Llabel10056
[Codegen] call       .Lfrom10061
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel10066, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel10075, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel10084, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel10093, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel10102, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel10111, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel10120, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel10129, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel10135, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel10141, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel10147, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel10153, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel10159, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel10165, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel10171, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel10208, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=Compare/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rcx
[Codegen] push       %rbx
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $32, %r11
[Codegen] .set .Llabel10232, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom10244
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=Compare
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=GetProp
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=GetProp/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel10262, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel10271, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel10280, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel10289, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel10298, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel10307, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel10316, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel10325, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel10331, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel10337, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel10343, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel10349, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel10355, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel10361, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel10367, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom10407
[Codegen] .set .Llabel10407, .
[Codegen] int3
[Codegen] .set .Llabel10408, .
[Codegen] .set .Lfrom10407, .Llabel10408
[Codegen] call       .Lfrom10413
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel10418, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel10427, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel10436, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel10445, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel10454, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel10463, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel10472, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel10481, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel10487, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel10493, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel10499, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel10505, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel10511, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel10517, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel10523, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel10560, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=GetProp/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rcx
[Codegen] push       %rcx
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $24, %r11
[Codegen] .set .Llabel10582, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom10594
[Codegen] .set .Llabel10594, .
[Codegen] .set .Llabel10594, .
[Codegen] movq       -0x8(%rbp), %rdi
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] pop        0x0(%rsp)
[Codegen] ret
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=GetProp
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=GetPropSuper
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=GetPropSuper/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel10624, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel10633, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel10642, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel10651, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel10660, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel10669, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel10678, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel10687, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel10693, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel10699, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel10705, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel10711, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel10717, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel10723, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel10729, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom10769
[Codegen] .set .Llabel10769, .
[Codegen] int3
[Codegen] .set .Llabel10770, .
[Codegen] .set .Lfrom10769, .Llabel10770
[Codegen] call       .Lfrom10775
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel10780, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel10789, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel10798, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel10807, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel10816, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel10825, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel10834, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel10843, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel10849, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel10855, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel10861, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel10867, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel10873, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel10879, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel10885, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel10912, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=GetPropSuper/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rcx
[Codegen] push       %rbx
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $32, %r11
[Codegen] .set .Llabel10934, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom10946
[Codegen] .set .Llabel10946, .
[Codegen] .set .Llabel10946, .
[Codegen] movq       -0x8(%rbp), %rdi
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] pop        0x0(%rsp)
[Codegen] ret
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=GetPropSuper
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=CloseIter
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=CloseIter/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel10976, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel10985, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel10994, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel11003, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel11012, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel11021, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel11030, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel11039, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel11045, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel11051, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel11057, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel11063, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel11069, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel11075, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel11081, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom11121
[Codegen] .set .Llabel11121, .
[Codegen] int3
[Codegen] .set .Llabel11122, .
[Codegen] .set .Lfrom11121, .Llabel11122
[Codegen] call       .Lfrom11127
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel11132, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel11141, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel11150, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel11159, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel11168, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel11177, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel11186, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel11195, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel11201, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel11207, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel11213, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel11219, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel11225, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel11231, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel11237, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel11264, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=CloseIter/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rcx
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $24, %r11
[Codegen] .set .Llabel11285, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom11297
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=CloseIter
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=OptimizeGetIterator
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=OptimizeGetIterator/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel11315, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel11324, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel11333, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel11342, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel11351, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel11360, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel11369, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel11378, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel11384, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel11390, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel11396, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel11402, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel11408, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel11414, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel11420, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom11460
[Codegen] .set .Llabel11460, .
[Codegen] int3
[Codegen] .set .Llabel11461, .
[Codegen] .set .Lfrom11460, .Llabel11461
[Codegen] call       .Lfrom11466
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel11471, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel11480, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel11489, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel11498, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel11507, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel11516, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel11525, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel11534, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel11540, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel11546, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel11552, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel11558, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel11564, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel11570, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel11576, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel11600, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=OptimizeGetIterator/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rcx
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $24, %r11
[Codegen] .set .Llabel11621, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom11633
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=OptimizeGetIterator
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=GetImport
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/kind=GetImport/startTrampolineCode
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel11651, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel11660, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel11669, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel11678, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel11687, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel11696, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel11705, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel11714, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel11720, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel11726, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel11732, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel11738, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel11744, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel11750, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel11756, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac50820, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom11796
[Codegen] .set .Llabel11796, .
[Codegen] int3
[Codegen] .set .Llabel11797, .
[Codegen] .set .Lfrom11796, .Llabel11797
[Codegen] call       .Lfrom11802
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel11807, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel11816, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel11825, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel11834, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel11843, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel11852, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel11861, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel11870, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel11876, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel11882, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel11888, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel11894, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel11900, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel11906, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel11912, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] .set .Llabel11936, .
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=GetImport/startTrampolineCode
[Codegen] pop        %rsi
[Codegen] push       %rdi
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $16, %r11
[Codegen] .set .Llabel11956, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] push       %rsi
[Codegen] jmp        .Lfrom11968
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/kind=GetImport
[Codegen] # BEGIN creators: JitRuntime::generateBaselineICFallbackCode/Assembler::finish
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode/Assembler::finish
[Codegen] # END   creators: JitRuntime::generateBaselineICFallbackCode
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate
[Codegen] # BEGIN creators: JitRuntime::generateDebugTrapHandler
[Codegen] .set .Llabel0, .
[Codegen] movq       -0x48(%rbp), %rax
[Codegen] testl      $0x800, 0x3c(%rax)
[Codegen] jne        .Lfrom17
[Codegen] ret
[Codegen] .set .Llabel18, .
[Codegen] .set .Lfrom17, .Llabel18
[Codegen] .set .Llabel18, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel22, .
[Codegen] movq       0x0(%rsp), %rax
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] movl       $0x0, %edi
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $8, %r11
[Codegen] .set .Llabel48, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       0x0(%rsp)
[Codegen] movq       $1, 0x8(%rsp)
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] push       %rdi
[Codegen] push       %rax
[Codegen] push       %rcx
[Codegen] push       $0x2
[Codegen] call       .Lfrom78
[Codegen] .set .Llabel78, .
[Codegen] movq       -0x8(%rbp), %rdi
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] pop        0x0(%rsp)
[Codegen] .set .Llabel89, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] ret
[Codegen] # BEGIN creators: JitRuntime::generateDebugTrapHandler/Assembler::finish
[Codegen] ud2
[Codegen] # END   creators: JitRuntime::generateDebugTrapHandler/Assembler::finish
[Codegen] # END   creators: JitRuntime::generateDebugTrapHandler
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineCodeGen<Handler>::emitPrologue
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] jmp        .Lfrom9
[Codegen] movabsq    $0x75bb8e73a200, %rcx
[Codegen] .set .Llabel19, .
[Codegen] movq       0x150(%rcx), %rcx
[Codegen] .set .Llabel26, .
[Codegen] movq       %rbp, 0xe0(%rcx)
[Codegen] movq       $0, 0xe8(%rcx)
[Codegen] .set .Llabel44, .
[Codegen] .set .Lfrom9, .Llabel44
[Codegen] subq       $72, %rsp
[Codegen] .set .Llabel48, .
[Codegen] movl       $0x2, -0x10(%rbp)
[Codegen] .set .Llabel55, .
[Codegen] movq       0x18(%rbp), %r14
[Codegen] testb      $0x2, %r14b
[Codegen] jne        .Lfrom69
[Codegen] andq       $0xfffffffffffffffc, %r14
[Codegen] movabsq    $0xfffe000000000000, %rax
[Codegen] xorq       0x20(%r14), %rax
[Codegen] .set .Llabel87, .
[Codegen] movq       %rax, -0x30(%rbp)
[Codegen] .set .Llabel91, .
[Codegen] movq       0x28(%r14), %r14
[Codegen] jmp        .Lfrom100
[Codegen] .set .Llabel100, .
[Codegen] .set .Lfrom69, .Llabel100
[Codegen] andq       $0xfffffffffffffffc, %r14
[Codegen] .set .Llabel104, .
[Codegen] movq       %rbx, -0x30(%rbp)
[Codegen] .set .Llabel108, .
[Codegen] .set .Lfrom100, .Llabel108
[Codegen] .set .Llabel108, .
[Codegen] movq       %r14, -0x48(%rbp)
[Codegen] testq      $0x3, 0x8(%r14)
[Codegen] je         .Lfrom126
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel144, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel153, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel162, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel171, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel180, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel189, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel198, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel207, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel213, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel219, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel225, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel231, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel237, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel243, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel249, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabb5936, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom289
[Codegen] .set .Llabel289, .
[Codegen] int3
[Codegen] .set .Llabel290, .
[Codegen] .set .Lfrom289, .Llabel290
[Codegen] call       .Lfrom295
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel300, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel309, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel318, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel327, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel336, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel345, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel354, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel363, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel369, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel375, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel381, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel387, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel393, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel399, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel405, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel429, .
[Codegen] .set .Lfrom126, .Llabel429
[Codegen] .set .Llabel429, .
[Codegen] movq       0x8(%r14), %rax
[Codegen] leaq       0x68(%rax), %rax
[Codegen] .set .Llabel437, .
[Codegen] movq       %rax, -0x28(%rbp)
[Codegen] leaq       0xc0(%rax), %rax
[Codegen] .set .Llabel448, .
[Codegen] movq       %rax, -0x38(%rbp)
[Codegen] .set .Llabel452, .
[Codegen] movq       0x48(%r14), %r14
[Codegen] .set .Llabel456, .
[Codegen] movq       0x8(%r14), %r14
[Codegen] addq       $33, %r14
[Codegen] jmp        .Lfrom469
[Codegen] .set .Llabel469, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rsp, %rcx
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rcx
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] subq       $8, %rsp
[Codegen] movq       %rcx, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom505
[Codegen] .set .Llabel505, .
[Codegen] int3
[Codegen] .set .Llabel506, .
[Codegen] .set .Lfrom505, .Llabel506
[Codegen] push       %rax
[Codegen] movabsq    $0x75bb8e73a200, %rax
[Codegen] .set .Llabel517, .
[Codegen] movl       $0x1, 0x180(%rax)
[Codegen] pop        %rax
[Codegen] call       .Lfrom533
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x75bb8e73a200, %rax
[Codegen] cmpl       $0x0, 0x180(%rax)
[Codegen] je         .Lfrom562
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel580, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel589, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel598, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel607, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel616, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel625, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel634, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel643, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel649, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel655, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel661, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel667, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel673, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel679, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel685, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edaca656f, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom725
[Codegen] .set .Llabel725, .
[Codegen] int3
[Codegen] .set .Llabel726, .
[Codegen] .set .Lfrom725, .Llabel726
[Codegen] call       .Lfrom731
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel736, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel745, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel754, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel763, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel772, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel781, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel790, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel799, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel805, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel811, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel817, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel823, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel829, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel835, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel841, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel865, .
[Codegen] .set .Lfrom562, .Llabel865
[Codegen] pop        %rax
[Codegen] .set .Llabel866, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel870, .
[Codegen] .set .Lfrom469, .Llabel870
[Codegen] testq      $0x2, 0x18(%rbp)
[Codegen] jne        .Lfrom884
[Codegen] .set .Llabel884, .
[Codegen] movq       -0x48(%rbp), %rax
[Codegen] testl      $0x800000, 0x38(%rax)
[Codegen] je         .Lfrom901
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel909, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel913, .
[Codegen] movl       $0x48, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom927
[Codegen] .set .Llabel927, .
[Codegen] .set .Llabel927, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel931, .
[Codegen] .set .Lfrom901, .Llabel931
[Codegen] .set .Llabel931, .
[Codegen] .set .Lfrom884, .Llabel931
[Codegen] movq       %rsp, %rbx
[Codegen] .set .Llabel934, .
[Codegen] movq       -0x48(%rbp), %rax
[Codegen] .set .Llabel938, .
[Codegen] movq       0x48(%rax), %rax
[Codegen] .set .Llabel942, .
[Codegen] movq       0x8(%rax), %rax
[Codegen] .set .Llabel946, .
[Codegen] movl       0x10(%rax), %eax
[Codegen] shlq       $3, %rax
[Codegen] subq       %rax, %rbx
[Codegen] movabsq    $0x75bb8e73ae30, %r11
[Codegen] cmpq       %rbx, 0x0(%r11)
[Codegen] jbe        .Lfrom975
[Codegen] movq       %rbp, %rbx
[Codegen] subq       $72, %rbx
[Codegen] push       %rbx
[Codegen] .set .Llabel983, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel987, .
[Codegen] movl       $0x48, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom1001
[Codegen] .set .Llabel1001, .
[Codegen] .set .Llabel1001, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel1005, .
[Codegen] .set .Lfrom975, .Llabel1005
[Codegen] .set .Llabel1005, .
[Codegen] movq       -0x48(%rbp), %rcx
[Codegen] .set .Llabel1009, .
[Codegen] movq       0x48(%rcx), %rcx
[Codegen] .set .Llabel1013, .
[Codegen] movq       0x8(%rcx), %rcx
[Codegen] .set .Llabel1017, .
[Codegen] movl       0xc(%rcx), %ecx
[Codegen] testl      %ecx, %ecx
[Codegen] je         .Lfrom1028
[Codegen] .set .Llabel1028, .
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] subl       $1, %ecx
[Codegen] jne        .Llabel1028
[Codegen] .set .Llabel1045, .
[Codegen] .set .Lfrom1028, .Llabel1045
[Codegen] .set .Llabel1045, .
[Codegen] jmp        .Lfrom1050
[Codegen] testl      $0x40, -0x10(%rbp)
[Codegen] je         .Lfrom1063
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel1071, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel1084, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom1094
[Codegen] .set .Llabel1094, .
[Codegen] .set .Llabel1094, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel1098, .
[Codegen] .set .Lfrom1063, .Llabel1098
[Codegen] .set .Lfrom1050, .Llabel1098
[Codegen] .set .Llabel1098, .
[Codegen] jmp        .Lfrom1103
[Codegen] call       .Lfrom1108
[Codegen] .set .Llabel1108, .
[Codegen] .set .Lfrom1103, .Llabel1108
[Codegen] .set .Llabel1108, .
[Codegen] movq       -0x48(%rbp), %rax
[Codegen] testq      $0x3, 0x8(%rax)
[Codegen] je         .Lfrom1126
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel1144, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel1153, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel1162, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel1171, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel1180, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel1189, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel1198, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel1207, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel1213, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel1219, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel1225, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel1231, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel1237, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel1243, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel1249, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabb5936, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom1289
[Codegen] .set .Llabel1289, .
[Codegen] int3
[Codegen] .set .Llabel1290, .
[Codegen] .set .Lfrom1289, .Llabel1290
[Codegen] call       .Lfrom1295
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel1300, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel1309, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel1318, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel1327, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel1336, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel1345, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel1354, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel1363, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel1369, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel1375, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel1381, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel1387, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel1393, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel1399, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel1405, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel1429, .
[Codegen] .set .Lfrom1126, .Llabel1429
[Codegen] .set .Llabel1429, .
[Codegen] movq       0x8(%rax), %rax
[Codegen] .set .Llabel1433, .
[Codegen] movl       0x110(%rax), %ecx
[Codegen] addl       $1, %ecx
[Codegen] .set .Llabel1442, .
[Codegen] movl       %ecx, 0x110(%rax)
[Codegen] testl      %ecx, %ecx
[Codegen] jbe        .Lfrom1456
[Codegen] testq      $0x1, 0x28(%rax)
[Codegen] jne        .Lfrom1470
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel1478, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel1491, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom1501
[Codegen] .set .Llabel1501, .
[Codegen] .set .Llabel1501, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom1514
[Codegen] jmp        *%rax
[Codegen] .set .Llabel1516, .
[Codegen] .set .Lfrom1514, .Llabel1516
[Codegen] .set .Lfrom1470, .Llabel1516
[Codegen] .set .Lfrom1456, .Llabel1516
[Codegen] .set .Llabel1516, .
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineCodeGen<Handler>::emitPrologue
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop
[Codegen] .set .Llabel1516, .
[Codegen] .set .Llabel1521, .
[Codegen] .set .Llabel1521, .
[Codegen] .set .Llabel1521, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom1532(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Undefined
[Codegen] .set .Llabel1535, .
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel1556, .
[Codegen] .set .Llabel1556, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom1567(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Undefined
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Null
[Codegen] .set .Llabel1570, .
[Codegen] movabsq    $0xfffa000000000000, %r11
[Codegen] push       %r11
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel1591, .
[Codegen] .set .Llabel1591, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom1602(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Null
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=False
[Codegen] .set .Llabel1605, .
[Codegen] movabsq    $0xfff9000000000000, %r11
[Codegen] push       %r11
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel1626, .
[Codegen] .set .Llabel1626, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom1637(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=False
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=True
[Codegen] .set .Llabel1640, .
[Codegen] movabsq    $0xfff9000000000001, %r11
[Codegen] push       %r11
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel1661, .
[Codegen] .set .Llabel1661, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom1672(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=True
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Int32
[Codegen] .set .Llabel1675, .
[Codegen] .set .Llabel1675, .
[Codegen] movl       0x1(%r14), %ecx
[Codegen] movabsq    $0xfff8800000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] push       %rcx
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel1702, .
[Codegen] .set .Llabel1702, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom1713(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Int32
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Zero
[Codegen] .set .Llabel1716, .
[Codegen] movabsq    $0xfff8800000000000, %r11
[Codegen] push       %r11
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel1737, .
[Codegen] .set .Llabel1737, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom1748(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Zero
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=One
[Codegen] .set .Llabel1751, .
[Codegen] movabsq    $0xfff8800000000001, %r11
[Codegen] push       %r11
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel1772, .
[Codegen] .set .Llabel1772, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom1783(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=One
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Int8
[Codegen] .set .Llabel1786, .
[Codegen] .set .Llabel1786, .
[Codegen] movsbl     0x1(%r14), %ecx
[Codegen] movabsq    $0xfff8800000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] push       %rcx
[Codegen] addq       $2, %r14
[Codegen] .set .Llabel1814, .
[Codegen] .set .Llabel1814, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom1825(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Int8
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Uint16
[Codegen] .set .Llabel1828, .
[Codegen] .set .Llabel1828, .
[Codegen] movzwl     0x1(%r14), %ecx
[Codegen] movabsq    $0xfff8800000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] push       %rcx
[Codegen] addq       $3, %r14
[Codegen] .set .Llabel1856, .
[Codegen] .set .Llabel1856, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom1867(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Uint16
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Uint24
[Codegen] .set .Llabel1870, .
[Codegen] .set .Llabel1870, .
[Codegen] movl       0x0(%r14), %ecx
[Codegen] shrl       $8, %ecx
[Codegen] movabsq    $0xfff8800000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] push       %rcx
[Codegen] addq       $4, %r14
[Codegen] .set .Llabel1899, .
[Codegen] .set .Llabel1899, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom1910(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Uint24
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Double
[Codegen] .set .Llabel1913, .
[Codegen] movq       0x1(%r14), %rcx
[Codegen] push       %rcx
[Codegen] addq       $9, %r14
[Codegen] .set .Llabel1927, .
[Codegen] .set .Llabel1927, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom1938(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Double
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=BigInt
[Codegen] .set .Llabel1941, .
[Codegen] .set .Llabel1941, .
[Codegen] movl       0x1(%r14), %ebx
[Codegen] .set .Llabel1945, .
[Codegen] movq       -0x48(%rbp), %rcx
[Codegen] .set .Llabel1949, .
[Codegen] movq       0x40(%rcx), %rcx
[Codegen] .set .Llabel1953, .
[Codegen] movq       0x10(%rcx,%rbx,8), %rcx
[Codegen] xorq       $0x1, %rcx
[Codegen] testb      $0x7, %cl
[Codegen] je         .Lfrom1971
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel1989, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel1998, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel2007, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel2016, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel2025, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel2034, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel2043, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel2052, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel2058, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel2064, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel2070, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel2076, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel2082, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel2088, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel2094, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabae9e7, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom2134
[Codegen] .set .Llabel2134, .
[Codegen] int3
[Codegen] .set .Llabel2135, .
[Codegen] .set .Lfrom2134, .Llabel2135
[Codegen] call       .Lfrom2140
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel2145, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel2154, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel2163, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel2172, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel2181, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel2190, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel2199, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel2208, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel2214, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel2220, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel2226, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel2232, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel2238, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel2244, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel2250, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel2274, .
[Codegen] .set .Lfrom1971, .Llabel2274
[Codegen] movabsq    $0xfffc800000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] push       %rcx
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel2297, .
[Codegen] .set .Llabel2297, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom2308(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=BigInt
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=String
[Codegen] .set .Llabel2311, .
[Codegen] .set .Llabel2311, .
[Codegen] movl       0x1(%r14), %ebx
[Codegen] .set .Llabel2315, .
[Codegen] movq       -0x48(%rbp), %rcx
[Codegen] .set .Llabel2319, .
[Codegen] movq       0x40(%rcx), %rcx
[Codegen] .set .Llabel2323, .
[Codegen] movq       0x10(%rcx,%rbx,8), %rcx
[Codegen] xorq       $0x2, %rcx
[Codegen] testb      $0x7, %cl
[Codegen] je         .Lfrom2341
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel2359, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel2368, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel2377, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel2386, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel2395, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel2404, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel2413, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel2422, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel2428, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel2434, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel2440, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel2446, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel2452, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel2458, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel2464, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabae9e7, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom2504
[Codegen] .set .Llabel2504, .
[Codegen] int3
[Codegen] .set .Llabel2505, .
[Codegen] .set .Lfrom2504, .Llabel2505
[Codegen] call       .Lfrom2510
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel2515, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel2524, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel2533, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel2542, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel2551, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel2560, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel2569, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel2578, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel2584, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel2590, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel2596, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel2602, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel2608, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel2614, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel2620, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel2644, .
[Codegen] .set .Lfrom2341, .Llabel2644
[Codegen] movabsq    $0xfffb000000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] push       %rcx
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel2667, .
[Codegen] .set .Llabel2667, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom2678(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=String
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Symbol
[Codegen] .set .Llabel2681, .
[Codegen] .set .Llabel2681, .
[Codegen] movzbl     0x1(%r14), %ecx
[Codegen] movabsq    $0x75bb8e70d780, %rbx
[Codegen] .set .Llabel2696, .
[Codegen] movq       0x0(%rbx,%rcx,8), %rcx
[Codegen] movabsq    $0xfffb800000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] push       %rcx
[Codegen] addq       $2, %r14
[Codegen] .set .Llabel2723, .
[Codegen] .set .Llabel2723, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom2734(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Symbol
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Void
[Codegen] .set .Llabel2737, .
[Codegen] addq       $8, %rsp
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel2762, .
[Codegen] .set .Llabel2762, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom2773(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Void
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Typeof
[Codegen] .set .Llabel2776, .
[Codegen] pop        %rcx
[Codegen] .set .Llabel2777, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel2781, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel2785, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel2790, .
[Codegen] .set .Llabel2790, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel2809, .
[Codegen] .set .Llabel2809, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom2820(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Typeof
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=TypeofExpr
[Codegen] .set .Llabel2823, .
[Codegen] pop        %rcx
[Codegen] .set .Llabel2824, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel2828, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel2832, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel2837, .
[Codegen] .set .Llabel2837, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel2856, .
[Codegen] .set .Llabel2856, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom2867(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=TypeofExpr
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=TypeofEq
[Codegen] .set .Llabel2870, .
[Codegen] pop        %rcx
[Codegen] .set .Llabel2871, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel2875, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel2879, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel2884, .
[Codegen] .set .Llabel2884, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $2, %r14
[Codegen] .set .Llabel2903, .
[Codegen] .set .Llabel2903, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom2914(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=TypeofEq
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Pos
[Codegen] .set .Llabel2917, .
[Codegen] pop        %rcx
[Codegen] .set .Llabel2918, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel2922, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel2926, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel2931, .
[Codegen] .set .Llabel2931, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel2950, .
[Codegen] .set .Llabel2950, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom2961(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Pos
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Neg
[Codegen] .set .Llabel2964, .
[Codegen] pop        %rcx
[Codegen] .set .Llabel2965, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel2969, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel2973, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel2978, .
[Codegen] .set .Llabel2978, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel2997, .
[Codegen] .set .Llabel2997, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom3008(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Neg
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=BitNot
[Codegen] .set .Llabel3011, .
[Codegen] pop        %rcx
[Codegen] .set .Llabel3012, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel3016, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel3020, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel3025, .
[Codegen] .set .Llabel3025, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel3044, .
[Codegen] .set .Llabel3044, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom3055(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=BitNot
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Not
[Codegen] .set .Llabel3058, .
[Codegen] pop        %rcx
[Codegen] .set .Llabel3059, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel3063, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel3067, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel3072, .
[Codegen] .set .Llabel3072, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] xorq       $0x1, %rcx
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel3095, .
[Codegen] .set .Llabel3095, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom3106(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Not
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=BitOr
[Codegen] .set .Llabel3109, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] .set .Llabel3111, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel3115, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel3119, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel3124, .
[Codegen] .set .Llabel3124, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel3143, .
[Codegen] .set .Llabel3143, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom3154(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=BitOr
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=BitXor
[Codegen] .set .Llabel3157, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] .set .Llabel3159, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel3163, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel3167, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel3172, .
[Codegen] .set .Llabel3172, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel3191, .
[Codegen] .set .Llabel3191, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom3202(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=BitXor
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=BitAnd
[Codegen] .set .Llabel3205, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] .set .Llabel3207, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel3211, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel3215, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel3220, .
[Codegen] .set .Llabel3220, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel3239, .
[Codegen] .set .Llabel3239, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom3250(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=BitAnd
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Eq
[Codegen] .set .Llabel3253, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] .set .Llabel3255, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel3259, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel3263, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel3268, .
[Codegen] .set .Llabel3268, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel3287, .
[Codegen] .set .Llabel3287, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom3298(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Eq
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Ne
[Codegen] .set .Llabel3301, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] .set .Llabel3303, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel3307, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel3311, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel3316, .
[Codegen] .set .Llabel3316, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel3335, .
[Codegen] .set .Llabel3335, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom3346(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Ne
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=StrictEq
[Codegen] .set .Llabel3349, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] .set .Llabel3351, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel3355, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel3359, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel3364, .
[Codegen] .set .Llabel3364, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel3383, .
[Codegen] .set .Llabel3383, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom3394(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=StrictEq
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=StrictNe
[Codegen] .set .Llabel3397, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] .set .Llabel3399, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel3403, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel3407, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel3412, .
[Codegen] .set .Llabel3412, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel3431, .
[Codegen] .set .Llabel3431, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom3442(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=StrictNe
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Lt
[Codegen] .set .Llabel3445, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] .set .Llabel3447, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel3451, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel3455, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel3460, .
[Codegen] .set .Llabel3460, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel3479, .
[Codegen] .set .Llabel3479, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom3490(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Lt
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Gt
[Codegen] .set .Llabel3493, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] .set .Llabel3495, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel3499, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel3503, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel3508, .
[Codegen] .set .Llabel3508, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel3527, .
[Codegen] .set .Llabel3527, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom3538(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Gt
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Le
[Codegen] .set .Llabel3541, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] .set .Llabel3543, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel3547, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel3551, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel3556, .
[Codegen] .set .Llabel3556, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel3575, .
[Codegen] .set .Llabel3575, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom3586(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Le
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Ge
[Codegen] .set .Llabel3589, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] .set .Llabel3591, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel3595, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel3599, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel3604, .
[Codegen] .set .Llabel3604, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel3623, .
[Codegen] .set .Llabel3623, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom3634(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Ge
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Instanceof
[Codegen] .set .Llabel3637, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] .set .Llabel3639, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel3643, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel3647, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel3652, .
[Codegen] .set .Llabel3652, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel3671, .
[Codegen] .set .Llabel3671, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom3682(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Instanceof
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=In
[Codegen] .set .Llabel3685, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] .set .Llabel3687, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel3691, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel3695, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel3700, .
[Codegen] .set .Llabel3700, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel3719, .
[Codegen] .set .Llabel3719, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom3730(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=In
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Lsh
[Codegen] .set .Llabel3733, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] .set .Llabel3735, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel3739, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel3743, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel3748, .
[Codegen] .set .Llabel3748, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel3767, .
[Codegen] .set .Llabel3767, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom3778(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Lsh
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Rsh
[Codegen] .set .Llabel3781, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] .set .Llabel3783, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel3787, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel3791, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel3796, .
[Codegen] .set .Llabel3796, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel3815, .
[Codegen] .set .Llabel3815, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom3826(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Rsh
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Ursh
[Codegen] .set .Llabel3829, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] .set .Llabel3831, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel3835, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel3839, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel3844, .
[Codegen] .set .Llabel3844, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel3863, .
[Codegen] .set .Llabel3863, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom3874(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Ursh
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Add
[Codegen] .set .Llabel3877, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] .set .Llabel3879, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel3883, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel3887, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel3892, .
[Codegen] .set .Llabel3892, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel3911, .
[Codegen] .set .Llabel3911, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom3922(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Add
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Sub
[Codegen] .set .Llabel3925, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] .set .Llabel3927, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel3931, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel3935, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel3940, .
[Codegen] .set .Llabel3940, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel3959, .
[Codegen] .set .Llabel3959, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom3970(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Sub
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Inc
[Codegen] .set .Llabel3973, .
[Codegen] pop        %rcx
[Codegen] .set .Llabel3974, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel3978, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel3982, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel3987, .
[Codegen] .set .Llabel3987, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel4006, .
[Codegen] .set .Llabel4006, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom4017(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Inc
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Dec
[Codegen] .set .Llabel4020, .
[Codegen] pop        %rcx
[Codegen] .set .Llabel4021, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel4025, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel4029, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel4034, .
[Codegen] .set .Llabel4034, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel4053, .
[Codegen] .set .Llabel4053, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom4064(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Dec
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Mul
[Codegen] .set .Llabel4067, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] .set .Llabel4069, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel4073, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel4077, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel4082, .
[Codegen] .set .Llabel4082, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel4101, .
[Codegen] .set .Llabel4101, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom4112(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Mul
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Div
[Codegen] .set .Llabel4115, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] .set .Llabel4117, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel4121, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel4125, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel4130, .
[Codegen] .set .Llabel4130, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel4149, .
[Codegen] .set .Llabel4149, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom4160(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Div
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Mod
[Codegen] .set .Llabel4163, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] .set .Llabel4165, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel4169, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel4173, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel4178, .
[Codegen] .set .Llabel4178, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel4197, .
[Codegen] .set .Llabel4197, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom4208(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Mod
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Pow
[Codegen] .set .Llabel4211, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] .set .Llabel4213, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel4217, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel4221, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel4226, .
[Codegen] .set .Llabel4226, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel4245, .
[Codegen] .set .Llabel4245, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom4256(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Pow
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=NopIsAssignOp
[Codegen] .set .Llabel4259, .
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel4268, .
[Codegen] .set .Llabel4268, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom4279(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=NopIsAssignOp
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ToPropertyKey
[Codegen] .set .Llabel4282, .
[Codegen] pop        %rcx
[Codegen] .set .Llabel4283, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel4287, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel4291, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel4296, .
[Codegen] .set .Llabel4296, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel4315, .
[Codegen] .set .Llabel4315, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom4326(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ToPropertyKey
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ToNumeric
[Codegen] .set .Llabel4329, .
[Codegen] pop        %rcx
[Codegen] .set .Llabel4330, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel4334, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel4338, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel4343, .
[Codegen] .set .Llabel4343, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel4362, .
[Codegen] .set .Llabel4362, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom4373(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ToNumeric
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ToString
[Codegen] .set .Llabel4376, .
[Codegen] pop        %rcx
[Codegen] movq       %rcx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff6, %r11d
[Codegen] je         .Lfrom4397
[Codegen] push       %rcx
[Codegen] .set .Llabel4398, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel4411, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom4421
[Codegen] .set .Llabel4421, .
[Codegen] .set .Llabel4421, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] movq       %rax, %rcx
[Codegen] movabsq    $0xfffb000000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] .set .Llabel4441, .
[Codegen] .set .Lfrom4397, .Llabel4441
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel4451, .
[Codegen] .set .Llabel4451, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom4462(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ToString
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=IsNullOrUndefined
[Codegen] .set .Llabel4465, .
[Codegen] cmpl       $0xfffa0000, 0x4(%rsp)
[Codegen] je         .Lfrom4479
[Codegen] cmpl       $0xfff98000, 0x4(%rsp)
[Codegen] je         .Lfrom4493
[Codegen] movabsq    $0xfff9000000000000, %rcx
[Codegen] jmp        .Lfrom4508
[Codegen] .set .Llabel4508, .
[Codegen] .set .Lfrom4493, .Llabel4508
[Codegen] .set .Lfrom4479, .Llabel4508
[Codegen] movabsq    $0xfff9000000000001, %rcx
[Codegen] .set .Llabel4518, .
[Codegen] .set .Lfrom4508, .Llabel4518
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel4528, .
[Codegen] .set .Llabel4528, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom4539(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=IsNullOrUndefined
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GlobalThis
[Codegen] .set .Llabel4542, .
[Codegen] movabsq    $0x75bb8e73a2b8, %r11
[Codegen] .set .Llabel4552, .
[Codegen] movq       0x0(%r11), %rcx
[Codegen] .set .Llabel4555, .
[Codegen] movq       0x58(%rcx), %rcx
[Codegen] .set .Llabel4559, .
[Codegen] movq       0x40(%rcx), %rcx
[Codegen] .set .Llabel4563, .
[Codegen] movq       0x670(%rcx), %rcx
[Codegen] movq       0x28(%rcx), %rcx
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel4584, .
[Codegen] .set .Llabel4584, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom4595(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GlobalThis
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=NonSyntacticGlobalThis
[Codegen] .set .Llabel4598, .
[Codegen] .set .Llabel4598, .
[Codegen] movq       -0x30(%rbp), %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel4603, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel4616, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom4626
[Codegen] .set .Llabel4626, .
[Codegen] .set .Llabel4626, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel4640, .
[Codegen] .set .Llabel4640, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom4651(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=NonSyntacticGlobalThis
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=NewTarget
[Codegen] .set .Llabel4654, .
[Codegen] .set .Llabel4654, .
[Codegen] movq       0x18(%rbp), %rcx
[Codegen] testb      $0x2, %cl
[Codegen] je         .Lfrom4667
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel4685, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel4694, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel4703, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel4712, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel4721, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel4730, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel4739, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel4748, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel4754, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel4760, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel4766, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel4772, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel4778, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel4784, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel4790, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabbb921, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom4830
[Codegen] .set .Llabel4830, .
[Codegen] int3
[Codegen] .set .Llabel4831, .
[Codegen] .set .Lfrom4830, .Llabel4831
[Codegen] call       .Lfrom4836
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel4841, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel4850, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel4859, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel4868, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel4877, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel4886, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel4895, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel4904, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel4910, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel4916, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel4922, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel4928, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel4934, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel4940, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel4946, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel4970, .
[Codegen] .set .Lfrom4667, .Llabel4970
[Codegen] andq       $0xfffffffffffffffc, %rcx
[Codegen] .set .Llabel4974, .
[Codegen] movl       0x18(%rcx), %ebx
[Codegen] andl       $0x7, %ebx
[Codegen] cmpl       $0x1, %ebx
[Codegen] jne        .Lfrom4989
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel5007, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel5016, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel5025, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel5034, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel5043, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel5052, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel5061, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel5070, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel5076, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel5082, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel5088, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel5094, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel5100, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel5106, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel5112, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabbb940, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom5152
[Codegen] .set .Llabel5152, .
[Codegen] int3
[Codegen] .set .Llabel5153, .
[Codegen] .set .Lfrom5152, .Llabel5153
[Codegen] call       .Lfrom5158
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel5163, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel5172, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel5181, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel5190, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel5199, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel5208, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel5217, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel5226, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel5232, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel5238, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel5244, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel5250, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel5256, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel5262, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel5268, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel5292, .
[Codegen] .set .Lfrom4989, .Llabel5292
[Codegen] testq      $0x1, 0x18(%rbp)
[Codegen] je         .Lfrom5306
[Codegen] .set .Llabel5306, .
[Codegen] movq       0x10(%rbp), %rcx
[Codegen] shrl       $5, %ecx
[Codegen] .set .Llabel5313, .
[Codegen] movq       0x18(%rbp), %rbx
[Codegen] andq       $0x3, %rbx
[Codegen] testq      %rbx, %rbx
[Codegen] je         .Lfrom5330
[Codegen] cmpq       $0x1, %rbx
[Codegen] je         .Lfrom5340
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel5358, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel5367, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel5376, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel5385, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel5394, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel5403, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel5412, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel5421, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel5427, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel5433, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel5439, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel5445, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel5451, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel5457, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel5463, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabb5761, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom5503
[Codegen] .set .Llabel5503, .
[Codegen] int3
[Codegen] .set .Llabel5504, .
[Codegen] .set .Lfrom5503, .Llabel5504
[Codegen] call       .Lfrom5509
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel5514, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel5523, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel5532, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel5541, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel5550, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel5559, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel5568, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel5577, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel5583, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel5589, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel5595, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel5601, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel5607, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel5613, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel5619, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel5643, .
[Codegen] .set .Lfrom5340, .Llabel5643
[Codegen] .set .Lfrom5330, .Llabel5643
[Codegen] .set .Llabel5643, .
[Codegen] movq       0x18(%rbp), %rbx
[Codegen] andq       $0xfffffffffffffffc, %rbx
[Codegen] .set .Llabel5651, .
[Codegen] movl       0x18(%rbx), %ebx
[Codegen] shrl       $16, %ebx
[Codegen] cmpl       %ebx, %ecx
[Codegen] cmovb      %ebx, %ecx
[Codegen] movq       0x28(%rbp,%rcx,8), %rcx
[Codegen] jmp        .Lfrom5672
[Codegen] .set .Llabel5672, .
[Codegen] .set .Lfrom5306, .Llabel5672
[Codegen] movabsq    $0xfff9800000000000, %rcx
[Codegen] .set .Llabel5682, .
[Codegen] .set .Lfrom5672, .Llabel5682
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel5692, .
[Codegen] .set .Llabel5692, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom5703(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=NewTarget
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=DynamicImport
[Codegen] .set .Llabel5706, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] push       -0x48(%rbp)
[Codegen] .set .Llabel5713, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $24, %ecx
[Codegen] .set .Llabel5726, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom5736
[Codegen] .set .Llabel5736, .
[Codegen] .set .Llabel5736, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] movq       %rax, %rcx
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel5766, .
[Codegen] .set .Llabel5766, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom5777(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=DynamicImport
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ImportMeta
[Codegen] .set .Llabel5780, .
[Codegen] .set .Llabel5780, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel5784, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel5788, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel5793, .
[Codegen] .set .Llabel5793, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel5812, .
[Codegen] .set .Llabel5812, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom5823(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ImportMeta
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=NewInit
[Codegen] .set .Llabel5826, .
[Codegen] .set .Llabel5826, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel5830, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel5834, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel5839, .
[Codegen] .set .Llabel5839, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $2, %r14
[Codegen] .set .Llabel5858, .
[Codegen] .set .Llabel5858, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom5869(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=NewInit
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=NewObject
[Codegen] .set .Llabel5872, .
[Codegen] .set .Llabel5872, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel5876, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel5880, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel5885, .
[Codegen] .set .Llabel5885, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel5904, .
[Codegen] .set .Llabel5904, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom5915(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=NewObject
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Object
[Codegen] .set .Llabel5918, .
[Codegen] .set .Llabel5918, .
[Codegen] movl       0x1(%r14), %ebx
[Codegen] .set .Llabel5922, .
[Codegen] movq       -0x48(%rbp), %rcx
[Codegen] .set .Llabel5926, .
[Codegen] movq       0x40(%rcx), %rcx
[Codegen] .set .Llabel5930, .
[Codegen] movq       0x10(%rcx,%rbx,8), %rcx
[Codegen] testb      $0x7, %cl
[Codegen] je         .Lfrom5944
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel5962, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel5971, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel5980, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel5989, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel5998, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel6007, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel6016, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel6025, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel6031, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel6037, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel6043, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel6049, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel6055, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel6061, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel6067, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabae9e7, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom6107
[Codegen] .set .Llabel6107, .
[Codegen] int3
[Codegen] .set .Llabel6108, .
[Codegen] .set .Lfrom6107, .Llabel6108
[Codegen] call       .Lfrom6113
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel6118, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel6127, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel6136, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel6145, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel6154, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel6163, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel6172, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel6181, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel6187, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel6193, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel6199, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel6205, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel6211, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel6217, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel6223, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel6247, .
[Codegen] .set .Lfrom5944, .Llabel6247
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] push       %rcx
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel6270, .
[Codegen] .set .Llabel6270, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom6281(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Object
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ObjWithProto
[Codegen] .set .Llabel6284, .
[Codegen] movq       0x0(%rsp), %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel6289, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel6302, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom6312
[Codegen] .set .Llabel6312, .
[Codegen] .set .Llabel6312, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] movq       %rax, %rcx
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] addq       $8, %rsp
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel6346, .
[Codegen] .set .Llabel6346, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom6357(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ObjWithProto
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitProp
[Codegen] .set .Llabel6360, .
[Codegen] movq       0x8(%rsp), %rcx
[Codegen] movq       0x0(%rsp), %rbx
[Codegen] .set .Llabel6369, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel6373, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel6377, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel6382, .
[Codegen] .set .Llabel6382, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $8, %rsp
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel6404, .
[Codegen] .set .Llabel6404, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom6415(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitProp
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitHiddenProp
[Codegen] .set .Llabel6418, .
[Codegen] movq       0x8(%rsp), %rcx
[Codegen] movq       0x0(%rsp), %rbx
[Codegen] .set .Llabel6427, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel6431, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel6435, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel6440, .
[Codegen] .set .Llabel6440, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $8, %rsp
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel6462, .
[Codegen] .set .Llabel6462, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom6473(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitHiddenProp
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitLockedProp
[Codegen] .set .Llabel6476, .
[Codegen] movq       0x8(%rsp), %rcx
[Codegen] movq       0x0(%rsp), %rbx
[Codegen] .set .Llabel6485, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel6489, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel6493, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel6498, .
[Codegen] .set .Llabel6498, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $8, %rsp
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel6520, .
[Codegen] .set .Llabel6520, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom6531(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitLockedProp
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitElem
[Codegen] .set .Llabel6534, .
[Codegen] movq       0x0(%rsp), %rax
[Codegen] movq       %rax, -0x18(%rbp)
[Codegen] addq       $8, %rsp
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] push       %rcx
[Codegen] push       -0x18(%rbp)
[Codegen] .set .Llabel6552, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel6556, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel6560, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel6565, .
[Codegen] .set .Llabel6565, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $8, %rsp
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel6587, .
[Codegen] .set .Llabel6587, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom6598(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitElem
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitHiddenElem
[Codegen] .set .Llabel6601, .
[Codegen] movq       0x0(%rsp), %rax
[Codegen] movq       %rax, -0x18(%rbp)
[Codegen] addq       $8, %rsp
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] push       %rcx
[Codegen] push       -0x18(%rbp)
[Codegen] .set .Llabel6619, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel6623, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel6627, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel6632, .
[Codegen] .set .Llabel6632, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $8, %rsp
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel6654, .
[Codegen] .set .Llabel6654, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom6665(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitHiddenElem
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitLockedElem
[Codegen] .set .Llabel6668, .
[Codegen] movq       0x0(%rsp), %rax
[Codegen] movq       %rax, -0x18(%rbp)
[Codegen] addq       $8, %rsp
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] push       %rcx
[Codegen] push       -0x18(%rbp)
[Codegen] .set .Llabel6686, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel6690, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel6694, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel6699, .
[Codegen] .set .Llabel6699, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $8, %rsp
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel6721, .
[Codegen] .set .Llabel6721, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom6732(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitLockedElem
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitPropGetter
[Codegen] .set .Llabel6735, .
[Codegen] movabsq    $0xfffe000000000000, %rcx
[Codegen] xorq       0x0(%rsp), %rcx
[Codegen] movabsq    $0xfffe000000000000, %rbx
[Codegen] xorq       0x8(%rsp), %rbx
[Codegen] push       %rcx
[Codegen] .set .Llabel6765, .
[Codegen] movl       0x1(%r14), %eax
[Codegen] .set .Llabel6769, .
[Codegen] movq       -0x48(%rbp), %rcx
[Codegen] .set .Llabel6773, .
[Codegen] movq       0x40(%rcx), %rcx
[Codegen] .set .Llabel6777, .
[Codegen] movq       0x10(%rcx,%rax,8), %rcx
[Codegen] xorq       $0x2, %rcx
[Codegen] testb      $0x7, %cl
[Codegen] je         .Lfrom6795
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel6813, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel6822, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel6831, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel6840, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel6849, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel6858, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel6867, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel6876, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel6882, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel6888, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel6894, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel6900, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel6906, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel6912, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel6918, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabae9e7, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom6958
[Codegen] .set .Llabel6958, .
[Codegen] int3
[Codegen] .set .Llabel6959, .
[Codegen] .set .Lfrom6958, .Llabel6959
[Codegen] call       .Lfrom6964
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel6969, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel6978, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel6987, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel6996, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel7005, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel7014, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel7023, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel7032, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel7038, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel7044, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel7050, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel7056, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel7062, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel7068, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel7074, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel7098, .
[Codegen] .set .Lfrom6795, .Llabel7098
[Codegen] push       %rcx
[Codegen] push       %rbx
[Codegen] push       %r14
[Codegen] .set .Llabel7102, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $32, %ecx
[Codegen] .set .Llabel7115, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom7125
[Codegen] .set .Llabel7125, .
[Codegen] .set .Llabel7125, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $8, %rsp
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel7142, .
[Codegen] .set .Llabel7142, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom7153(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitPropGetter
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitHiddenPropGetter
[Codegen] .set .Llabel7156, .
[Codegen] movabsq    $0xfffe000000000000, %rcx
[Codegen] xorq       0x0(%rsp), %rcx
[Codegen] movabsq    $0xfffe000000000000, %rbx
[Codegen] xorq       0x8(%rsp), %rbx
[Codegen] push       %rcx
[Codegen] .set .Llabel7186, .
[Codegen] movl       0x1(%r14), %eax
[Codegen] .set .Llabel7190, .
[Codegen] movq       -0x48(%rbp), %rcx
[Codegen] .set .Llabel7194, .
[Codegen] movq       0x40(%rcx), %rcx
[Codegen] .set .Llabel7198, .
[Codegen] movq       0x10(%rcx,%rax,8), %rcx
[Codegen] xorq       $0x2, %rcx
[Codegen] testb      $0x7, %cl
[Codegen] je         .Lfrom7216
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel7234, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel7243, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel7252, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel7261, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel7270, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel7279, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel7288, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel7297, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel7303, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel7309, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel7315, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel7321, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel7327, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel7333, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel7339, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabae9e7, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom7379
[Codegen] .set .Llabel7379, .
[Codegen] int3
[Codegen] .set .Llabel7380, .
[Codegen] .set .Lfrom7379, .Llabel7380
[Codegen] call       .Lfrom7385
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel7390, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel7399, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel7408, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel7417, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel7426, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel7435, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel7444, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel7453, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel7459, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel7465, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel7471, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel7477, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel7483, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel7489, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel7495, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel7519, .
[Codegen] .set .Lfrom7216, .Llabel7519
[Codegen] push       %rcx
[Codegen] push       %rbx
[Codegen] push       %r14
[Codegen] .set .Llabel7523, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $32, %ecx
[Codegen] .set .Llabel7536, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom7546
[Codegen] .set .Llabel7546, .
[Codegen] .set .Llabel7546, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $8, %rsp
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel7563, .
[Codegen] .set .Llabel7563, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom7574(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitHiddenPropGetter
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitElemGetter
[Codegen] .set .Llabel7577, .
[Codegen] movq       0x8(%rsp), %rcx
[Codegen] movabsq    $0xfffe000000000000, %rbx
[Codegen] xorq       0x0(%rsp), %rbx
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] movabsq    $0xfffe000000000000, %rcx
[Codegen] xorq       0x20(%rsp), %rcx
[Codegen] push       %rcx
[Codegen] push       %r14
[Codegen] .set .Llabel7616, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $32, %ecx
[Codegen] .set .Llabel7629, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom7639
[Codegen] .set .Llabel7639, .
[Codegen] .set .Llabel7639, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $16, %rsp
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel7656, .
[Codegen] .set .Llabel7656, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom7667(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitElemGetter
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitHiddenElemGetter
[Codegen] .set .Llabel7670, .
[Codegen] movq       0x8(%rsp), %rcx
[Codegen] movabsq    $0xfffe000000000000, %rbx
[Codegen] xorq       0x0(%rsp), %rbx
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] movabsq    $0xfffe000000000000, %rcx
[Codegen] xorq       0x20(%rsp), %rcx
[Codegen] push       %rcx
[Codegen] push       %r14
[Codegen] .set .Llabel7709, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $32, %ecx
[Codegen] .set .Llabel7722, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom7732
[Codegen] .set .Llabel7732, .
[Codegen] .set .Llabel7732, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $16, %rsp
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel7749, .
[Codegen] .set .Llabel7749, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom7760(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitHiddenElemGetter
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitPropSetter
[Codegen] .set .Llabel7763, .
[Codegen] movabsq    $0xfffe000000000000, %rcx
[Codegen] xorq       0x0(%rsp), %rcx
[Codegen] movabsq    $0xfffe000000000000, %rbx
[Codegen] xorq       0x8(%rsp), %rbx
[Codegen] push       %rcx
[Codegen] .set .Llabel7793, .
[Codegen] movl       0x1(%r14), %eax
[Codegen] .set .Llabel7797, .
[Codegen] movq       -0x48(%rbp), %rcx
[Codegen] .set .Llabel7801, .
[Codegen] movq       0x40(%rcx), %rcx
[Codegen] .set .Llabel7805, .
[Codegen] movq       0x10(%rcx,%rax,8), %rcx
[Codegen] xorq       $0x2, %rcx
[Codegen] testb      $0x7, %cl
[Codegen] je         .Lfrom7823
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel7841, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel7850, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel7859, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel7868, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel7877, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel7886, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel7895, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel7904, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel7910, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel7916, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel7922, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel7928, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel7934, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel7940, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel7946, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabae9e7, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom7986
[Codegen] .set .Llabel7986, .
[Codegen] int3
[Codegen] .set .Llabel7987, .
[Codegen] .set .Lfrom7986, .Llabel7987
[Codegen] call       .Lfrom7992
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel7997, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel8006, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel8015, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel8024, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel8033, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel8042, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel8051, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel8060, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel8066, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel8072, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel8078, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel8084, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel8090, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel8096, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel8102, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel8126, .
[Codegen] .set .Lfrom7823, .Llabel8126
[Codegen] push       %rcx
[Codegen] push       %rbx
[Codegen] push       %r14
[Codegen] .set .Llabel8130, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $32, %ecx
[Codegen] .set .Llabel8143, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom8153
[Codegen] .set .Llabel8153, .
[Codegen] .set .Llabel8153, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $8, %rsp
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel8170, .
[Codegen] .set .Llabel8170, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom8181(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitPropSetter
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitHiddenPropSetter
[Codegen] .set .Llabel8184, .
[Codegen] movabsq    $0xfffe000000000000, %rcx
[Codegen] xorq       0x0(%rsp), %rcx
[Codegen] movabsq    $0xfffe000000000000, %rbx
[Codegen] xorq       0x8(%rsp), %rbx
[Codegen] push       %rcx
[Codegen] .set .Llabel8214, .
[Codegen] movl       0x1(%r14), %eax
[Codegen] .set .Llabel8218, .
[Codegen] movq       -0x48(%rbp), %rcx
[Codegen] .set .Llabel8222, .
[Codegen] movq       0x40(%rcx), %rcx
[Codegen] .set .Llabel8226, .
[Codegen] movq       0x10(%rcx,%rax,8), %rcx
[Codegen] xorq       $0x2, %rcx
[Codegen] testb      $0x7, %cl
[Codegen] je         .Lfrom8244
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel8262, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel8271, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel8280, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel8289, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel8298, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel8307, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel8316, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel8325, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel8331, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel8337, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel8343, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel8349, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel8355, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel8361, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel8367, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabae9e7, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom8407
[Codegen] .set .Llabel8407, .
[Codegen] int3
[Codegen] .set .Llabel8408, .
[Codegen] .set .Lfrom8407, .Llabel8408
[Codegen] call       .Lfrom8413
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel8418, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel8427, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel8436, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel8445, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel8454, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel8463, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel8472, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel8481, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel8487, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel8493, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel8499, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel8505, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel8511, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel8517, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel8523, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel8547, .
[Codegen] .set .Lfrom8244, .Llabel8547
[Codegen] push       %rcx
[Codegen] push       %rbx
[Codegen] push       %r14
[Codegen] .set .Llabel8551, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $32, %ecx
[Codegen] .set .Llabel8564, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom8574
[Codegen] .set .Llabel8574, .
[Codegen] .set .Llabel8574, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $8, %rsp
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel8591, .
[Codegen] .set .Llabel8591, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom8602(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitHiddenPropSetter
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitElemSetter
[Codegen] .set .Llabel8605, .
[Codegen] movq       0x8(%rsp), %rcx
[Codegen] movabsq    $0xfffe000000000000, %rbx
[Codegen] xorq       0x0(%rsp), %rbx
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] movabsq    $0xfffe000000000000, %rcx
[Codegen] xorq       0x20(%rsp), %rcx
[Codegen] push       %rcx
[Codegen] push       %r14
[Codegen] .set .Llabel8644, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $32, %ecx
[Codegen] .set .Llabel8657, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom8667
[Codegen] .set .Llabel8667, .
[Codegen] .set .Llabel8667, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $16, %rsp
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel8684, .
[Codegen] .set .Llabel8684, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom8695(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitElemSetter
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitHiddenElemSetter
[Codegen] .set .Llabel8698, .
[Codegen] movq       0x8(%rsp), %rcx
[Codegen] movabsq    $0xfffe000000000000, %rbx
[Codegen] xorq       0x0(%rsp), %rbx
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] movabsq    $0xfffe000000000000, %rcx
[Codegen] xorq       0x20(%rsp), %rcx
[Codegen] push       %rcx
[Codegen] push       %r14
[Codegen] .set .Llabel8737, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $32, %ecx
[Codegen] .set .Llabel8750, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom8760
[Codegen] .set .Llabel8760, .
[Codegen] .set .Llabel8760, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $16, %rsp
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel8777, .
[Codegen] .set .Llabel8777, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom8788(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitHiddenElemSetter
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetProp
[Codegen] .set .Llabel8791, .
[Codegen] pop        %rcx
[Codegen] .set .Llabel8792, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel8796, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel8800, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel8805, .
[Codegen] .set .Llabel8805, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel8824, .
[Codegen] .set .Llabel8824, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom8835(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetProp
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetElem
[Codegen] .set .Llabel8838, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] .set .Llabel8840, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel8844, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel8848, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel8853, .
[Codegen] .set .Llabel8853, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel8872, .
[Codegen] .set .Llabel8872, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom8883(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetElem
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SetProp
[Codegen] .set .Llabel8886, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] push       %rbx
[Codegen] .set .Llabel8889, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel8893, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel8897, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel8902, .
[Codegen] .set .Llabel8902, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel8920, .
[Codegen] .set .Llabel8920, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom8931(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SetProp
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=StrictSetProp
[Codegen] .set .Llabel8934, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] push       %rbx
[Codegen] .set .Llabel8937, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel8941, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel8945, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel8950, .
[Codegen] .set .Llabel8950, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel8968, .
[Codegen] .set .Llabel8968, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom8979(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=StrictSetProp
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SetElem
[Codegen] .set .Llabel8982, .
[Codegen] movq       0x0(%rsp), %rax
[Codegen] movq       %rax, -0x18(%rbp)
[Codegen] addq       $8, %rsp
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] push       -0x18(%rbp)
[Codegen] .set .Llabel8999, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel9003, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel9007, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel9012, .
[Codegen] .set .Llabel9012, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel9030, .
[Codegen] .set .Llabel9030, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom9041(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SetElem
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=StrictSetElem
[Codegen] .set .Llabel9044, .
[Codegen] movq       0x0(%rsp), %rax
[Codegen] movq       %rax, -0x18(%rbp)
[Codegen] addq       $8, %rsp
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] push       -0x18(%rbp)
[Codegen] .set .Llabel9061, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel9065, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel9069, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel9074, .
[Codegen] .set .Llabel9074, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel9092, .
[Codegen] .set .Llabel9092, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom9103(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=StrictSetElem
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=DelProp
[Codegen] .set .Llabel9106, .
[Codegen] movq       0x0(%rsp), %rcx
[Codegen] .set .Llabel9110, .
[Codegen] movl       0x1(%r14), %eax
[Codegen] .set .Llabel9114, .
[Codegen] movq       -0x48(%rbp), %rbx
[Codegen] .set .Llabel9118, .
[Codegen] movq       0x40(%rbx), %rbx
[Codegen] .set .Llabel9122, .
[Codegen] movq       0x10(%rbx,%rax,8), %rbx
[Codegen] xorq       $0x2, %rbx
[Codegen] testb      $0x7, %bl
[Codegen] je         .Lfrom9140
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel9158, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel9167, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel9176, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel9185, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel9194, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel9203, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel9212, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel9221, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel9227, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel9233, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel9239, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel9245, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel9251, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel9257, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel9263, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabae9e7, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom9303
[Codegen] .set .Llabel9303, .
[Codegen] int3
[Codegen] .set .Llabel9304, .
[Codegen] .set .Lfrom9303, .Llabel9304
[Codegen] call       .Lfrom9309
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel9314, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel9323, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel9332, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel9341, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel9350, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel9359, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel9368, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel9377, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel9383, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel9389, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel9395, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel9401, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel9407, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel9413, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel9419, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel9443, .
[Codegen] .set .Lfrom9140, .Llabel9443
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] .set .Llabel9445, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $16, %ecx
[Codegen] .set .Llabel9458, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom9468
[Codegen] .set .Llabel9468, .
[Codegen] .set .Llabel9468, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] movl       $0xffffffff, %ebx
[Codegen] cmpq       %rbx, %rax
[Codegen] jbe        .Lfrom9486
[Codegen] int3
[Codegen] .set .Llabel9487, .
[Codegen] .set .Lfrom9486, .Llabel9487
[Codegen] movabsq    $0xfff9000000000000, %rbx
[Codegen] orq        %rax, %rbx
[Codegen] addq       $8, %rsp
[Codegen] push       %rbx
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel9514, .
[Codegen] .set .Llabel9514, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom9525(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=DelProp
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=StrictDelProp
[Codegen] .set .Llabel9528, .
[Codegen] movq       0x0(%rsp), %rcx
[Codegen] .set .Llabel9532, .
[Codegen] movl       0x1(%r14), %eax
[Codegen] .set .Llabel9536, .
[Codegen] movq       -0x48(%rbp), %rbx
[Codegen] .set .Llabel9540, .
[Codegen] movq       0x40(%rbx), %rbx
[Codegen] .set .Llabel9544, .
[Codegen] movq       0x10(%rbx,%rax,8), %rbx
[Codegen] xorq       $0x2, %rbx
[Codegen] testb      $0x7, %bl
[Codegen] je         .Lfrom9562
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel9580, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel9589, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel9598, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel9607, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel9616, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel9625, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel9634, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel9643, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel9649, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel9655, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel9661, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel9667, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel9673, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel9679, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel9685, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabae9e7, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom9725
[Codegen] .set .Llabel9725, .
[Codegen] int3
[Codegen] .set .Llabel9726, .
[Codegen] .set .Lfrom9725, .Llabel9726
[Codegen] call       .Lfrom9731
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel9736, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel9745, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel9754, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel9763, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel9772, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel9781, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel9790, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel9799, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel9805, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel9811, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel9817, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel9823, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel9829, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel9835, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel9841, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel9865, .
[Codegen] .set .Lfrom9562, .Llabel9865
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] .set .Llabel9867, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $16, %ecx
[Codegen] .set .Llabel9880, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom9890
[Codegen] .set .Llabel9890, .
[Codegen] .set .Llabel9890, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] movl       $0xffffffff, %ebx
[Codegen] cmpq       %rbx, %rax
[Codegen] jbe        .Lfrom9908
[Codegen] int3
[Codegen] .set .Llabel9909, .
[Codegen] .set .Lfrom9908, .Llabel9909
[Codegen] movabsq    $0xfff9000000000000, %rbx
[Codegen] orq        %rax, %rbx
[Codegen] addq       $8, %rsp
[Codegen] push       %rbx
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel9936, .
[Codegen] .set .Llabel9936, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom9947(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=StrictDelProp
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=DelElem
[Codegen] .set .Llabel9950, .
[Codegen] movq       0x8(%rsp), %rcx
[Codegen] movq       0x0(%rsp), %rbx
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] .set .Llabel9961, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $16, %ecx
[Codegen] .set .Llabel9974, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom9984
[Codegen] .set .Llabel9984, .
[Codegen] .set .Llabel9984, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] movl       $0xffffffff, %ebx
[Codegen] cmpq       %rbx, %rax
[Codegen] jbe        .Lfrom10002
[Codegen] int3
[Codegen] .set .Llabel10003, .
[Codegen] .set .Lfrom10002, .Llabel10003
[Codegen] movabsq    $0xfff9000000000000, %rbx
[Codegen] orq        %rax, %rbx
[Codegen] addq       $16, %rsp
[Codegen] push       %rbx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel10030, .
[Codegen] .set .Llabel10030, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom10041(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=DelElem
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=StrictDelElem
[Codegen] .set .Llabel10044, .
[Codegen] movq       0x8(%rsp), %rcx
[Codegen] movq       0x0(%rsp), %rbx
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] .set .Llabel10055, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $16, %ecx
[Codegen] .set .Llabel10068, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom10078
[Codegen] .set .Llabel10078, .
[Codegen] .set .Llabel10078, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] movl       $0xffffffff, %ebx
[Codegen] cmpq       %rbx, %rax
[Codegen] jbe        .Lfrom10096
[Codegen] int3
[Codegen] .set .Llabel10097, .
[Codegen] .set .Lfrom10096, .Llabel10097
[Codegen] movabsq    $0xfff9000000000000, %rbx
[Codegen] orq        %rax, %rbx
[Codegen] addq       $16, %rsp
[Codegen] push       %rbx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel10124, .
[Codegen] .set .Llabel10124, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom10135(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=StrictDelElem
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=HasOwn
[Codegen] .set .Llabel10138, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] .set .Llabel10140, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel10144, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel10148, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel10153, .
[Codegen] .set .Llabel10153, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel10172, .
[Codegen] .set .Llabel10172, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom10183(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=HasOwn
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CheckPrivateField
[Codegen] .set .Llabel10186, .
[Codegen] movq       0x8(%rsp), %rcx
[Codegen] movq       0x0(%rsp), %rbx
[Codegen] .set .Llabel10195, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel10199, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel10203, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel10208, .
[Codegen] .set .Llabel10208, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $3, %r14
[Codegen] .set .Llabel10227, .
[Codegen] .set .Llabel10227, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom10238(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CheckPrivateField
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=NewPrivateName
[Codegen] .set .Llabel10241, .
[Codegen] .set .Llabel10241, .
[Codegen] movl       0x1(%r14), %ebx
[Codegen] .set .Llabel10245, .
[Codegen] movq       -0x48(%rbp), %rcx
[Codegen] .set .Llabel10249, .
[Codegen] movq       0x40(%rcx), %rcx
[Codegen] .set .Llabel10253, .
[Codegen] movq       0x10(%rcx,%rbx,8), %rcx
[Codegen] xorq       $0x2, %rcx
[Codegen] testb      $0x7, %cl
[Codegen] je         .Lfrom10271
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel10289, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel10298, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel10307, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel10316, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel10325, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel10334, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel10343, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel10352, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel10358, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel10364, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel10370, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel10376, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel10382, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel10388, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel10394, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabae9e7, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom10434
[Codegen] .set .Llabel10434, .
[Codegen] int3
[Codegen] .set .Llabel10435, .
[Codegen] .set .Lfrom10434, .Llabel10435
[Codegen] call       .Lfrom10440
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel10445, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel10454, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel10463, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel10472, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel10481, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel10490, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel10499, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel10508, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel10514, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel10520, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel10526, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel10532, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel10538, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel10544, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel10550, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel10574, .
[Codegen] .set .Lfrom10271, .Llabel10574
[Codegen] push       %rcx
[Codegen] .set .Llabel10575, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel10588, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom10598
[Codegen] .set .Llabel10598, .
[Codegen] .set .Llabel10598, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] movq       %rax, %rcx
[Codegen] movabsq    $0xfffb800000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] push       %rcx
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel10628, .
[Codegen] .set .Llabel10628, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom10639(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=NewPrivateName
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SuperBase
[Codegen] .set .Llabel10642, .
[Codegen] pop        %rcx
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] xorq       %r11, %rcx
[Codegen] testl      $0x8, 0x18(%rcx)
[Codegen] jne        .Lfrom10669
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel10687, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel10696, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel10705, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel10714, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel10723, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel10732, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel10741, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel10750, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel10756, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel10762, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel10768, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel10774, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel10780, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel10786, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel10792, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edaca6808, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom10832
[Codegen] .set .Llabel10832, .
[Codegen] int3
[Codegen] .set .Llabel10833, .
[Codegen] .set .Lfrom10832, .Llabel10833
[Codegen] call       .Lfrom10838
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel10843, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel10852, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel10861, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel10870, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel10879, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel10888, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel10897, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel10906, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel10912, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel10918, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel10924, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel10930, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel10936, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel10942, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel10948, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel10972, .
[Codegen] .set .Lfrom10669, .Llabel10972
[Codegen] movq       0x38(%rcx), %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fffc, %r11d
[Codegen] je         .Lfrom10993
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel11011, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel11020, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel11029, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel11038, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel11047, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel11056, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel11065, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel11074, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel11080, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel11086, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel11092, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel11098, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel11104, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel11110, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel11116, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabbb981, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom11156
[Codegen] .set .Llabel11156, .
[Codegen] int3
[Codegen] .set .Llabel11157, .
[Codegen] .set .Lfrom11156, .Llabel11157
[Codegen] call       .Lfrom11162
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel11167, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel11176, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel11185, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel11194, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel11203, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel11212, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel11221, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel11230, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel11236, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel11242, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel11248, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel11254, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel11260, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel11266, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel11272, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel11296, .
[Codegen] .set .Lfrom10993, .Llabel11296
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] movq       0x38(%rcx), %rcx
[Codegen] xorq       %r11, %rcx
[Codegen] .set .Llabel11313, .
[Codegen] movq       0x0(%rcx), %rbx
[Codegen] .set .Llabel11316, .
[Codegen] movq       0x0(%rbx), %rbx
[Codegen] .set .Llabel11319, .
[Codegen] movq       0x10(%rbx), %rbx
[Codegen] cmpq       $0x1, %rbx
[Codegen] jne        .Lfrom11333
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel11351, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel11360, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel11369, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel11378, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel11387, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel11396, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel11405, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel11414, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel11420, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel11426, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel11432, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel11438, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel11444, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel11450, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel11456, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabbb9f9, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom11496
[Codegen] .set .Llabel11496, .
[Codegen] int3
[Codegen] .set .Llabel11497, .
[Codegen] .set .Lfrom11496, .Llabel11497
[Codegen] call       .Lfrom11502
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel11507, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel11516, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel11525, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel11534, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel11543, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel11552, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel11561, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel11570, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel11576, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel11582, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel11588, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel11594, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel11600, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel11606, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel11612, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel11636, .
[Codegen] .set .Lfrom11333, .Llabel11636
[Codegen] testq      %rbx, %rbx
[Codegen] je         .Lfrom11645
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] orq        %r11, %rbx
[Codegen] jmp        .Lfrom11663
[Codegen] .set .Llabel11663, .
[Codegen] .set .Lfrom11645, .Llabel11663
[Codegen] movabsq    $0xfffa000000000000, %rbx
[Codegen] .set .Llabel11673, .
[Codegen] .set .Lfrom11663, .Llabel11673
[Codegen] push       %rbx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel11683, .
[Codegen] .set .Llabel11683, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom11694(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SuperBase
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetPropSuper
[Codegen] .set .Llabel11697, .
[Codegen] pop        %rcx
[Codegen] movq       0x0(%rsp), %rbx
[Codegen] addq       $8, %rsp
[Codegen] .set .Llabel11706, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel11710, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel11714, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel11719, .
[Codegen] .set .Llabel11719, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel11738, .
[Codegen] .set .Llabel11738, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom11749(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetPropSuper
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetElemSuper
[Codegen] .set .Llabel11752, .
[Codegen] movq       0x0(%rsp), %rax
[Codegen] movq       %rax, -0x18(%rbp)
[Codegen] addq       $8, %rsp
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] push       -0x18(%rbp)
[Codegen] .set .Llabel11769, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel11773, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel11777, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel11782, .
[Codegen] .set .Llabel11782, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $8, %rsp
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel11805, .
[Codegen] .set .Llabel11805, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom11816(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetElemSuper
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SetPropSuper
[Codegen] .set .Llabel11819, .
[Codegen] pop        %rcx
[Codegen] movq       0x8(%rsp), %rbx
[Codegen] movq       %rcx, 0x8(%rsp)
[Codegen] push       $0x0
[Codegen] push       %rcx
[Codegen] .set .Llabel11833, .
[Codegen] movl       0x1(%r14), %eax
[Codegen] .set .Llabel11837, .
[Codegen] movq       -0x48(%rbp), %rcx
[Codegen] .set .Llabel11841, .
[Codegen] movq       0x40(%rcx), %rcx
[Codegen] .set .Llabel11845, .
[Codegen] movq       0x10(%rcx,%rax,8), %rcx
[Codegen] xorq       $0x2, %rcx
[Codegen] testb      $0x7, %cl
[Codegen] je         .Lfrom11863
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel11881, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel11890, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel11899, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel11908, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel11917, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel11926, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel11935, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel11944, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel11950, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel11956, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel11962, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel11968, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel11974, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel11980, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel11986, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabae9e7, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom12026
[Codegen] .set .Llabel12026, .
[Codegen] int3
[Codegen] .set .Llabel12027, .
[Codegen] .set .Lfrom12026, .Llabel12027
[Codegen] call       .Lfrom12032
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel12037, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel12046, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel12055, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel12064, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel12073, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel12082, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel12091, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel12100, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel12106, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel12112, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel12118, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel12124, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel12130, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel12136, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel12142, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel12166, .
[Codegen] .set .Lfrom11863, .Llabel12166
[Codegen] push       %rcx
[Codegen] push       %rbx
[Codegen] movq       0x20(%rsp), %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel12174, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $40, %ecx
[Codegen] .set .Llabel12187, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom12197
[Codegen] .set .Llabel12197, .
[Codegen] .set .Llabel12197, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $8, %rsp
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel12214, .
[Codegen] .set .Llabel12214, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom12225(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SetPropSuper
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=StrictSetPropSuper
[Codegen] .set .Llabel12228, .
[Codegen] pop        %rcx
[Codegen] movq       0x8(%rsp), %rbx
[Codegen] movq       %rcx, 0x8(%rsp)
[Codegen] push       $0x1
[Codegen] push       %rcx
[Codegen] .set .Llabel12242, .
[Codegen] movl       0x1(%r14), %eax
[Codegen] .set .Llabel12246, .
[Codegen] movq       -0x48(%rbp), %rcx
[Codegen] .set .Llabel12250, .
[Codegen] movq       0x40(%rcx), %rcx
[Codegen] .set .Llabel12254, .
[Codegen] movq       0x10(%rcx,%rax,8), %rcx
[Codegen] xorq       $0x2, %rcx
[Codegen] testb      $0x7, %cl
[Codegen] je         .Lfrom12272
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel12290, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel12299, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel12308, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel12317, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel12326, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel12335, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel12344, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel12353, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel12359, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel12365, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel12371, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel12377, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel12383, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel12389, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel12395, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabae9e7, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom12435
[Codegen] .set .Llabel12435, .
[Codegen] int3
[Codegen] .set .Llabel12436, .
[Codegen] .set .Lfrom12435, .Llabel12436
[Codegen] call       .Lfrom12441
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel12446, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel12455, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel12464, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel12473, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel12482, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel12491, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel12500, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel12509, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel12515, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel12521, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel12527, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel12533, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel12539, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel12545, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel12551, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel12575, .
[Codegen] .set .Lfrom12272, .Llabel12575
[Codegen] push       %rcx
[Codegen] push       %rbx
[Codegen] movq       0x20(%rsp), %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel12583, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $40, %ecx
[Codegen] .set .Llabel12596, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom12606
[Codegen] .set .Llabel12606, .
[Codegen] .set .Llabel12606, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $8, %rsp
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel12623, .
[Codegen] .set .Llabel12623, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom12634(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=StrictSetPropSuper
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SetElemSuper
[Codegen] .set .Llabel12637, .
[Codegen] pop        %rcx
[Codegen] movq       0x10(%rsp), %rbx
[Codegen] movq       %rcx, 0x10(%rsp)
[Codegen] push       $0x0
[Codegen] push       %rcx
[Codegen] movq       0x18(%rsp), %rcx
[Codegen] push       %rcx
[Codegen] push       %rbx
[Codegen] movq       0x20(%rsp), %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel12664, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $40, %ecx
[Codegen] .set .Llabel12677, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom12687
[Codegen] .set .Llabel12687, .
[Codegen] .set .Llabel12687, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $16, %rsp
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel12704, .
[Codegen] .set .Llabel12704, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom12715(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SetElemSuper
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=StrictSetElemSuper
[Codegen] .set .Llabel12718, .
[Codegen] pop        %rcx
[Codegen] movq       0x10(%rsp), %rbx
[Codegen] movq       %rcx, 0x10(%rsp)
[Codegen] push       $0x1
[Codegen] push       %rcx
[Codegen] movq       0x18(%rsp), %rcx
[Codegen] push       %rcx
[Codegen] push       %rbx
[Codegen] movq       0x20(%rsp), %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel12745, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $40, %ecx
[Codegen] .set .Llabel12758, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom12768
[Codegen] .set .Llabel12768, .
[Codegen] .set .Llabel12768, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $16, %rsp
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel12785, .
[Codegen] .set .Llabel12785, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom12796(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=StrictSetElemSuper
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Iter
[Codegen] .set .Llabel12799, .
[Codegen] pop        %rcx
[Codegen] .set .Llabel12800, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel12804, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel12808, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel12813, .
[Codegen] .set .Llabel12813, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel12832, .
[Codegen] .set .Llabel12832, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom12843(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Iter
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=MoreIter
[Codegen] .set .Llabel12846, .
[Codegen] movabsq    $0xfffe000000000000, %rbx
[Codegen] xorq       0x0(%rsp), %rbx
[Codegen] .set .Llabel12860, .
[Codegen] movq       0x0(%rbx), %rcx
[Codegen] .set .Llabel12863, .
[Codegen] movq       0x0(%rcx), %rcx
[Codegen] movabsq    $0x5c7eddf366d0, %r11
[Codegen] cmpq       %r11, 0x0(%rcx)
[Codegen] je         .Lfrom12885
[Codegen] movl       $0x0, %ecx
[Codegen] cmove      %rcx, %rbx
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel12912, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel12921, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel12930, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel12939, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel12948, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel12957, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel12966, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel12975, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel12981, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel12987, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel12993, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel12999, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel13005, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel13011, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel13017, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edacb39f9, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom13057
[Codegen] .set .Llabel13057, .
[Codegen] int3
[Codegen] .set .Llabel13058, .
[Codegen] .set .Lfrom13057, .Llabel13058
[Codegen] call       .Lfrom13063
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel13068, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel13077, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel13086, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel13095, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel13104, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel13113, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel13122, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel13131, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel13137, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel13143, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel13149, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel13155, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel13161, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel13167, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel13173, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel13197, .
[Codegen] .set .Lfrom12885, .Llabel13197
[Codegen] .set .Llabel13197, .
[Codegen] movq       0x18(%rbx), %rcx
[Codegen] .set .Llabel13201, .
[Codegen] movq       0x28(%rcx), %rax
[Codegen] cmpq       %rax, 0x30(%rcx)
[Codegen] jbe        .Lfrom13215
[Codegen] .set .Llabel13215, .
[Codegen] movq       0x0(%rax), %rax
[Codegen] addq       $8, 0x28(%rcx)
[Codegen] movq       %rax, %rcx
[Codegen] movabsq    $0xfffb000000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] jmp        .Lfrom13244
[Codegen] .set .Llabel13244, .
[Codegen] .set .Lfrom13215, .Llabel13244
[Codegen] movabsq    $0xfffa800000000001, %rcx
[Codegen] .set .Llabel13254, .
[Codegen] .set .Lfrom13244, .Llabel13254
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel13264, .
[Codegen] .set .Llabel13264, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom13275(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=MoreIter
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=IsNoIter
[Codegen] .set .Llabel13278, .
[Codegen] movq       0x0(%rsp), %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff5, %r11d
[Codegen] je         .Lfrom13299
[Codegen] movabsq    $0xfff9000000000000, %rcx
[Codegen] jmp        .Lfrom13314
[Codegen] .set .Llabel13314, .
[Codegen] .set .Lfrom13299, .Llabel13314
[Codegen] movabsq    $0xfff9000000000001, %rcx
[Codegen] .set .Llabel13324, .
[Codegen] .set .Lfrom13314, .Llabel13324
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel13334, .
[Codegen] .set .Llabel13334, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom13345(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=IsNoIter
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=EndIter
[Codegen] .set .Llabel13348, .
[Codegen] addq       $8, %rsp
[Codegen] pop        %rcx
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] xorq       %r11, %rcx
[Codegen] .set .Llabel13366, .
[Codegen] movq       0x0(%rcx), %rax
[Codegen] .set .Llabel13369, .
[Codegen] movq       0x0(%rax), %rax
[Codegen] movabsq    $0x5c7eddf366d0, %r11
[Codegen] cmpq       %r11, 0x0(%rax)
[Codegen] je         .Lfrom13391
[Codegen] movl       $0x0, %eax
[Codegen] cmove      %rax, %rcx
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel13418, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel13427, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel13436, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel13445, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel13454, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel13463, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel13472, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel13481, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel13487, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel13493, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel13499, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel13505, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel13511, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel13517, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel13523, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edacb39f9, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom13563
[Codegen] .set .Llabel13563, .
[Codegen] int3
[Codegen] .set .Llabel13564, .
[Codegen] .set .Lfrom13563, .Llabel13564
[Codegen] call       .Lfrom13569
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel13574, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel13583, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel13592, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel13601, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel13610, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel13619, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel13628, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel13637, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel13643, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel13649, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel13655, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel13661, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel13667, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel13673, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel13679, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel13703, .
[Codegen] .set .Lfrom13391, .Llabel13703
[Codegen] .set .Llabel13703, .
[Codegen] movq       0x18(%rcx), %rax
[Codegen] testl      $0x8, 0x3c(%rax)
[Codegen] jne        .Lfrom13720
[Codegen] andl       $0xfffffffd, 0x3c(%rax)
[Codegen] movabsq    $0x75bb8e73a2b0, %r11
[Codegen] .set .Llabel13734, .
[Codegen] movq       0x0(%r11), %rdx
[Codegen] testl      $0x1, 0x10(%rdx)
[Codegen] je         .Lfrom13750
[Codegen] cmpq       $0x0, 0x10(%rax)
[Codegen] je         .Lfrom13761
[Codegen] push       %rdx
[Codegen] leaq       0x10(%rax), %rdx
[Codegen] call       .Lfrom13771
[Codegen] pop        %rdx
[Codegen] .set .Llabel13772, .
[Codegen] .set .Lfrom13761, .Llabel13772
[Codegen] .set .Llabel13772, .
[Codegen] .set .Lfrom13750, .Llabel13772
[Codegen] movq       $0, 0x10(%rax)
[Codegen] .set .Llabel13780, .
[Codegen] movq       0x20(%rax), %rdx
[Codegen] .set .Llabel13784, .
[Codegen] movq       %rdx, 0x28(%rax)
[Codegen] .set .Llabel13788, .
[Codegen] movq       0x8(%rax), %rdx
[Codegen] .set .Llabel13792, .
[Codegen] movq       0x0(%rax), %rbx
[Codegen] .set .Llabel13795, .
[Codegen] movq       %rbx, 0x0(%rdx)
[Codegen] .set .Llabel13798, .
[Codegen] movq       %rdx, 0x8(%rbx)
[Codegen] movq       $0, 0x8(%rax)
[Codegen] movq       $0, 0x0(%rax)
[Codegen] .set .Llabel13817, .
[Codegen] .set .Lfrom13720, .Llabel13817
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel13826, .
[Codegen] .set .Llabel13826, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom13837(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=EndIter
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CloseIter
[Codegen] .set .Llabel13840, .
[Codegen] pop        %rcx
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] xorq       %r11, %rcx
[Codegen] .set .Llabel13854, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel13858, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel13862, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel13867, .
[Codegen] .set .Llabel13867, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $2, %r14
[Codegen] .set .Llabel13885, .
[Codegen] .set .Llabel13885, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom13896(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CloseIter
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=OptimizeGetIterator
[Codegen] .set .Llabel13899, .
[Codegen] pop        %rcx
[Codegen] .set .Llabel13900, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel13904, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel13908, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel13913, .
[Codegen] .set .Llabel13913, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel13932, .
[Codegen] .set .Llabel13932, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom13943(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=OptimizeGetIterator
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CheckIsObj
[Codegen] .set .Llabel13946, .
[Codegen] movq       0x0(%rsp), %rcx
[Codegen] movq       %rcx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fffc, %r11d
[Codegen] je         .Lfrom13970
[Codegen] .set .Llabel13970, .
[Codegen] movzbl     0x1(%r14), %ecx
[Codegen] push       %rcx
[Codegen] .set .Llabel13976, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel13989, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom13999
[Codegen] .set .Llabel13999, .
[Codegen] .set .Llabel13999, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel14003, .
[Codegen] .set .Lfrom13970, .Llabel14003
[Codegen] addq       $2, %r14
[Codegen] .set .Llabel14012, .
[Codegen] .set .Llabel14012, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom14023(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CheckIsObj
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CheckObjCoercible
[Codegen] .set .Llabel14026, .
[Codegen] movq       0x0(%rsp), %rcx
[Codegen] movq       %rcx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff3, %r11d
[Codegen] je         .Lfrom14050
[Codegen] movq       %rcx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff4, %r11d
[Codegen] jne        .Lfrom14070
[Codegen] .set .Llabel14070, .
[Codegen] .set .Lfrom14050, .Llabel14070
[Codegen] push       %rcx
[Codegen] .set .Llabel14071, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel14084, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom14094
[Codegen] .set .Llabel14094, .
[Codegen] .set .Llabel14094, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel14098, .
[Codegen] .set .Lfrom14070, .Llabel14098
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel14107, .
[Codegen] .set .Llabel14107, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom14118(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CheckObjCoercible
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ToAsyncIter
[Codegen] .set .Llabel14121, .
[Codegen] movabsq    $0xfffe000000000000, %rcx
[Codegen] xorq       0x8(%rsp), %rcx
[Codegen] movq       0x0(%rsp), %rbx
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] .set .Llabel14142, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $16, %ecx
[Codegen] .set .Llabel14155, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom14165
[Codegen] .set .Llabel14165, .
[Codegen] .set .Llabel14165, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] movq       %rax, %rcx
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] addq       $16, %rsp
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel14199, .
[Codegen] .set .Llabel14199, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom14210(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ToAsyncIter
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=MutateProto
[Codegen] .set .Llabel14213, .
[Codegen] movabsq    $0xfffe000000000000, %rcx
[Codegen] xorq       0x8(%rsp), %rcx
[Codegen] movq       0x0(%rsp), %rbx
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] .set .Llabel14234, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $16, %ecx
[Codegen] .set .Llabel14247, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom14257
[Codegen] .set .Llabel14257, .
[Codegen] .set .Llabel14257, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $8, %rsp
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel14274, .
[Codegen] .set .Llabel14274, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom14285(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=MutateProto
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=NewArray
[Codegen] .set .Llabel14288, .
[Codegen] .set .Llabel14288, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel14292, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel14296, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel14301, .
[Codegen] .set .Llabel14301, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel14320, .
[Codegen] .set .Llabel14320, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom14331(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=NewArray
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitElemArray
[Codegen] .set .Llabel14334, .
[Codegen] pop        %rcx
[Codegen] movabsq    $0xfffe000000000000, %rax
[Codegen] xorq       0x0(%rsp), %rax
[Codegen] .set .Llabel14349, .
[Codegen] movl       0x1(%r14), %ebx
[Codegen] .set .Llabel14353, .
[Codegen] movq       0x10(%rax), %rax
[Codegen] movq       %rcx, 0x0(%rax,%rbx,8)
[Codegen] addl       $1, %ebx
[Codegen] .set .Llabel14364, .
[Codegen] movl       %ebx, -0xc(%rax)
[Codegen] movq       %rcx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff5, %r11d
[Codegen] jne        .Lfrom14387
[Codegen] orl        $0x80, -0x10(%rax)
[Codegen] .set .Llabel14394, .
[Codegen] .set .Lfrom14387, .Llabel14394
[Codegen] movq       %rcx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff6, %r11d
[Codegen] jb         .Lfrom14414
[Codegen] movabsq    $0x7ffffff00000, %rbx
[Codegen] andq       %rcx, %rbx
[Codegen] cmpq       $0x0, 0x0(%rbx)
[Codegen] je         .Lfrom14437
[Codegen] .set .Llabel14437, .
[Codegen] movabsq    $0xfffe000000000000, %rax
[Codegen] xorq       0x0(%rsp), %rax
[Codegen] movq       %rax, %r11
[Codegen] andq       $0xfffffffffff00000, %r11
[Codegen] cmpq       $0x0, 0x0(%r11)
[Codegen] jne        .Lfrom14471
[Codegen] call       .Lfrom14476
[Codegen] .set .Llabel14476, .
[Codegen] .set .Lfrom14471, .Llabel14476
[Codegen] .set .Lfrom14437, .Llabel14476
[Codegen] .set .Lfrom14414, .Llabel14476
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel14485, .
[Codegen] .set .Llabel14485, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom14496(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitElemArray
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitElemInc
[Codegen] .set .Llabel14499, .
[Codegen] movq       0x10(%rsp), %rcx
[Codegen] movq       0x8(%rsp), %rbx
[Codegen] .set .Llabel14509, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel14513, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel14517, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel14522, .
[Codegen] .set .Llabel14522, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $8, %rsp
[Codegen] cmpl       $0xfff88000, 0x4(%rsp)
[Codegen] je         .Lfrom14544
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel14562, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel14571, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel14580, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel14589, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel14598, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel14607, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel14616, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel14625, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel14631, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel14637, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel14643, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel14649, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel14655, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel14661, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel14667, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabbba22, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom14707
[Codegen] .set .Llabel14707, .
[Codegen] int3
[Codegen] .set .Llabel14708, .
[Codegen] .set .Lfrom14707, .Llabel14708
[Codegen] call       .Lfrom14713
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel14718, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel14727, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel14736, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel14745, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel14754, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel14763, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel14772, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel14781, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel14787, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel14793, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel14799, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel14805, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel14811, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel14817, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel14823, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel14847, .
[Codegen] .set .Lfrom14544, .Llabel14847
[Codegen] addq       $1, 0x0(%rsp)
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel14866, .
[Codegen] .set .Llabel14866, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom14877(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitElemInc
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Hole
[Codegen] .set .Llabel14880, .
[Codegen] movabsq    $0xfffa800000000000, %r11
[Codegen] push       %r11
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel14901, .
[Codegen] .set .Llabel14901, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom14912(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Hole
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=RegExp
[Codegen] .set .Llabel14915, .
[Codegen] .set .Llabel14915, .
[Codegen] movl       0x1(%r14), %ebx
[Codegen] .set .Llabel14919, .
[Codegen] movq       -0x48(%rbp), %rcx
[Codegen] .set .Llabel14923, .
[Codegen] movq       0x40(%rcx), %rcx
[Codegen] .set .Llabel14927, .
[Codegen] movq       0x10(%rcx,%rbx,8), %rcx
[Codegen] testb      $0x7, %cl
[Codegen] je         .Lfrom14941
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel14959, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel14968, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel14977, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel14986, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel14995, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel15004, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel15013, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel15022, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel15028, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel15034, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel15040, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel15046, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel15052, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel15058, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel15064, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabae9e7, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom15104
[Codegen] .set .Llabel15104, .
[Codegen] int3
[Codegen] .set .Llabel15105, .
[Codegen] .set .Lfrom15104, .Llabel15105
[Codegen] call       .Lfrom15110
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel15115, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel15124, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel15133, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel15142, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel15151, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel15160, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel15169, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel15178, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel15184, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel15190, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel15196, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel15202, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel15208, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel15214, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel15220, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel15244, .
[Codegen] .set .Lfrom14941, .Llabel15244
[Codegen] push       %rcx
[Codegen] .set .Llabel15245, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel15258, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom15268
[Codegen] .set .Llabel15268, .
[Codegen] .set .Llabel15268, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] movq       %rax, %rcx
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] push       %rcx
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel15298, .
[Codegen] .set .Llabel15298, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom15309(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=RegExp
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Lambda
[Codegen] .set .Llabel15312, .
[Codegen] .set .Llabel15312, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel15316, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel15320, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel15325, .
[Codegen] .set .Llabel15325, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel15344, .
[Codegen] .set .Llabel15344, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom15355(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Lambda
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SetFunName
[Codegen] .set .Llabel15358, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] push       %rcx
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] xorq       %r11, %rcx
[Codegen] .set .Llabel15374, .
[Codegen] movzbl     0x1(%r14), %eax
[Codegen] push       %rax
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] .set .Llabel15382, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $24, %ecx
[Codegen] .set .Llabel15395, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom15405
[Codegen] .set .Llabel15405, .
[Codegen] .set .Llabel15405, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $2, %r14
[Codegen] .set .Llabel15418, .
[Codegen] .set .Llabel15418, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom15429(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SetFunName
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitHomeObject
[Codegen] .set .Llabel15432, .
[Codegen] pop        %rcx
[Codegen] movabsq    $0xfffe000000000000, %rax
[Codegen] xorq       0x0(%rsp), %rax
[Codegen] testl      $0x8, 0x18(%rax)
[Codegen] jne        .Lfrom15460
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel15478, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel15487, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel15496, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel15505, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel15514, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel15523, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel15532, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel15541, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel15547, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel15553, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel15559, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel15565, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel15571, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel15577, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel15583, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edaca6808, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom15623
[Codegen] .set .Llabel15623, .
[Codegen] int3
[Codegen] .set .Llabel15624, .
[Codegen] .set .Lfrom15623, .Llabel15624
[Codegen] call       .Lfrom15629
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel15634, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel15643, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel15652, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel15661, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel15670, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel15679, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel15688, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel15697, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel15703, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel15709, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel15715, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel15721, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel15727, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel15733, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel15739, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel15763, .
[Codegen] .set .Lfrom15460, .Llabel15763
[Codegen] movabsq    $0x75bb8e73a2b0, %r11
[Codegen] .set .Llabel15773, .
[Codegen] movq       0x0(%r11), %rbx
[Codegen] testl      $0x1, 0x10(%rbx)
[Codegen] je         .Lfrom15789
[Codegen] movq       0x38(%rax), %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff6, %r11d
[Codegen] jb         .Lfrom15810
[Codegen] push       %rdx
[Codegen] leaq       0x38(%rax), %rdx
[Codegen] call       .Lfrom15820
[Codegen] pop        %rdx
[Codegen] .set .Llabel15821, .
[Codegen] .set .Lfrom15810, .Llabel15821
[Codegen] .set .Llabel15821, .
[Codegen] .set .Lfrom15789, .Llabel15821
[Codegen] movq       %rcx, 0x38(%rax)
[Codegen] movq       %rax, %r11
[Codegen] andq       $0xfffffffffff00000, %r11
[Codegen] cmpq       $0x0, 0x0(%r11)
[Codegen] jne        .Lfrom15845
[Codegen] movq       %rcx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff6, %r11d
[Codegen] jb         .Lfrom15865
[Codegen] movabsq    $0x7ffffff00000, %rbx
[Codegen] andq       %rcx, %rbx
[Codegen] cmpq       $0x0, 0x0(%rbx)
[Codegen] je         .Lfrom15888
[Codegen] .set .Llabel15888, .
[Codegen] call       .Lfrom15893
[Codegen] .set .Llabel15893, .
[Codegen] .set .Lfrom15888, .Llabel15893
[Codegen] .set .Lfrom15865, .Llabel15893
[Codegen] .set .Lfrom15845, .Llabel15893
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel15902, .
[Codegen] .set .Llabel15902, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom15913(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitHomeObject
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CheckClassHeritage
[Codegen] .set .Llabel15916, .
[Codegen] movq       0x0(%rsp), %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel15921, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel15934, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom15944
[Codegen] .set .Llabel15944, .
[Codegen] .set .Llabel15944, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel15957, .
[Codegen] .set .Llabel15957, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom15968(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CheckClassHeritage
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=FunWithProto
[Codegen] .set .Llabel15971, .
[Codegen] pop        %rcx
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] xorq       %r11, %rcx
[Codegen] .set .Llabel15985, .
[Codegen] movq       -0x30(%rbp), %rbx
[Codegen] push       %rcx
[Codegen] push       %rbx
[Codegen] .set .Llabel15991, .
[Codegen] movl       0x1(%r14), %ebx
[Codegen] .set .Llabel15995, .
[Codegen] movq       -0x48(%rbp), %rcx
[Codegen] .set .Llabel15999, .
[Codegen] movq       0x40(%rcx), %rcx
[Codegen] .set .Llabel16003, .
[Codegen] movq       0x10(%rcx,%rbx,8), %rcx
[Codegen] testb      $0x7, %cl
[Codegen] je         .Lfrom16017
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel16035, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel16044, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel16053, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel16062, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel16071, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel16080, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel16089, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel16098, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel16104, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel16110, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel16116, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel16122, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel16128, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel16134, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel16140, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabae9e7, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom16180
[Codegen] .set .Llabel16180, .
[Codegen] int3
[Codegen] .set .Llabel16181, .
[Codegen] .set .Lfrom16180, .Llabel16181
[Codegen] call       .Lfrom16186
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel16191, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel16200, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel16209, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel16218, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel16227, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel16236, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel16245, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel16254, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel16260, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel16266, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel16272, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel16278, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel16284, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel16290, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel16296, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel16320, .
[Codegen] .set .Lfrom16017, .Llabel16320
[Codegen] push       %rcx
[Codegen] .set .Llabel16321, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $24, %ecx
[Codegen] .set .Llabel16334, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom16344
[Codegen] .set .Llabel16344, .
[Codegen] .set .Llabel16344, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] movq       %rax, %rcx
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] push       %rcx
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel16374, .
[Codegen] .set .Llabel16374, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom16385(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=FunWithProto
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=BuiltinObject
[Codegen] .set .Llabel16388, .
[Codegen] .set .Llabel16388, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel16392, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel16396, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel16401, .
[Codegen] .set .Llabel16401, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $2, %r14
[Codegen] .set .Llabel16420, .
[Codegen] .set .Llabel16420, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom16431(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=BuiltinObject
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Call
[Codegen] .set .Llabel16434, .
[Codegen] .set .Llabel16434, .
[Codegen] movzwl     0x1(%r14), %ecx
[Codegen] .set .Llabel16439, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel16443, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel16447, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel16452, .
[Codegen] .set .Llabel16452, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel16456, .
[Codegen] movzwl     0x1(%r14), %ebx
[Codegen] leaq       0x10(%rsp,%rbx,8), %rsp
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $3, %r14
[Codegen] .set .Llabel16481, .
[Codegen] .set .Llabel16481, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom16492(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Call
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CallContent
[Codegen] .set .Llabel16495, .
[Codegen] .set .Llabel16495, .
[Codegen] movzwl     0x1(%r14), %ecx
[Codegen] .set .Llabel16500, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel16504, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel16508, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel16513, .
[Codegen] .set .Llabel16513, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel16517, .
[Codegen] movzwl     0x1(%r14), %ebx
[Codegen] leaq       0x10(%rsp,%rbx,8), %rsp
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $3, %r14
[Codegen] .set .Llabel16542, .
[Codegen] .set .Llabel16542, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom16553(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CallContent
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CallIter
[Codegen] .set .Llabel16556, .
[Codegen] .set .Llabel16556, .
[Codegen] movzwl     0x1(%r14), %ecx
[Codegen] .set .Llabel16561, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel16565, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel16569, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel16574, .
[Codegen] .set .Llabel16574, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel16578, .
[Codegen] movzwl     0x1(%r14), %ebx
[Codegen] leaq       0x10(%rsp,%rbx,8), %rsp
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $3, %r14
[Codegen] .set .Llabel16603, .
[Codegen] .set .Llabel16603, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom16614(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CallIter
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CallContentIter
[Codegen] .set .Llabel16617, .
[Codegen] .set .Llabel16617, .
[Codegen] movzwl     0x1(%r14), %ecx
[Codegen] .set .Llabel16622, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel16626, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel16630, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel16635, .
[Codegen] .set .Llabel16635, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel16639, .
[Codegen] movzwl     0x1(%r14), %ebx
[Codegen] leaq       0x10(%rsp,%rbx,8), %rsp
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $3, %r14
[Codegen] .set .Llabel16664, .
[Codegen] .set .Llabel16664, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom16675(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CallContentIter
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CallIgnoresRv
[Codegen] .set .Llabel16678, .
[Codegen] .set .Llabel16678, .
[Codegen] movzwl     0x1(%r14), %ecx
[Codegen] .set .Llabel16683, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel16687, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel16691, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel16696, .
[Codegen] .set .Llabel16696, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel16700, .
[Codegen] movzwl     0x1(%r14), %ebx
[Codegen] leaq       0x10(%rsp,%rbx,8), %rsp
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $3, %r14
[Codegen] .set .Llabel16725, .
[Codegen] .set .Llabel16725, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom16736(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CallIgnoresRv
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SpreadCall
[Codegen] .set .Llabel16739, .
[Codegen] movl       $0x1, %ecx
[Codegen] .set .Llabel16744, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel16748, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel16752, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel16757, .
[Codegen] .set .Llabel16757, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $24, %rsp
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel16780, .
[Codegen] .set .Llabel16780, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom16791(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SpreadCall
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=OptimizeSpreadCall
[Codegen] .set .Llabel16794, .
[Codegen] pop        %rcx
[Codegen] .set .Llabel16795, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel16799, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel16803, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel16808, .
[Codegen] .set .Llabel16808, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel16827, .
[Codegen] .set .Llabel16827, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom16838(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=OptimizeSpreadCall
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Eval
[Codegen] .set .Llabel16841, .
[Codegen] .set .Llabel16841, .
[Codegen] movzwl     0x1(%r14), %ecx
[Codegen] .set .Llabel16846, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel16850, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel16854, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel16859, .
[Codegen] .set .Llabel16859, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel16863, .
[Codegen] movzwl     0x1(%r14), %ebx
[Codegen] leaq       0x10(%rsp,%rbx,8), %rsp
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $3, %r14
[Codegen] .set .Llabel16888, .
[Codegen] .set .Llabel16888, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom16899(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Eval
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SpreadEval
[Codegen] .set .Llabel16902, .
[Codegen] movl       $0x1, %ecx
[Codegen] .set .Llabel16907, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel16911, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel16915, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel16920, .
[Codegen] .set .Llabel16920, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $24, %rsp
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel16943, .
[Codegen] .set .Llabel16943, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom16954(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SpreadEval
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=StrictEval
[Codegen] .set .Llabel16957, .
[Codegen] .set .Llabel16957, .
[Codegen] movzwl     0x1(%r14), %ecx
[Codegen] .set .Llabel16962, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel16966, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel16970, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel16975, .
[Codegen] .set .Llabel16975, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel16979, .
[Codegen] movzwl     0x1(%r14), %ebx
[Codegen] leaq       0x10(%rsp,%rbx,8), %rsp
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $3, %r14
[Codegen] .set .Llabel17004, .
[Codegen] .set .Llabel17004, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom17015(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=StrictEval
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=StrictSpreadEval
[Codegen] .set .Llabel17018, .
[Codegen] movl       $0x1, %ecx
[Codegen] .set .Llabel17023, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel17027, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel17031, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel17036, .
[Codegen] .set .Llabel17036, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $24, %rsp
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel17059, .
[Codegen] .set .Llabel17059, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom17070(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=StrictSpreadEval
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ImplicitThis
[Codegen] .set .Llabel17073, .
[Codegen] pop        %rcx
[Codegen] movabsq    $0xfffe000000000000, %rbx
[Codegen] xorq       %rcx, %rbx
[Codegen] .set .Llabel17087, .
[Codegen] movq       0x0(%rbx), %rcx
[Codegen] .set .Llabel17090, .
[Codegen] movq       0x0(%rcx), %rcx
[Codegen] .set .Llabel17093, .
[Codegen] movq       0x0(%rcx), %rcx
[Codegen] testl      $0x80000, 0x8(%rcx)
[Codegen] jne        .Lfrom17109
[Codegen] movabsq    $0x5c7eddf2f700, %r11
[Codegen] cmpq       %r11, %rcx
[Codegen] jne        .Lfrom17128
[Codegen] movl       $0x0, %ecx
[Codegen] cmovne     %rcx, %rbx
[Codegen] movq       0x28(%rbx), %rcx
[Codegen] jmp        .Lfrom17146
[Codegen] .set .Llabel17146, .
[Codegen] .set .Lfrom17128, .Llabel17146
[Codegen] movabsq    $0xfff9800000000000, %rcx
[Codegen] .set .Llabel17156, .
[Codegen] .set .Lfrom17146, .Llabel17156
[Codegen] jmp        .Lfrom17161
[Codegen] .set .Llabel17161, .
[Codegen] .set .Lfrom17109, .Llabel17161
[Codegen] push       %rbx
[Codegen] .set .Llabel17162, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel17175, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom17185
[Codegen] .set .Llabel17185, .
[Codegen] .set .Llabel17185, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel17189, .
[Codegen] .set .Lfrom17161, .Llabel17189
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel17199, .
[Codegen] .set .Llabel17199, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom17210(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ImplicitThis
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CallSiteObj
[Codegen] .set .Llabel17213, .
[Codegen] .set .Llabel17213, .
[Codegen] movl       0x1(%r14), %ebx
[Codegen] .set .Llabel17217, .
[Codegen] movq       -0x48(%rbp), %rcx
[Codegen] .set .Llabel17221, .
[Codegen] movq       0x40(%rcx), %rcx
[Codegen] .set .Llabel17225, .
[Codegen] movq       0x10(%rcx,%rbx,8), %rcx
[Codegen] testb      $0x7, %cl
[Codegen] je         .Lfrom17239
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel17257, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel17266, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel17275, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel17284, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel17293, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel17302, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel17311, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel17320, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel17326, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel17332, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel17338, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel17344, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel17350, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel17356, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel17362, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabae9e7, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom17402
[Codegen] .set .Llabel17402, .
[Codegen] int3
[Codegen] .set .Llabel17403, .
[Codegen] .set .Lfrom17402, .Llabel17403
[Codegen] call       .Lfrom17408
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel17413, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel17422, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel17431, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel17440, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel17449, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel17458, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel17467, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel17476, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel17482, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel17488, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel17494, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel17500, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel17506, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel17512, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel17518, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel17542, .
[Codegen] .set .Lfrom17239, .Llabel17542
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] push       %rcx
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel17565, .
[Codegen] .set .Llabel17565, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom17576(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CallSiteObj
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=IsConstructing
[Codegen] .set .Llabel17579, .
[Codegen] movabsq    $0xfffa800000000005, %r11
[Codegen] push       %r11
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel17600, .
[Codegen] .set .Llabel17600, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom17611(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=IsConstructing
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=New
[Codegen] .set .Llabel17614, .
[Codegen] .set .Llabel17614, .
[Codegen] movzwl     0x1(%r14), %ecx
[Codegen] .set .Llabel17619, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel17623, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel17627, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel17632, .
[Codegen] .set .Llabel17632, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel17636, .
[Codegen] movzwl     0x1(%r14), %ebx
[Codegen] leaq       0x18(%rsp,%rbx,8), %rsp
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $3, %r14
[Codegen] .set .Llabel17661, .
[Codegen] .set .Llabel17661, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom17672(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=New
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=NewContent
[Codegen] .set .Llabel17675, .
[Codegen] .set .Llabel17675, .
[Codegen] movzwl     0x1(%r14), %ecx
[Codegen] .set .Llabel17680, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel17684, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel17688, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel17693, .
[Codegen] .set .Llabel17693, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel17697, .
[Codegen] movzwl     0x1(%r14), %ebx
[Codegen] leaq       0x18(%rsp,%rbx,8), %rsp
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $3, %r14
[Codegen] .set .Llabel17722, .
[Codegen] .set .Llabel17722, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom17733(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=NewContent
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SuperCall
[Codegen] .set .Llabel17736, .
[Codegen] .set .Llabel17736, .
[Codegen] movzwl     0x1(%r14), %ecx
[Codegen] .set .Llabel17741, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel17745, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel17749, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel17754, .
[Codegen] .set .Llabel17754, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel17758, .
[Codegen] movzwl     0x1(%r14), %ebx
[Codegen] leaq       0x18(%rsp,%rbx,8), %rsp
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $3, %r14
[Codegen] .set .Llabel17783, .
[Codegen] .set .Llabel17783, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom17794(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SuperCall
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SpreadNew
[Codegen] .set .Llabel17797, .
[Codegen] movl       $0x1, %ecx
[Codegen] .set .Llabel17802, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel17806, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel17810, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel17815, .
[Codegen] .set .Llabel17815, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $32, %rsp
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel17838, .
[Codegen] .set .Llabel17838, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom17849(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SpreadNew
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SpreadSuperCall
[Codegen] .set .Llabel17852, .
[Codegen] movl       $0x1, %ecx
[Codegen] .set .Llabel17857, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel17861, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel17865, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel17870, .
[Codegen] .set .Llabel17870, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $32, %rsp
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel17893, .
[Codegen] .set .Llabel17893, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom17904(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SpreadSuperCall
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SuperFun
[Codegen] .set .Llabel17907, .
[Codegen] pop        %rcx
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] xorq       %r11, %rcx
[Codegen] .set .Llabel17921, .
[Codegen] movq       0x0(%rcx), %rax
[Codegen] .set .Llabel17924, .
[Codegen] movq       0x0(%rax), %rax
[Codegen] .set .Llabel17927, .
[Codegen] movq       0x0(%rax), %rax
[Codegen] movabsq    $0x5c7eddf37180, %r11
[Codegen] cmpq       %r11, %rax
[Codegen] je         .Lfrom17949
[Codegen] movabsq    $0x5c7eddf37240, %r11
[Codegen] cmpq       %r11, %rax
[Codegen] je         .Lfrom17968
[Codegen] movl       $0x0, %eax
[Codegen] cmove      %rax, %rcx
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel17995, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel18004, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel18013, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel18022, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel18031, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel18040, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel18049, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel18058, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel18064, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel18070, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel18076, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel18082, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel18088, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel18094, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel18100, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabbba43, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom18140
[Codegen] .set .Llabel18140, .
[Codegen] int3
[Codegen] .set .Llabel18141, .
[Codegen] .set .Lfrom18140, .Llabel18141
[Codegen] call       .Lfrom18146
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel18151, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel18160, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel18169, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel18178, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel18187, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel18196, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel18205, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel18214, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel18220, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel18226, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel18232, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel18238, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel18244, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel18250, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel18256, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel18280, .
[Codegen] .set .Lfrom17968, .Llabel18280
[Codegen] .set .Lfrom17949, .Llabel18280
[Codegen] .set .Llabel18280, .
[Codegen] movq       0x0(%rcx), %rbx
[Codegen] .set .Llabel18283, .
[Codegen] movq       0x0(%rbx), %rbx
[Codegen] .set .Llabel18286, .
[Codegen] movq       0x10(%rbx), %rbx
[Codegen] cmpq       $0x1, %rbx
[Codegen] jne        .Lfrom18300
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel18318, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel18327, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel18336, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel18345, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel18354, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel18363, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel18372, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel18381, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel18387, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel18393, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel18399, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel18405, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel18411, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel18417, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel18423, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabbba76, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom18463
[Codegen] .set .Llabel18463, .
[Codegen] int3
[Codegen] .set .Llabel18464, .
[Codegen] .set .Lfrom18463, .Llabel18464
[Codegen] call       .Lfrom18469
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel18474, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel18483, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel18492, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel18501, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel18510, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel18519, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel18528, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel18537, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel18543, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel18549, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel18555, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel18561, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel18567, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel18573, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel18579, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel18603, .
[Codegen] .set .Lfrom18300, .Llabel18603
[Codegen] testq      %rbx, %rbx
[Codegen] je         .Lfrom18612
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] orq        %r11, %rbx
[Codegen] jmp        .Lfrom18630
[Codegen] .set .Llabel18630, .
[Codegen] .set .Lfrom18612, .Llabel18630
[Codegen] movabsq    $0xfffa000000000000, %rbx
[Codegen] .set .Llabel18640, .
[Codegen] .set .Lfrom18630, .Llabel18640
[Codegen] push       %rbx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel18650, .
[Codegen] .set .Llabel18650, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom18661(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SuperFun
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CheckThisReinit
[Codegen] .set .Llabel18664, .
[Codegen] movq       0x0(%rsp), %rcx
[Codegen] movq       %rcx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff5, %r11d
[Codegen] je         .Lfrom18688
[Codegen] .set .Llabel18688, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $0, %ecx
[Codegen] .set .Llabel18701, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom18711
[Codegen] .set .Llabel18711, .
[Codegen] .set .Llabel18711, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel18715, .
[Codegen] .set .Lfrom18688, .Llabel18715
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel18724, .
[Codegen] .set .Llabel18724, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom18735(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CheckThisReinit
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Generator
[Codegen] .set .Llabel18738, .
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel18746, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel18759, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom18769
[Codegen] .set .Llabel18769, .
[Codegen] .set .Llabel18769, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] movq       %rax, %rcx
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel18799, .
[Codegen] .set .Llabel18799, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom18810(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Generator
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitialYield
[Codegen] .set .Llabel18813, .
[Codegen] movabsq    $0xfffe000000000000, %rax
[Codegen] xorq       0x0(%rsp), %rax
[Codegen] movq       %rbp, %rbx
[Codegen] subq       $72, %rbx
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] push       %r14
[Codegen] push       %rcx
[Codegen] push       %rbx
[Codegen] push       %rax
[Codegen] .set .Llabel18845, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $32, %ecx
[Codegen] .set .Llabel18858, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom18868
[Codegen] .set .Llabel18868, .
[Codegen] .set .Llabel18868, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] movq       0x0(%rsp), %rcx
[Codegen] jmp        .Lfrom18881
[Codegen] addq       $4, %r14
[Codegen] .set .Llabel18890, .
[Codegen] .set .Llabel18890, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom18901(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitialYield
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=AfterYield
[Codegen] .set .Llabel18904, .
[Codegen] jmp        .Lfrom18909
[Codegen] call       .Lfrom18914
[Codegen] .set .Llabel18914, .
[Codegen] .set .Lfrom18909, .Llabel18914
[Codegen] .set .Llabel18914, .
[Codegen] movl       0x1(%r14), %ecx
[Codegen] .set .Llabel18918, .
[Codegen] movq       -0x28(%rbp), %rbx
[Codegen] leaq       0xc0(%rbx,%rcx,8), %rbx
[Codegen] .set .Llabel18930, .
[Codegen] movq       %rbx, -0x38(%rbp)
[Codegen] jmp        .Lfrom18939
[Codegen] movabsq    $0x75bb8e73a2b8, %r11
[Codegen] .set .Llabel18949, .
[Codegen] movq       0x0(%r11), %rcx
[Codegen] testl      $0x1, 0x478(%rcx)
[Codegen] je         .Lfrom18968
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel18976, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel18989, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom18999
[Codegen] .set .Llabel18999, .
[Codegen] .set .Llabel18999, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel19003, .
[Codegen] .set .Lfrom18968, .Llabel19003
[Codegen] .set .Lfrom18939, .Llabel19003
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel19012, .
[Codegen] .set .Llabel19012, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom19023(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=AfterYield
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=FinalYieldRval
[Codegen] .set .Llabel19026, .
[Codegen] pop        %rcx
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] xorq       %r11, %rcx
[Codegen] push       %r14
[Codegen] push       %rcx
[Codegen] .set .Llabel19043, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $16, %ecx
[Codegen] .set .Llabel19056, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom19066
[Codegen] .set .Llabel19066, .
[Codegen] .set .Llabel19066, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] movq       -0x8(%rbp), %rcx
[Codegen] jmp        .Lfrom19079
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel19097, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel19106, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel19115, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel19124, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel19133, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel19142, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel19151, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel19160, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel19166, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel19172, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel19178, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel19184, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel19190, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel19196, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel19202, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabb6981, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom19242
[Codegen] .set .Llabel19242, .
[Codegen] int3
[Codegen] .set .Llabel19243, .
[Codegen] .set .Lfrom19242, .Llabel19243
[Codegen] call       .Lfrom19248
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel19253, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel19262, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel19271, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel19280, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel19289, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel19298, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel19307, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel19316, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel19322, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel19328, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel19334, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel19340, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel19346, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel19352, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel19358, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=FinalYieldRval
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Yield
[Codegen] .set .Llabel19382, .
[Codegen] pop        %rcx
[Codegen] movabsq    $0xfffe000000000000, %rax
[Codegen] xorq       %rcx, %rax
[Codegen] movq       %rbp, %rbx
[Codegen] subq       $72, %rbx
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] push       %r14
[Codegen] push       %rcx
[Codegen] push       %rbx
[Codegen] push       %rax
[Codegen] .set .Llabel19414, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $32, %ecx
[Codegen] .set .Llabel19427, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom19437
[Codegen] .set .Llabel19437, .
[Codegen] .set .Llabel19437, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] movq       0x0(%rsp), %rcx
[Codegen] jmp        .Lfrom19450
[Codegen] addq       $4, %r14
[Codegen] .set .Llabel19459, .
[Codegen] .set .Llabel19459, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom19470(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Yield
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=IsGenClosing
[Codegen] .set .Llabel19473, .
[Codegen] movq       0x0(%rsp), %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff5, %r11d
[Codegen] je         .Lfrom19494
[Codegen] movabsq    $0xfff9000000000000, %rcx
[Codegen] jmp        .Lfrom19509
[Codegen] .set .Llabel19509, .
[Codegen] .set .Lfrom19494, .Llabel19509
[Codegen] movabsq    $0xfff9000000000001, %rcx
[Codegen] .set .Llabel19519, .
[Codegen] .set .Lfrom19509, .Llabel19519
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel19529, .
[Codegen] .set .Llabel19529, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom19540(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=IsGenClosing
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=AsyncAwait
[Codegen] .set .Llabel19543, .
[Codegen] movq       0x8(%rsp), %rbx
[Codegen] movabsq    $0xfffe000000000000, %rcx
[Codegen] xorq       0x0(%rsp), %rcx
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] .set .Llabel19564, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $16, %ecx
[Codegen] .set .Llabel19577, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom19587
[Codegen] .set .Llabel19587, .
[Codegen] .set .Llabel19587, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] movq       %rax, %rcx
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] addq       $16, %rsp
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel19621, .
[Codegen] .set .Llabel19621, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom19632(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=AsyncAwait
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=AsyncResolve
[Codegen] .set .Llabel19635, .
[Codegen] movq       0x8(%rsp), %rbx
[Codegen] movabsq    $0xfffe000000000000, %rcx
[Codegen] xorq       0x0(%rsp), %rcx
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] .set .Llabel19656, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $16, %ecx
[Codegen] .set .Llabel19669, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom19679
[Codegen] .set .Llabel19679, .
[Codegen] .set .Llabel19679, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] movq       %rax, %rcx
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] addq       $16, %rsp
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel19713, .
[Codegen] .set .Llabel19713, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom19724(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=AsyncResolve
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=AsyncReject
[Codegen] .set .Llabel19727, .
[Codegen] movq       0x10(%rsp), %rax
[Codegen] movq       0x8(%rsp), %rbx
[Codegen] movabsq    $0xfffe000000000000, %rcx
[Codegen] xorq       0x0(%rsp), %rcx
[Codegen] push       %rbx
[Codegen] push       %rax
[Codegen] push       %rcx
[Codegen] .set .Llabel19754, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $24, %ecx
[Codegen] .set .Llabel19767, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom19777
[Codegen] .set .Llabel19777, .
[Codegen] .set .Llabel19777, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] movq       %rax, %rcx
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] addq       $24, %rsp
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel19811, .
[Codegen] .set .Llabel19811, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom19822(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=AsyncReject
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Await
[Codegen] .set .Llabel19825, .
[Codegen] pop        %rcx
[Codegen] movabsq    $0xfffe000000000000, %rax
[Codegen] xorq       %rcx, %rax
[Codegen] movq       %rbp, %rbx
[Codegen] subq       $72, %rbx
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] push       %r14
[Codegen] push       %rcx
[Codegen] push       %rbx
[Codegen] push       %rax
[Codegen] .set .Llabel19857, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $32, %ecx
[Codegen] .set .Llabel19870, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom19880
[Codegen] .set .Llabel19880, .
[Codegen] .set .Llabel19880, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] movq       0x0(%rsp), %rcx
[Codegen] jmp        .Lfrom19893
[Codegen] addq       $4, %r14
[Codegen] .set .Llabel19902, .
[Codegen] .set .Llabel19902, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom19913(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Await
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CanSkipAwait
[Codegen] .set .Llabel19916, .
[Codegen] movq       0x0(%rsp), %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel19921, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel19934, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom19944
[Codegen] .set .Llabel19944, .
[Codegen] .set .Llabel19944, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] movq       %rax, %rcx
[Codegen] movabsq    $0xfff9000000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel19974, .
[Codegen] .set .Llabel19974, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom19985(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CanSkipAwait
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=MaybeExtractAwaitValue
[Codegen] .set .Llabel19988, .
[Codegen] movq       0x8(%rsp), %rcx
[Codegen] movl       0x0(%rsp), %ebx
[Codegen] testb      $0xff, %bl
[Codegen] je         .Lfrom20005
[Codegen] push       %rcx
[Codegen] .set .Llabel20006, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel20019, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom20029
[Codegen] .set .Llabel20029, .
[Codegen] .set .Llabel20029, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] movq       %rcx, 0x8(%rsp)
[Codegen] .set .Llabel20038, .
[Codegen] .set .Lfrom20005, .Llabel20038
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel20047, .
[Codegen] .set .Llabel20047, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom20058(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=MaybeExtractAwaitValue
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ResumeKind
[Codegen] .set .Llabel20061, .
[Codegen] .set .Llabel20061, .
[Codegen] movzbl     0x1(%r14), %ecx
[Codegen] movabsq    $0xfff8800000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] push       %rcx
[Codegen] addq       $2, %r14
[Codegen] .set .Llabel20089, .
[Codegen] .set .Llabel20089, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom20100(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ResumeKind
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CheckResumeKind
[Codegen] .set .Llabel20103, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] movq       %rbx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff1, %r11d
[Codegen] je         .Lfrom20125
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel20143, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel20152, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel20161, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel20170, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel20179, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel20188, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel20197, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel20206, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel20212, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel20218, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel20224, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel20230, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel20236, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel20242, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel20248, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabbbd5a, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom20288
[Codegen] .set .Llabel20288, .
[Codegen] int3
[Codegen] .set .Llabel20289, .
[Codegen] .set .Lfrom20288, .Llabel20289
[Codegen] call       .Lfrom20294
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel20299, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel20308, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel20317, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel20326, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel20335, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel20344, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel20353, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel20362, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel20368, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel20374, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel20380, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel20386, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel20392, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel20398, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel20404, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel20428, .
[Codegen] .set .Lfrom20125, .Llabel20428
[Codegen] movl       %ebx, %ebx
[Codegen] testl      %ebx, %ebx
[Codegen] je         .Lfrom20438
[Codegen] push       %rbx
[Codegen] movq       0x8(%rsp), %rax
[Codegen] push       %rax
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] xorq       %r11, %rcx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %rax
[Codegen] subq       $72, %rax
[Codegen] push       %rax
[Codegen] .set .Llabel20467, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $32, %ecx
[Codegen] .set .Llabel20480, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom20490
[Codegen] .set .Llabel20490, .
[Codegen] .set .Llabel20490, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel20494, .
[Codegen] .set .Lfrom20438, .Llabel20494
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel20503, .
[Codegen] .set .Llabel20503, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom20514(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CheckResumeKind
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Resume
[Codegen] .set .Llabel20517, .
[Codegen] testb      $0x7, %spl
[Codegen] je         .Lfrom20527
[Codegen] .set .Llabel20527, .
[Codegen] int3
[Codegen] .set .Llabel20528, .
[Codegen] .set .Lfrom20527, .Llabel20528
[Codegen] .set .Llabel20528, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movabsq    $0xfffe000000000000, %rax
[Codegen] xorq       0x10(%rsp), %rax
[Codegen] movabsq    $0xfffe000000000000, %rcx
[Codegen] xorq       0x18(%rax), %rcx
[Codegen] leaq       0x0(%rsp), %rdx
[Codegen] .set .Llabel20565, .
[Codegen] movq       0x28(%rcx), %rbx
[Codegen] testq      $0x3, 0x8(%rbx)
[Codegen] jne        .Lfrom20583
[Codegen] .set .Llabel20583, .
[Codegen] movl       0x18(%rcx), %esi
[Codegen] shrl       $16, %esi
[Codegen] movq       %rsp, %rdi
[Codegen] testb      $0x7, %spl
[Codegen] je         .Lfrom20602
[Codegen] .set .Llabel20602, .
[Codegen] int3
[Codegen] .set .Llabel20603, .
[Codegen] .set .Lfrom20602, .Llabel20603
[Codegen] testb      $0x1, %sil
[Codegen] je         .Lfrom20613
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] jmp        .Lfrom20622
[Codegen] .set .Llabel20622, .
[Codegen] .set .Lfrom20613, .Llabel20622
[Codegen] testb      $0xf, %spl
[Codegen] jne        .Lfrom20632
[Codegen] subq       $8, %rsp
[Codegen] .set .Llabel20636, .
[Codegen] .set .Lfrom20632, .Llabel20636
[Codegen] .set .Lfrom20622, .Llabel20636
[Codegen] subq       %rsp, %rdi
[Codegen] testq      %rdi, %rdi
[Codegen] je         .Lfrom20648
[Codegen] xorl       %r11d, %r11d
[Codegen] movq       %r11, 0x0(%rsp)
[Codegen] .set .Llabel20655, .
[Codegen] .set .Lfrom20648, .Llabel20655
[Codegen] testl      %esi, %esi
[Codegen] je         .Lfrom20663
[Codegen] .set .Llabel20663, .
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] subl       $1, %esi
[Codegen] jne        .Llabel20663
[Codegen] .set .Llabel20680, .
[Codegen] .set .Lfrom20663, .Llabel20680
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] movq       %rbp, %rsi
[Codegen] subq       %rsp, %rsi
[Codegen] .set .Llabel20698, .
[Codegen] movl       %esi, -0xc(%rbp)
[Codegen] push       %rcx
[Codegen] push       $0x1
[Codegen] call       .Lfrom20709
[Codegen] .set .Llabel20709, .
[Codegen] jmp        .Lfrom20714
[Codegen] .set .Llabel20714, .
[Codegen] .set .Lfrom20709, .Llabel20714
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] movabsq    $0x75bb8e7303bc, %r11
[Codegen] cmpl       $0x0, 0x0(%r11)
[Codegen] je         .Lfrom20738
[Codegen] movabsq    $0x75bb8e73a200, %rsi
[Codegen] .set .Llabel20748, .
[Codegen] movq       0x150(%rsi), %rsi
[Codegen] .set .Llabel20755, .
[Codegen] movq       %rbp, 0xe0(%rsi)
[Codegen] .set .Llabel20762, .
[Codegen] .set .Lfrom20738, .Llabel20762
[Codegen] subq       $72, %rsp
[Codegen] testb      $0x7, %spl
[Codegen] je         .Lfrom20776
[Codegen] .set .Llabel20776, .
[Codegen] int3
[Codegen] .set .Llabel20777, .
[Codegen] .set .Lfrom20776, .Llabel20777
[Codegen] .set .Llabel20777, .
[Codegen] movl       $0x4, -0x10(%rbp)
[Codegen] movabsq    $0xfffe000000000000, %rsi
[Codegen] xorq       0x20(%rax), %rsi
[Codegen] .set .Llabel20798, .
[Codegen] movq       %rsi, -0x30(%rbp)
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] xorq       0x28(%rax), %r11
[Codegen] movq       %r11, %rsi
[Codegen] shrq       $47, %r11
[Codegen] jne        .Lfrom20829
[Codegen] .set .Llabel20829, .
[Codegen] movq       %rsi, -0x20(%rbp)
[Codegen] orl        $0x10, -0x10(%rbp)
[Codegen] .set .Llabel20837, .
[Codegen] .set .Lfrom20829, .Llabel20837
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] xorq       0x30(%rax), %r11
[Codegen] movq       %r11, %rsi
[Codegen] shrq       $47, %r11
[Codegen] jne        .Lfrom20864
[Codegen] .set .Llabel20864, .
[Codegen] movq       0x10(%rsi), %rsi
[Codegen] .set .Llabel20868, .
[Codegen] movl       -0xc(%rsi), %ecx
[Codegen] .set .Llabel20871, .
[Codegen] movl       $0x0, -0xc(%rsi)
[Codegen] testl      %ecx, %ecx
[Codegen] je         .Lfrom20886
[Codegen] .set .Llabel20886, .
[Codegen] push       0x0(%rsi)
[Codegen] movabsq    $0x75bb8e73a2b0, %r11
[Codegen] .set .Llabel20898, .
[Codegen] movq       0x0(%r11), %rbx
[Codegen] testl      $0x1, 0x10(%rbx)
[Codegen] je         .Lfrom20914
[Codegen] movq       0x0(%rsi), %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff6, %r11d
[Codegen] jb         .Lfrom20934
[Codegen] push       %rdx
[Codegen] leaq       0x0(%rsi), %rdx
[Codegen] call       .Lfrom20943
[Codegen] pop        %rdx
[Codegen] .set .Llabel20944, .
[Codegen] .set .Lfrom20934, .Llabel20944
[Codegen] .set .Llabel20944, .
[Codegen] .set .Lfrom20914, .Llabel20944
[Codegen] addq       $8, %rsi
[Codegen] subl       $1, %ecx
[Codegen] jne        .Llabel20886
[Codegen] .set .Llabel20953, .
[Codegen] .set .Lfrom20886, .Llabel20953
[Codegen] .set .Llabel20953, .
[Codegen] .set .Lfrom20864, .Llabel20953
[Codegen] push       0x8(%rdx)
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] orq        %rax, %r11
[Codegen] push       %r11
[Codegen] push       0x0(%rdx)
[Codegen] .set .Llabel20973, .
[Codegen] movq       0x0(%rax), %rsi
[Codegen] .set .Llabel20976, .
[Codegen] movq       0x0(%rsi), %rsi
[Codegen] .set .Llabel20979, .
[Codegen] movq       0x8(%rsi), %rsi
[Codegen] movabsq    $0x75bb8e73a2b8, %r11
[Codegen] .set .Llabel20993, .
[Codegen] movq       %rsi, 0x0(%r11)
[Codegen] movabsq    $0xfffe000000000000, %rbx
[Codegen] xorq       0x18(%rax), %rbx
[Codegen] .set .Llabel21010, .
[Codegen] movq       0x28(%rbx), %rbx
[Codegen] movl       0x38(%rax), %esi
[Codegen] movabsq    $0xfff880007fffffff, %r11
[Codegen] movq       %r11, 0x38(%rax)
[Codegen] testq      $0x3, 0x8(%rbx)
[Codegen] je         .Lfrom21045
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel21063, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel21072, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel21081, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel21090, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel21099, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel21108, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel21117, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel21126, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel21132, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel21138, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel21144, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel21150, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel21156, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel21162, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel21168, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabb5936, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom21208
[Codegen] .set .Llabel21208, .
[Codegen] int3
[Codegen] .set .Llabel21209, .
[Codegen] .set .Lfrom21208, .Llabel21209
[Codegen] call       .Lfrom21214
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel21219, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel21228, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel21237, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel21246, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel21255, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel21264, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel21273, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel21282, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel21288, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel21294, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel21300, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel21306, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel21312, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel21318, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel21324, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel21348, .
[Codegen] .set .Lfrom21045, .Llabel21348
[Codegen] .set .Llabel21348, .
[Codegen] movq       0x8(%rbx), %rcx
[Codegen] leaq       0x68(%rcx), %rcx
[Codegen] .set .Llabel21356, .
[Codegen] movq       %rcx, -0x28(%rbp)
[Codegen] testq      $0x3, 0x8(%rbx)
[Codegen] je         .Lfrom21374
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel21392, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel21401, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel21410, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel21419, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel21428, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel21437, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel21446, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel21455, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel21461, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel21467, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel21473, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel21479, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel21485, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel21491, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel21497, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabb5936, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom21537
[Codegen] .set .Llabel21537, .
[Codegen] int3
[Codegen] .set .Llabel21538, .
[Codegen] .set .Lfrom21537, .Llabel21538
[Codegen] call       .Lfrom21543
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel21548, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel21557, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel21566, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel21575, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel21584, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel21593, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel21602, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel21611, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel21617, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel21623, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel21629, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel21635, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel21641, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel21647, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel21653, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel21677, .
[Codegen] .set .Lfrom21374, .Llabel21677
[Codegen] .set .Llabel21677, .
[Codegen] movq       0x8(%rbx), %rcx
[Codegen] .set .Llabel21681, .
[Codegen] movq       0x28(%rcx), %rcx
[Codegen] cmpq       $0x5, %rcx
[Codegen] jbe        .Lfrom21695
[Codegen] .set .Llabel21695, .
[Codegen] movl       0x24(%rcx), %ebx
[Codegen] addq       %rcx, %rbx
[Codegen] .set .Llabel21701, .
[Codegen] movq       0x0(%rbx,%rsi,8), %rcx
[Codegen] jmp        *%rcx
[Codegen] .set .Llabel21707, .
[Codegen] .set .Lfrom21695, .Llabel21707
[Codegen] orl        $0x2, -0x10(%rbp)
[Codegen] .set .Llabel21711, .
[Codegen] movq       %rbx, -0x48(%rbp)
[Codegen] .set .Llabel21715, .
[Codegen] movq       0x48(%rbx), %rbx
[Codegen] .set .Llabel21719, .
[Codegen] movq       0x8(%rbx), %rbx
[Codegen] .set .Llabel21723, .
[Codegen] movl       0x0(%rbx), %ecx
[Codegen] leaq       0x0(%rcx,%rsi,4), %rcx
[Codegen] .set .Llabel21729, .
[Codegen] movl       0x0(%rbx,%rcx,1), %esi
[Codegen] leaq       0x21(%rbx,%rsi,1), %rbx
[Codegen] .set .Llabel21737, .
[Codegen] movq       %rbx, -0x40(%rbp)
[Codegen] jmp        .Lfrom21746
[Codegen] .set .Llabel21746, .
[Codegen] .set .Lfrom20583, .Llabel21746
[Codegen] push       %rdx
[Codegen] push       %rax
[Codegen] .set .Llabel21748, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $16, %ecx
[Codegen] .set .Llabel21761, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom21771
[Codegen] .set .Llabel21771, .
[Codegen] .set .Llabel21771, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel21775, .
[Codegen] .set .Lfrom20714, .Llabel21775
[Codegen] leaq       0x0(%rsp), %rsp
[Codegen] .set .Llabel21779, .
[Codegen] movq       -0x30(%rbp), %rax
[Codegen] .set .Llabel21783, .
[Codegen] movq       0x0(%rax), %rax
[Codegen] .set .Llabel21786, .
[Codegen] movq       0x0(%rax), %rax
[Codegen] .set .Llabel21789, .
[Codegen] movq       0x8(%rax), %rax
[Codegen] movabsq    $0x75bb8e73a2b8, %r11
[Codegen] .set .Llabel21803, .
[Codegen] movq       %rax, 0x0(%r11)
[Codegen] .set .Llabel21806, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $24, %rsp
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel21824, .
[Codegen] .set .Llabel21824, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom21835(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Resume
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=JumpTarget
[Codegen] .set .Llabel21838, .
[Codegen] jmp        .Lfrom21843
[Codegen] call       .Lfrom21848
[Codegen] .set .Llabel21848, .
[Codegen] .set .Lfrom21843, .Llabel21848
[Codegen] .set .Llabel21848, .
[Codegen] movl       0x1(%r14), %ecx
[Codegen] .set .Llabel21852, .
[Codegen] movq       -0x28(%rbp), %rbx
[Codegen] leaq       0xc0(%rbx,%rcx,8), %rbx
[Codegen] .set .Llabel21864, .
[Codegen] movq       %rbx, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel21877, .
[Codegen] .set .Llabel21877, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom21888(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=JumpTarget
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=LoopHead
[Codegen] .set .Llabel21891, .
[Codegen] jmp        .Lfrom21896
[Codegen] call       .Lfrom21901
[Codegen] .set .Llabel21901, .
[Codegen] .set .Lfrom21896, .Llabel21901
[Codegen] .set .Llabel21901, .
[Codegen] movl       0x1(%r14), %ecx
[Codegen] .set .Llabel21905, .
[Codegen] movq       -0x28(%rbp), %rbx
[Codegen] leaq       0xc0(%rbx,%rcx,8), %rbx
[Codegen] .set .Llabel21917, .
[Codegen] movq       %rbx, -0x38(%rbp)
[Codegen] movabsq    $0x75bb8e73adf0, %r11
[Codegen] cmpl       $0x0, 0x0(%r11)
[Codegen] je         .Lfrom21941
[Codegen] .set .Llabel21941, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $0, %ecx
[Codegen] .set .Llabel21954, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom21964
[Codegen] .set .Llabel21964, .
[Codegen] .set .Llabel21964, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel21968, .
[Codegen] .set .Lfrom21941, .Llabel21968
[Codegen] .set .Llabel21968, .
[Codegen] movq       -0x48(%rbp), %rax
[Codegen] testq      $0x3, 0x8(%rax)
[Codegen] je         .Lfrom21986
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel22004, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel22013, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel22022, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel22031, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel22040, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel22049, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel22058, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel22067, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel22073, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel22079, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel22085, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel22091, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel22097, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel22103, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel22109, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabb5936, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom22149
[Codegen] .set .Llabel22149, .
[Codegen] int3
[Codegen] .set .Llabel22150, .
[Codegen] .set .Lfrom22149, .Llabel22150
[Codegen] call       .Lfrom22155
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel22160, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel22169, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel22178, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel22187, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel22196, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel22205, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel22214, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel22223, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel22229, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel22235, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel22241, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel22247, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel22253, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel22259, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel22265, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel22289, .
[Codegen] .set .Lfrom21986, .Llabel22289
[Codegen] .set .Llabel22289, .
[Codegen] movq       0x8(%rax), %rax
[Codegen] .set .Llabel22293, .
[Codegen] movl       0x110(%rax), %ecx
[Codegen] addl       $1, %ecx
[Codegen] .set .Llabel22302, .
[Codegen] movl       %ecx, 0x110(%rax)
[Codegen] testl      %ecx, %ecx
[Codegen] jbe        .Lfrom22316
[Codegen] testq      $0x1, 0x28(%rax)
[Codegen] jne        .Lfrom22330
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel22338, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel22351, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom22361
[Codegen] .set .Llabel22361, .
[Codegen] .set .Llabel22361, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom22374
[Codegen] jmp        *%rax
[Codegen] .set .Llabel22376, .
[Codegen] .set .Lfrom22374, .Llabel22376
[Codegen] .set .Lfrom22330, .Llabel22376
[Codegen] .set .Lfrom22316, .Llabel22376
[Codegen] addq       $6, %r14
[Codegen] .set .Llabel22385, .
[Codegen] .set .Llabel22385, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom22396(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=LoopHead
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Goto
[Codegen] .set .Llabel22399, .
[Codegen] movslq     0x1(%r14), %rbx
[Codegen] addq       %rbx, %r14
[Codegen] jmp        .Llabel1516
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel22429, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel22438, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel22447, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel22456, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel22465, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel22474, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel22483, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel22492, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel22498, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel22504, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel22510, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel22516, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel22522, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel22528, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel22534, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabb6981, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom22574
[Codegen] .set .Llabel22574, .
[Codegen] int3
[Codegen] .set .Llabel22575, .
[Codegen] .set .Lfrom22574, .Llabel22575
[Codegen] call       .Lfrom22580
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel22585, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel22594, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel22603, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel22612, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel22621, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel22630, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel22639, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel22648, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel22654, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel22660, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel22666, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel22672, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel22678, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel22684, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel22690, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Goto
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=JumpIfFalse
[Codegen] .set .Llabel22714, .
[Codegen] pop        %rcx
[Codegen] .set .Llabel22715, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel22719, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel22723, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel22728, .
[Codegen] .set .Llabel22728, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] testl      %ecx, %ecx
[Codegen] jne        .Lfrom22740
[Codegen] movslq     0x1(%r14), %rbx
[Codegen] addq       %rbx, %r14
[Codegen] jmp        .Llabel1516
[Codegen] .set .Llabel22752, .
[Codegen] .set .Lfrom22740, .Llabel22752
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel22766, .
[Codegen] .set .Llabel22766, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom22777(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=JumpIfFalse
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=JumpIfTrue
[Codegen] .set .Llabel22780, .
[Codegen] pop        %rcx
[Codegen] .set .Llabel22781, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel22785, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel22789, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel22794, .
[Codegen] .set .Llabel22794, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] testl      %ecx, %ecx
[Codegen] je         .Lfrom22806
[Codegen] movslq     0x1(%r14), %rbx
[Codegen] addq       %rbx, %r14
[Codegen] jmp        .Llabel1516
[Codegen] .set .Llabel22818, .
[Codegen] .set .Lfrom22806, .Llabel22818
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel22832, .
[Codegen] .set .Llabel22832, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom22843(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=JumpIfTrue
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=And
[Codegen] .set .Llabel22846, .
[Codegen] movq       0x0(%rsp), %rcx
[Codegen] .set .Llabel22850, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel22854, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel22858, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel22863, .
[Codegen] .set .Llabel22863, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] testl      %ecx, %ecx
[Codegen] jne        .Lfrom22875
[Codegen] movslq     0x1(%r14), %rbx
[Codegen] addq       %rbx, %r14
[Codegen] jmp        .Llabel1516
[Codegen] .set .Llabel22887, .
[Codegen] .set .Lfrom22875, .Llabel22887
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel22901, .
[Codegen] .set .Llabel22901, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom22912(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=And
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Or
[Codegen] .set .Llabel22915, .
[Codegen] movq       0x0(%rsp), %rcx
[Codegen] .set .Llabel22919, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel22923, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel22927, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel22932, .
[Codegen] .set .Llabel22932, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] testl      %ecx, %ecx
[Codegen] je         .Lfrom22944
[Codegen] movslq     0x1(%r14), %rbx
[Codegen] addq       %rbx, %r14
[Codegen] jmp        .Llabel1516
[Codegen] .set .Llabel22956, .
[Codegen] .set .Lfrom22944, .Llabel22956
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel22970, .
[Codegen] .set .Llabel22970, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom22981(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Or
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Coalesce
[Codegen] .set .Llabel22984, .
[Codegen] movq       0x0(%rsp), %rcx
[Codegen] movq       %rcx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff3, %r11d
[Codegen] je         .Lfrom23008
[Codegen] movq       %rcx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff4, %r11d
[Codegen] je         .Lfrom23028
[Codegen] movslq     0x1(%r14), %rbx
[Codegen] addq       %rbx, %r14
[Codegen] jmp        .Llabel1516
[Codegen] .set .Llabel23040, .
[Codegen] .set .Lfrom23028, .Llabel23040
[Codegen] .set .Lfrom23008, .Llabel23040
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel23049, .
[Codegen] .set .Llabel23049, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom23060(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Coalesce
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Case
[Codegen] .set .Llabel23063, .
[Codegen] pop        %rcx
[Codegen] testl      %ecx, %ecx
[Codegen] je         .Lfrom23072
[Codegen] addq       $8, %rsp
[Codegen] movslq     0x1(%r14), %rbx
[Codegen] addq       %rbx, %r14
[Codegen] jmp        .Llabel1516
[Codegen] .set .Llabel23088, .
[Codegen] .set .Lfrom23072, .Llabel23088
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel23097, .
[Codegen] .set .Llabel23097, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom23108(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Case
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Default
[Codegen] .set .Llabel23111, .
[Codegen] addq       $8, %rsp
[Codegen] movslq     0x1(%r14), %rbx
[Codegen] addq       %rbx, %r14
[Codegen] jmp        .Llabel1516
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel23145, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel23154, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel23163, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel23172, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel23181, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel23190, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel23199, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel23208, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel23214, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel23220, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel23226, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel23232, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel23238, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel23244, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel23250, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabb6981, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom23290
[Codegen] .set .Llabel23290, .
[Codegen] int3
[Codegen] .set .Llabel23291, .
[Codegen] .set .Lfrom23290, .Llabel23291
[Codegen] call       .Lfrom23296
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel23301, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel23310, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel23319, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel23328, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel23337, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel23346, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel23355, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel23364, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel23370, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel23376, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel23382, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel23388, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel23394, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel23400, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel23406, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Default
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=TableSwitch
[Codegen] .set .Llabel23430, .
[Codegen] pop        %rcx
[Codegen] call       .Lfrom23436
[Codegen] movq       %rcx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff1, %r11d
[Codegen] jne        .Lfrom23456
[Codegen] movl       %ecx, %ecx
[Codegen] cmpl       %ecx, 0x9(%r14)
[Codegen] jl         .Lfrom23468
[Codegen] .set .Llabel23468, .
[Codegen] movl       0x5(%r14), %eax
[Codegen] cmpl       %ecx, %eax
[Codegen] jg         .Lfrom23480
[Codegen] subl       %eax, %ecx
[Codegen] jmp        .Lfrom23487
[Codegen] .set .Llabel23487, .
[Codegen] .set .Lfrom23480, .Llabel23487
[Codegen] .set .Lfrom23468, .Llabel23487
[Codegen] .set .Lfrom23456, .Llabel23487
[Codegen] movslq     0x1(%r14), %rbx
[Codegen] addq       %rbx, %r14
[Codegen] jmp        .Llabel1516
[Codegen] .set .Llabel23499, .
[Codegen] .set .Lfrom23487, .Llabel23499
[Codegen] .set .Llabel23499, .
[Codegen] movl       0xc(%r14), %ebx
[Codegen] shrl       $8, %ebx
[Codegen] addl       %ecx, %ebx
[Codegen] .set .Llabel23508, .
[Codegen] movq       -0x48(%rbp), %rcx
[Codegen] .set .Llabel23512, .
[Codegen] movq       0x48(%rcx), %rcx
[Codegen] .set .Llabel23516, .
[Codegen] movq       0x8(%rcx), %rcx
[Codegen] .set .Llabel23520, .
[Codegen] movl       0x0(%rcx), %eax
[Codegen] leaq       0x0(%rax,%rbx,4), %rax
[Codegen] .set .Llabel23526, .
[Codegen] movl       0x0(%rcx,%rax,1), %ebx
[Codegen] leaq       0x21(%rcx,%rbx,1), %rcx
[Codegen] .set .Llabel23534, .
[Codegen] movq       %rcx, -0x40(%rbp)
[Codegen] jmp        .Lfrom23543
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel23561, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel23570, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel23579, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel23588, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel23597, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel23606, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel23615, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel23624, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel23630, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel23636, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel23642, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel23648, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel23654, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel23660, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel23666, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabb6981, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom23706
[Codegen] .set .Llabel23706, .
[Codegen] int3
[Codegen] .set .Llabel23707, .
[Codegen] .set .Lfrom23706, .Llabel23707
[Codegen] call       .Lfrom23712
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel23717, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel23726, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel23735, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel23744, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel23753, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel23762, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel23771, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel23780, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel23786, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel23792, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel23798, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel23804, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel23810, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel23816, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel23822, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=TableSwitch
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Return
[Codegen] .set .Llabel23846, .
[Codegen] pop        %rcx
[Codegen] jmp        .Lfrom23852
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel23870, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel23879, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel23888, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel23897, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel23906, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel23915, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel23924, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel23933, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel23939, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel23945, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel23951, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel23957, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel23963, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel23969, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel23975, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabb6981, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom24015
[Codegen] .set .Llabel24015, .
[Codegen] int3
[Codegen] .set .Llabel24016, .
[Codegen] .set .Lfrom24015, .Llabel24016
[Codegen] call       .Lfrom24021
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel24026, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel24035, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel24044, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel24053, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel24062, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel24071, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel24080, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel24089, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel24095, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel24101, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel24107, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel24113, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel24119, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel24125, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel24131, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Return
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetRval
[Codegen] .set .Llabel24155, .
[Codegen] testl      $0x1, -0x10(%rbp)
[Codegen] je         .Lfrom24168
[Codegen] movq       -0x8(%rbp), %rcx
[Codegen] jmp        .Lfrom24177
[Codegen] .set .Llabel24177, .
[Codegen] .set .Lfrom24168, .Llabel24177
[Codegen] movabsq    $0xfff9800000000000, %rcx
[Codegen] .set .Llabel24187, .
[Codegen] .set .Lfrom24177, .Llabel24187
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel24197, .
[Codegen] .set .Llabel24197, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom24208(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetRval
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SetRval
[Codegen] .set .Llabel24211, .
[Codegen] movq       0x0(%rsp), %rax
[Codegen] movq       %rax, -0x8(%rbp)
[Codegen] orl        $0x1, -0x10(%rbp)
[Codegen] addq       $8, %rsp
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel24236, .
[Codegen] .set .Llabel24236, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom24247(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SetRval
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=RetRval
[Codegen] .set .Llabel24250, .
[Codegen] movabsq    $0xfff9800000000000, %rcx
[Codegen] testl      $0x1, -0x10(%rbp)
[Codegen] je         .Lfrom24273
[Codegen] movq       -0x8(%rbp), %rcx
[Codegen] .set .Llabel24277, .
[Codegen] .set .Lfrom24273, .Llabel24277
[Codegen] jmp        .Lfrom24282
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel24300, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel24309, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel24318, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel24327, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel24336, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel24345, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel24354, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel24363, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel24369, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel24375, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel24381, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel24387, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel24393, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel24399, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel24405, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabb6981, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom24445
[Codegen] .set .Llabel24445, .
[Codegen] int3
[Codegen] .set .Llabel24446, .
[Codegen] .set .Lfrom24445, .Llabel24446
[Codegen] call       .Lfrom24451
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel24456, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel24465, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel24474, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel24483, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel24492, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel24501, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel24510, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel24519, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel24525, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel24531, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel24537, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel24543, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel24549, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel24555, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel24561, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=RetRval
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CheckReturn
[Codegen] .set .Llabel24585, .
[Codegen] pop        %rcx
[Codegen] testl      $0x1, -0x10(%rbp)
[Codegen] je         .Lfrom24599
[Codegen] movq       -0x8(%rbp), %rbx
[Codegen] jmp        .Lfrom24608
[Codegen] .set .Llabel24608, .
[Codegen] .set .Lfrom24599, .Llabel24608
[Codegen] movabsq    $0xfff9800000000000, %rbx
[Codegen] .set .Llabel24618, .
[Codegen] .set .Lfrom24608, .Llabel24618
[Codegen] movq       %rbx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fffc, %r11d
[Codegen] jne        .Lfrom24638
[Codegen] movq       %rbx, %rcx
[Codegen] jmp        .Lfrom24646
[Codegen] .set .Llabel24646, .
[Codegen] .set .Lfrom24638, .Llabel24646
[Codegen] movq       %rbx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff3, %r11d
[Codegen] jne        .Lfrom24666
[Codegen] movq       %rcx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff5, %r11d
[Codegen] jne        .Lfrom24686
[Codegen] .set .Llabel24686, .
[Codegen] .set .Lfrom24666, .Llabel24686
[Codegen] push       %rbx
[Codegen] .set .Llabel24687, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel24700, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom24710
[Codegen] .set .Llabel24710, .
[Codegen] .set .Llabel24710, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel24732, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel24741, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel24750, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel24759, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel24768, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel24777, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel24786, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel24795, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel24801, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel24807, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel24813, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel24819, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel24825, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel24831, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel24837, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabbbf83, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom24877
[Codegen] .set .Llabel24877, .
[Codegen] int3
[Codegen] .set .Llabel24878, .
[Codegen] .set .Lfrom24877, .Llabel24878
[Codegen] call       .Lfrom24883
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel24888, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel24897, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel24906, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel24915, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel24924, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel24933, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel24942, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel24951, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel24957, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel24963, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel24969, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel24975, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel24981, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel24987, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel24993, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel25017, .
[Codegen] .set .Lfrom24686, .Llabel25017
[Codegen] .set .Lfrom24646, .Llabel25017
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel25027, .
[Codegen] .set .Llabel25027, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom25038(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CheckReturn
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Throw
[Codegen] .set .Llabel25041, .
[Codegen] pop        %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel25043, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel25056, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom25066
[Codegen] .set .Llabel25066, .
[Codegen] .set .Llabel25066, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel25088, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel25097, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel25106, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel25115, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel25124, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel25133, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel25142, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel25151, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel25157, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel25163, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel25169, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel25175, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel25181, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel25187, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel25193, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabb6981, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom25233
[Codegen] .set .Llabel25233, .
[Codegen] int3
[Codegen] .set .Llabel25234, .
[Codegen] .set .Lfrom25233, .Llabel25234
[Codegen] call       .Lfrom25239
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel25244, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel25253, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel25262, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel25271, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel25280, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel25289, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel25298, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel25307, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel25313, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel25319, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel25325, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel25331, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel25337, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel25343, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel25349, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Throw
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ThrowWithStack
[Codegen] .set .Llabel25373, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] .set .Llabel25377, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $16, %ecx
[Codegen] .set .Llabel25390, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom25400
[Codegen] .set .Llabel25400, .
[Codegen] .set .Llabel25400, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel25422, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel25431, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel25440, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel25449, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel25458, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel25467, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel25476, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel25485, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel25491, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel25497, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel25503, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel25509, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel25515, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel25521, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel25527, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabb6981, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom25567
[Codegen] .set .Llabel25567, .
[Codegen] int3
[Codegen] .set .Llabel25568, .
[Codegen] .set .Lfrom25567, .Llabel25568
[Codegen] call       .Lfrom25573
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel25578, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel25587, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel25596, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel25605, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel25614, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel25623, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel25632, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel25641, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel25647, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel25653, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel25659, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel25665, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel25671, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel25677, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel25683, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ThrowWithStack
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CreateSuppressedError
[Codegen] .set .Llabel25707, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] .set .Llabel25711, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $16, %ecx
[Codegen] .set .Llabel25724, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom25734
[Codegen] .set .Llabel25734, .
[Codegen] .set .Llabel25734, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] movq       %rax, %rcx
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel25764, .
[Codegen] .set .Llabel25764, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom25775(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CreateSuppressedError
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ThrowMsg
[Codegen] .set .Llabel25778, .
[Codegen] .set .Llabel25778, .
[Codegen] movzbl     0x1(%r14), %eax
[Codegen] push       %rax
[Codegen] .set .Llabel25784, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel25797, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom25807
[Codegen] .set .Llabel25807, .
[Codegen] .set .Llabel25807, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel25829, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel25838, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel25847, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel25856, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel25865, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel25874, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel25883, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel25892, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel25898, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel25904, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel25910, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel25916, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel25922, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel25928, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel25934, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabb6981, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom25974
[Codegen] .set .Llabel25974, .
[Codegen] int3
[Codegen] .set .Llabel25975, .
[Codegen] .set .Lfrom25974, .Llabel25975
[Codegen] call       .Lfrom25980
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel25985, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel25994, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel26003, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel26012, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel26021, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel26030, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel26039, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel26048, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel26054, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel26060, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel26066, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel26072, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel26078, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel26084, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel26090, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ThrowMsg
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ThrowSetConst
[Codegen] .set .Llabel26114, .
[Codegen] push       $0x66
[Codegen] .set .Llabel26116, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel26129, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom26139
[Codegen] .set .Llabel26139, .
[Codegen] .set .Llabel26139, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel26161, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel26170, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel26179, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel26188, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel26197, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel26206, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel26215, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel26224, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel26230, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel26236, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel26242, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel26248, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel26254, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel26260, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel26266, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabb6981, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom26306
[Codegen] .set .Llabel26306, .
[Codegen] int3
[Codegen] .set .Llabel26307, .
[Codegen] .set .Lfrom26306, .Llabel26307
[Codegen] call       .Lfrom26312
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel26317, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel26326, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel26335, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel26344, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel26353, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel26362, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel26371, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel26380, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel26386, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel26392, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel26398, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel26404, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel26410, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel26416, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel26422, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ThrowSetConst
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Try
[Codegen] .set .Llabel26446, .
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel26455, .
[Codegen] .set .Llabel26455, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom26466(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Try
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=TryDestructuring
[Codegen] .set .Llabel26469, .
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel26478, .
[Codegen] .set .Llabel26478, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom26489(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=TryDestructuring
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Exception
[Codegen] .set .Llabel26492, .
[Codegen] .set .Llabel26492, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $0, %ecx
[Codegen] .set .Llabel26505, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom26515
[Codegen] .set .Llabel26515, .
[Codegen] .set .Llabel26515, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel26529, .
[Codegen] .set .Llabel26529, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom26540(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Exception
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ExceptionAndStack
[Codegen] .set .Llabel26543, .
[Codegen] .set .Llabel26543, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $0, %ecx
[Codegen] .set .Llabel26556, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom26566
[Codegen] .set .Llabel26566, .
[Codegen] .set .Llabel26566, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] .set .Llabel26571, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $0, %ecx
[Codegen] .set .Llabel26584, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom26594
[Codegen] .set .Llabel26594, .
[Codegen] .set .Llabel26594, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel26612, .
[Codegen] .set .Llabel26612, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom26623(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ExceptionAndStack
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Finally
[Codegen] .set .Llabel26626, .
[Codegen] movabsq    $0x75bb8e73adf0, %r11
[Codegen] cmpl       $0x0, 0x0(%r11)
[Codegen] je         .Lfrom26646
[Codegen] .set .Llabel26646, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $0, %ecx
[Codegen] .set .Llabel26659, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom26669
[Codegen] .set .Llabel26669, .
[Codegen] .set .Llabel26669, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel26673, .
[Codegen] .set .Lfrom26646, .Llabel26673
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel26682, .
[Codegen] .set .Llabel26682, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom26693(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Finally
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Uninitialized
[Codegen] .set .Llabel26696, .
[Codegen] movabsq    $0xfffa80000000000a, %r11
[Codegen] push       %r11
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel26717, .
[Codegen] .set .Llabel26717, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom26728(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Uninitialized
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitLexical
[Codegen] .set .Llabel26731, .
[Codegen] .set .Llabel26731, .
[Codegen] movl       0x0(%r14), %ecx
[Codegen] shrl       $8, %ecx
[Codegen] negq       %rcx
[Codegen] movq       0x0(%rsp), %rbx
[Codegen] movq       %rbx, -0x50(%rbp,%rcx,8)
[Codegen] addq       $4, %r14
[Codegen] .set .Llabel26758, .
[Codegen] .set .Llabel26758, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom26769(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitLexical
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitGLexical
[Codegen] .set .Llabel26772, .
[Codegen] pop        %rcx
[Codegen] movabsq    $0x75bb8e73a2b8, %r11
[Codegen] .set .Llabel26783, .
[Codegen] movq       0x0(%r11), %rbx
[Codegen] .set .Llabel26786, .
[Codegen] movq       0x58(%rbx), %rbx
[Codegen] .set .Llabel26790, .
[Codegen] movq       0x40(%rbx), %rbx
[Codegen] .set .Llabel26794, .
[Codegen] movq       0x670(%rbx), %rbx
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] orq        %r11, %rbx
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] push       %rbx
[Codegen] .set .Llabel26819, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel26823, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel26827, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel26832, .
[Codegen] .set .Llabel26832, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel26850, .
[Codegen] .set .Llabel26850, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom26861(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitGLexical
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitAliasedLexical
[Codegen] .set .Llabel26864, .
[Codegen] .set .Llabel26864, .
[Codegen] movq       -0x30(%rbp), %rcx
[Codegen] .set .Llabel26868, .
[Codegen] movzbl     0x1(%r14), %edx
[Codegen] testl      %edx, %edx
[Codegen] je         .Lfrom26881
[Codegen] .set .Llabel26881, .
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] movq       0x18(%rcx), %rcx
[Codegen] xorq       %r11, %rcx
[Codegen] subl       $1, %edx
[Codegen] jne        .Llabel26881
[Codegen] .set .Llabel26903, .
[Codegen] .set .Lfrom26881, .Llabel26903
[Codegen] .set .Llabel26903, .
[Codegen] movl       0x1(%r14), %edx
[Codegen] shrl       $8, %edx
[Codegen] movq       0x0(%rsp), %rax
[Codegen] cmpl       $0x10, %edx
[Codegen] jae        .Lfrom26923
[Codegen] leaq       0x18(%rcx,%rdx,8), %rbx
[Codegen] jmp        .Lfrom26933
[Codegen] .set .Llabel26933, .
[Codegen] .set .Lfrom26923, .Llabel26933
[Codegen] .set .Llabel26933, .
[Codegen] movq       0x8(%rcx), %rbx
[Codegen] leaq       -0x80(%rbx,%rdx,8), %rbx
[Codegen] .set .Llabel26942, .
[Codegen] .set .Lfrom26933, .Llabel26942
[Codegen] movabsq    $0x75bb8e73a2b0, %r11
[Codegen] .set .Llabel26952, .
[Codegen] movq       0x0(%r11), %rsi
[Codegen] testl      $0x1, 0x10(%rsi)
[Codegen] je         .Lfrom26968
[Codegen] movq       0x0(%rbx), %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff6, %r11d
[Codegen] jb         .Lfrom26988
[Codegen] push       %rdx
[Codegen] leaq       0x0(%rbx), %rdx
[Codegen] call       .Lfrom26997
[Codegen] pop        %rdx
[Codegen] .set .Llabel26998, .
[Codegen] .set .Lfrom26988, .Llabel26998
[Codegen] .set .Llabel26998, .
[Codegen] .set .Lfrom26968, .Llabel26998
[Codegen] movq       %rax, 0x0(%rbx)
[Codegen] movq       %rcx, %r11
[Codegen] andq       $0xfffffffffff00000, %r11
[Codegen] cmpq       $0x0, 0x0(%r11)
[Codegen] jne        .Lfrom27021
[Codegen] movq       %rax, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff6, %r11d
[Codegen] jb         .Lfrom27041
[Codegen] movabsq    $0x7ffffff00000, %rdx
[Codegen] andq       %rax, %rdx
[Codegen] cmpq       $0x0, 0x0(%rdx)
[Codegen] je         .Lfrom27064
[Codegen] .set .Llabel27064, .
[Codegen] movq       %rcx, %rax
[Codegen] call       .Lfrom27072
[Codegen] .set .Llabel27072, .
[Codegen] .set .Lfrom27064, .Llabel27072
[Codegen] .set .Lfrom27041, .Llabel27072
[Codegen] .set .Lfrom27021, .Llabel27072
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel27081, .
[Codegen] .set .Llabel27081, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom27092(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=InitAliasedLexical
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CheckLexical
[Codegen] .set .Llabel27095, .
[Codegen] movq       0x0(%rsp), %rcx
[Codegen] movabsq    $0xfffa80000000000a, %r11
[Codegen] cmpq       %r11, %rcx
[Codegen] jne        .Lfrom27118
[Codegen] push       $0x65
[Codegen] .set .Llabel27120, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel27133, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom27143
[Codegen] .set .Llabel27143, .
[Codegen] .set .Llabel27143, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel27147, .
[Codegen] .set .Lfrom27118, .Llabel27147
[Codegen] addq       $4, %r14
[Codegen] .set .Llabel27156, .
[Codegen] .set .Llabel27156, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom27167(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CheckLexical
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CheckAliasedLexical
[Codegen] .set .Llabel27170, .
[Codegen] movq       0x0(%rsp), %rcx
[Codegen] movabsq    $0xfffa80000000000a, %r11
[Codegen] cmpq       %r11, %rcx
[Codegen] jne        .Lfrom27193
[Codegen] push       $0x65
[Codegen] .set .Llabel27195, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel27208, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom27218
[Codegen] .set .Llabel27218, .
[Codegen] .set .Llabel27218, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel27222, .
[Codegen] .set .Lfrom27193, .Llabel27222
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel27231, .
[Codegen] .set .Llabel27231, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom27242(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CheckAliasedLexical
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CheckThis
[Codegen] .set .Llabel27245, .
[Codegen] movq       0x0(%rsp), %rcx
[Codegen] movq       %rcx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff5, %r11d
[Codegen] jne        .Lfrom27269
[Codegen] .set .Llabel27269, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $0, %ecx
[Codegen] .set .Llabel27282, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom27292
[Codegen] .set .Llabel27292, .
[Codegen] .set .Llabel27292, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel27296, .
[Codegen] .set .Lfrom27269, .Llabel27296
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel27305, .
[Codegen] .set .Llabel27305, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom27316(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=CheckThis
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=BindUnqualifiedGName
[Codegen] .set .Llabel27319, .
[Codegen] movabsq    $0x75bb8e73a2b8, %r11
[Codegen] .set .Llabel27329, .
[Codegen] movq       0x0(%r11), %rcx
[Codegen] .set .Llabel27332, .
[Codegen] movq       0x58(%rcx), %rcx
[Codegen] .set .Llabel27336, .
[Codegen] movq       0x40(%rcx), %rcx
[Codegen] .set .Llabel27340, .
[Codegen] movq       0x670(%rcx), %rcx
[Codegen] .set .Llabel27347, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel27351, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel27355, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel27360, .
[Codegen] .set .Llabel27360, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel27379, .
[Codegen] .set .Llabel27379, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom27390(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=BindUnqualifiedGName
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=BindUnqualifiedName
[Codegen] .set .Llabel27393, .
[Codegen] .set .Llabel27393, .
[Codegen] movq       -0x30(%rbp), %rcx
[Codegen] .set .Llabel27397, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel27401, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel27405, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel27410, .
[Codegen] .set .Llabel27410, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel27429, .
[Codegen] .set .Llabel27429, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom27440(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=BindUnqualifiedName
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=BindName
[Codegen] .set .Llabel27443, .
[Codegen] .set .Llabel27443, .
[Codegen] movq       -0x30(%rbp), %rcx
[Codegen] .set .Llabel27447, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel27451, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel27455, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel27460, .
[Codegen] .set .Llabel27460, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel27479, .
[Codegen] .set .Llabel27479, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom27490(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=BindName
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetName
[Codegen] .set .Llabel27493, .
[Codegen] .set .Llabel27493, .
[Codegen] movq       -0x30(%rbp), %rcx
[Codegen] .set .Llabel27497, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel27501, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel27505, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel27510, .
[Codegen] .set .Llabel27510, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel27529, .
[Codegen] .set .Llabel27529, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom27540(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetName
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetGName
[Codegen] .set .Llabel27543, .
[Codegen] movabsq    $0x75bb8e73a2b8, %r11
[Codegen] .set .Llabel27553, .
[Codegen] movq       0x0(%r11), %rcx
[Codegen] .set .Llabel27556, .
[Codegen] movq       0x58(%rcx), %rcx
[Codegen] .set .Llabel27560, .
[Codegen] movq       0x40(%rcx), %rcx
[Codegen] .set .Llabel27564, .
[Codegen] movq       0x670(%rcx), %rcx
[Codegen] .set .Llabel27571, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel27575, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel27579, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel27584, .
[Codegen] .set .Llabel27584, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel27603, .
[Codegen] .set .Llabel27603, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom27614(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetGName
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetArg
[Codegen] .set .Llabel27617, .
[Codegen] .set .Llabel27617, .
[Codegen] movzwl     0x1(%r14), %ebx
[Codegen] testl      $0x10, -0x10(%rbp)
[Codegen] je         .Lfrom27635
[Codegen] .set .Llabel27635, .
[Codegen] movq       -0x48(%rbp), %rax
[Codegen] testl      $0x8000000, 0x38(%rax)
[Codegen] je         .Lfrom27652
[Codegen] .set .Llabel27652, .
[Codegen] movq       -0x20(%rbp), %rax
[Codegen] .set .Llabel27656, .
[Codegen] movq       0x20(%rax), %rax
[Codegen] movq       0x10(%rax,%rbx,8), %rcx
[Codegen] push       %rcx
[Codegen] jmp        .Lfrom27671
[Codegen] .set .Llabel27671, .
[Codegen] .set .Lfrom27652, .Llabel27671
[Codegen] .set .Lfrom27635, .Llabel27671
[Codegen] movq       0x28(%rbp,%rbx,8), %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel27677, .
[Codegen] .set .Lfrom27671, .Llabel27677
[Codegen] addq       $3, %r14
[Codegen] .set .Llabel27686, .
[Codegen] .set .Llabel27686, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom27697(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetArg
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetFrameArg
[Codegen] .set .Llabel27700, .
[Codegen] .set .Llabel27700, .
[Codegen] movzwl     0x1(%r14), %ebx
[Codegen] movq       0x28(%rbp,%rbx,8), %rcx
[Codegen] push       %rcx
[Codegen] addq       $3, %r14
[Codegen] .set .Llabel27720, .
[Codegen] .set .Llabel27720, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom27731(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetFrameArg
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetLocal
[Codegen] .set .Llabel27734, .
[Codegen] .set .Llabel27734, .
[Codegen] movl       0x0(%r14), %ecx
[Codegen] shrl       $8, %ecx
[Codegen] negq       %rcx
[Codegen] movq       -0x50(%rbp,%rcx,8), %rcx
[Codegen] push       %rcx
[Codegen] addq       $4, %r14
[Codegen] .set .Llabel27758, .
[Codegen] .set .Llabel27758, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom27769(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetLocal
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ArgumentsLength
[Codegen] .set .Llabel27772, .
[Codegen] .set .Llabel27772, .
[Codegen] movq       0x10(%rbp), %rcx
[Codegen] shrl       $5, %ecx
[Codegen] movabsq    $0xfff8800000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel27802, .
[Codegen] .set .Llabel27802, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom27813(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ArgumentsLength
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetActualArg
[Codegen] .set .Llabel27816, .
[Codegen] pop        %rcx
[Codegen] movq       %rcx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff1, %r11d
[Codegen] je         .Lfrom27837
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel27855, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel27864, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel27873, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel27882, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel27891, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel27900, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel27909, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel27918, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel27924, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel27930, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel27936, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel27942, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel27948, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel27954, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel27960, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabbbfb2, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom28000
[Codegen] .set .Llabel28000, .
[Codegen] int3
[Codegen] .set .Llabel28001, .
[Codegen] .set .Lfrom28000, .Llabel28001
[Codegen] call       .Lfrom28006
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel28011, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel28020, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel28029, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel28038, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel28047, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel28056, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel28065, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel28074, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel28080, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel28086, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel28092, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel28098, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel28104, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel28110, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel28116, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel28140, .
[Codegen] .set .Lfrom27837, .Llabel28140
[Codegen] movl       %ecx, %ecx
[Codegen] .set .Llabel28142, .
[Codegen] movq       0x10(%rbp), %rbx
[Codegen] shrl       $5, %ebx
[Codegen] cmpl       %ecx, %ebx
[Codegen] ja         .Lfrom28157
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel28175, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel28184, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel28193, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel28202, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel28211, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel28220, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel28229, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel28238, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel28244, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel28250, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel28256, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel28262, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel28268, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel28274, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel28280, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabbbfcf, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom28320
[Codegen] .set .Llabel28320, .
[Codegen] int3
[Codegen] .set .Llabel28321, .
[Codegen] .set .Lfrom28320, .Llabel28321
[Codegen] call       .Lfrom28326
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel28331, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel28340, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel28349, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel28358, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel28367, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel28376, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel28385, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel28394, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel28400, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel28406, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel28412, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel28418, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel28424, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel28430, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel28436, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel28460, .
[Codegen] .set .Lfrom28157, .Llabel28460
[Codegen] movq       0x28(%rbp,%rcx,8), %rcx
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel28475, .
[Codegen] .set .Llabel28475, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom28486(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetActualArg
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetAliasedVar
[Codegen] .set .Llabel28489, .
[Codegen] .set .Llabel28489, .
[Codegen] movq       -0x30(%rbp), %rcx
[Codegen] .set .Llabel28493, .
[Codegen] movzbl     0x1(%r14), %ebx
[Codegen] testl      %ebx, %ebx
[Codegen] je         .Lfrom28506
[Codegen] .set .Llabel28506, .
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] movq       0x18(%rcx), %rcx
[Codegen] xorq       %r11, %rcx
[Codegen] subl       $1, %ebx
[Codegen] jne        .Llabel28506
[Codegen] .set .Llabel28528, .
[Codegen] .set .Lfrom28506, .Llabel28528
[Codegen] .set .Llabel28528, .
[Codegen] movl       0x1(%r14), %ebx
[Codegen] shrl       $8, %ebx
[Codegen] cmpl       $0x10, %ebx
[Codegen] jae        .Lfrom28544
[Codegen] movq       0x18(%rcx,%rbx,8), %rcx
[Codegen] jmp        .Lfrom28554
[Codegen] .set .Llabel28554, .
[Codegen] .set .Lfrom28544, .Llabel28554
[Codegen] .set .Llabel28554, .
[Codegen] movq       0x8(%rcx), %rcx
[Codegen] movq       -0x80(%rcx,%rbx,8), %rcx
[Codegen] .set .Llabel28563, .
[Codegen] .set .Lfrom28554, .Llabel28563
[Codegen] push       %rcx
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel28573, .
[Codegen] .set .Llabel28573, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom28584(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetAliasedVar
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetAliasedDebugVar
[Codegen] .set .Llabel28587, .
[Codegen] .set .Llabel28587, .
[Codegen] movq       -0x30(%rbp), %rcx
[Codegen] push       %r14
[Codegen] push       %rcx
[Codegen] .set .Llabel28594, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $16, %ecx
[Codegen] .set .Llabel28607, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom28617
[Codegen] .set .Llabel28617, .
[Codegen] .set .Llabel28617, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel28631, .
[Codegen] .set .Llabel28631, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom28642(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetAliasedDebugVar
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetImport
[Codegen] .set .Llabel28645, .
[Codegen] .set .Llabel28645, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel28649, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel28653, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel28658, .
[Codegen] .set .Llabel28658, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel28677, .
[Codegen] .set .Llabel28677, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom28688(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetImport
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetBoundName
[Codegen] .set .Llabel28691, .
[Codegen] pop        %rcx
[Codegen] .set .Llabel28692, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel28696, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel28700, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel28705, .
[Codegen] .set .Llabel28705, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel28724, .
[Codegen] .set .Llabel28724, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom28735(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetBoundName
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetIntrinsic
[Codegen] .set .Llabel28738, .
[Codegen] .set .Llabel28738, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel28742, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel28746, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel28751, .
[Codegen] .set .Llabel28751, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel28770, .
[Codegen] .set .Llabel28770, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom28781(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GetIntrinsic
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Callee
[Codegen] .set .Llabel28784, .
[Codegen] .set .Llabel28784, .
[Codegen] movq       0x18(%rbp), %rcx
[Codegen] andq       $0x3, %rcx
[Codegen] testq      %rcx, %rcx
[Codegen] je         .Lfrom28801
[Codegen] cmpq       $0x1, %rcx
[Codegen] je         .Lfrom28811
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel28829, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel28838, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel28847, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel28856, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel28865, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel28874, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel28883, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel28892, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel28898, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel28904, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel28910, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel28916, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel28922, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel28928, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel28934, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabb5761, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom28974
[Codegen] .set .Llabel28974, .
[Codegen] int3
[Codegen] .set .Llabel28975, .
[Codegen] .set .Lfrom28974, .Llabel28975
[Codegen] call       .Lfrom28980
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel28985, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel28994, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel29003, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel29012, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel29021, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel29030, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel29039, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel29048, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel29054, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel29060, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel29066, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel29072, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel29078, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel29084, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel29090, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel29114, .
[Codegen] .set .Lfrom28811, .Llabel29114
[Codegen] .set .Lfrom28801, .Llabel29114
[Codegen] .set .Llabel29114, .
[Codegen] movq       0x18(%rbp), %rcx
[Codegen] andq       $0xfffffffffffffffc, %rcx
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel29145, .
[Codegen] .set .Llabel29145, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom29156(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Callee
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=EnvCallee
[Codegen] .set .Llabel29159, .
[Codegen] .set .Llabel29159, .
[Codegen] movq       -0x30(%rbp), %rbx
[Codegen] .set .Llabel29163, .
[Codegen] movzbl     0x1(%r14), %ecx
[Codegen] testl      %ecx, %ecx
[Codegen] je         .Lfrom29176
[Codegen] .set .Llabel29176, .
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] movq       0x18(%rbx), %rbx
[Codegen] xorq       %r11, %rbx
[Codegen] subl       $1, %ecx
[Codegen] jne        .Llabel29176
[Codegen] .set .Llabel29198, .
[Codegen] .set .Lfrom29176, .Llabel29198
[Codegen] push       0x20(%rbx)
[Codegen] addq       $2, %r14
[Codegen] .set .Llabel29210, .
[Codegen] .set .Llabel29210, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom29221(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=EnvCallee
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SetName
[Codegen] .set .Llabel29224, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] push       %rbx
[Codegen] .set .Llabel29227, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel29231, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel29235, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel29240, .
[Codegen] .set .Llabel29240, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel29258, .
[Codegen] .set .Llabel29258, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom29269(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SetName
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=StrictSetName
[Codegen] .set .Llabel29272, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] push       %rbx
[Codegen] .set .Llabel29275, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel29279, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel29283, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel29288, .
[Codegen] .set .Llabel29288, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel29306, .
[Codegen] .set .Llabel29306, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom29317(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=StrictSetName
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SetGName
[Codegen] .set .Llabel29320, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] push       %rbx
[Codegen] .set .Llabel29323, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel29327, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel29331, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel29336, .
[Codegen] .set .Llabel29336, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel29354, .
[Codegen] .set .Llabel29354, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom29365(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SetGName
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=StrictSetGName
[Codegen] .set .Llabel29368, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] push       %rbx
[Codegen] .set .Llabel29371, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel29375, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel29379, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel29384, .
[Codegen] .set .Llabel29384, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel29402, .
[Codegen] .set .Llabel29402, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom29413(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=StrictSetGName
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SetArg
[Codegen] .set .Llabel29416, .
[Codegen] .set .Llabel29416, .
[Codegen] movzwl     0x1(%r14), %ebx
[Codegen] testl      $0x10, -0x10(%rbp)
[Codegen] je         .Lfrom29434
[Codegen] .set .Llabel29434, .
[Codegen] movq       -0x48(%rbp), %rax
[Codegen] testl      $0x8000000, 0x38(%rax)
[Codegen] je         .Lfrom29451
[Codegen] .set .Llabel29451, .
[Codegen] movq       -0x20(%rbp), %rax
[Codegen] .set .Llabel29455, .
[Codegen] movq       0x20(%rax), %rax
[Codegen] movabsq    $0x75bb8e73a2b0, %r11
[Codegen] .set .Llabel29469, .
[Codegen] movq       0x0(%r11), %rcx
[Codegen] testl      $0x1, 0x10(%rcx)
[Codegen] je         .Lfrom29485
[Codegen] movq       0x10(%rax,%rbx,8), %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff6, %r11d
[Codegen] jb         .Lfrom29507
[Codegen] push       %rdx
[Codegen] leaq       0x10(%rax,%rbx,8), %rdx
[Codegen] call       .Lfrom29518
[Codegen] pop        %rdx
[Codegen] .set .Llabel29519, .
[Codegen] .set .Lfrom29507, .Llabel29519
[Codegen] .set .Llabel29519, .
[Codegen] .set .Lfrom29485, .Llabel29519
[Codegen] movq       0x0(%rsp), %rcx
[Codegen] movq       %rcx, 0x10(%rax,%rbx,8)
[Codegen] .set .Llabel29528, .
[Codegen] movq       -0x20(%rbp), %rax
[Codegen] movq       %rax, %r11
[Codegen] andq       $0xfffffffffff00000, %r11
[Codegen] cmpq       $0x0, 0x0(%r11)
[Codegen] jne        .Lfrom29552
[Codegen] movq       %rcx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff6, %r11d
[Codegen] jb         .Lfrom29572
[Codegen] movabsq    $0x7ffffff00000, %rbx
[Codegen] andq       %rcx, %rbx
[Codegen] cmpq       $0x0, 0x0(%rbx)
[Codegen] je         .Lfrom29595
[Codegen] .set .Llabel29595, .
[Codegen] call       .Lfrom29600
[Codegen] jmp        .Lfrom29605
[Codegen] .set .Llabel29605, .
[Codegen] .set .Lfrom29451, .Llabel29605
[Codegen] .set .Lfrom29434, .Llabel29605
[Codegen] movq       0x0(%rsp), %rcx
[Codegen] movq       %rcx, 0x28(%rbp,%rbx,8)
[Codegen] .set .Llabel29614, .
[Codegen] .set .Lfrom29605, .Llabel29614
[Codegen] .set .Lfrom29595, .Llabel29614
[Codegen] .set .Lfrom29572, .Llabel29614
[Codegen] .set .Lfrom29552, .Llabel29614
[Codegen] addq       $3, %r14
[Codegen] .set .Llabel29623, .
[Codegen] .set .Llabel29623, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom29634(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SetArg
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SetLocal
[Codegen] .set .Llabel29637, .
[Codegen] .set .Llabel29637, .
[Codegen] movl       0x0(%r14), %ecx
[Codegen] shrl       $8, %ecx
[Codegen] negq       %rcx
[Codegen] movq       0x0(%rsp), %rbx
[Codegen] movq       %rbx, -0x50(%rbp,%rcx,8)
[Codegen] addq       $4, %r14
[Codegen] .set .Llabel29664, .
[Codegen] .set .Llabel29664, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom29675(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SetLocal
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SetAliasedVar
[Codegen] .set .Llabel29678, .
[Codegen] .set .Llabel29678, .
[Codegen] movq       -0x30(%rbp), %rcx
[Codegen] .set .Llabel29682, .
[Codegen] movzbl     0x1(%r14), %edx
[Codegen] testl      %edx, %edx
[Codegen] je         .Lfrom29695
[Codegen] .set .Llabel29695, .
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] movq       0x18(%rcx), %rcx
[Codegen] xorq       %r11, %rcx
[Codegen] subl       $1, %edx
[Codegen] jne        .Llabel29695
[Codegen] .set .Llabel29717, .
[Codegen] .set .Lfrom29695, .Llabel29717
[Codegen] .set .Llabel29717, .
[Codegen] movl       0x1(%r14), %edx
[Codegen] shrl       $8, %edx
[Codegen] movq       0x0(%rsp), %rax
[Codegen] cmpl       $0x10, %edx
[Codegen] jae        .Lfrom29737
[Codegen] leaq       0x18(%rcx,%rdx,8), %rbx
[Codegen] jmp        .Lfrom29747
[Codegen] .set .Llabel29747, .
[Codegen] .set .Lfrom29737, .Llabel29747
[Codegen] .set .Llabel29747, .
[Codegen] movq       0x8(%rcx), %rbx
[Codegen] leaq       -0x80(%rbx,%rdx,8), %rbx
[Codegen] .set .Llabel29756, .
[Codegen] .set .Lfrom29747, .Llabel29756
[Codegen] movabsq    $0x75bb8e73a2b0, %r11
[Codegen] .set .Llabel29766, .
[Codegen] movq       0x0(%r11), %rsi
[Codegen] testl      $0x1, 0x10(%rsi)
[Codegen] je         .Lfrom29782
[Codegen] movq       0x0(%rbx), %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff6, %r11d
[Codegen] jb         .Lfrom29802
[Codegen] push       %rdx
[Codegen] leaq       0x0(%rbx), %rdx
[Codegen] call       .Lfrom29811
[Codegen] pop        %rdx
[Codegen] .set .Llabel29812, .
[Codegen] .set .Lfrom29802, .Llabel29812
[Codegen] .set .Llabel29812, .
[Codegen] .set .Lfrom29782, .Llabel29812
[Codegen] movq       %rax, 0x0(%rbx)
[Codegen] movq       %rcx, %r11
[Codegen] andq       $0xfffffffffff00000, %r11
[Codegen] cmpq       $0x0, 0x0(%r11)
[Codegen] jne        .Lfrom29835
[Codegen] movq       %rax, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff6, %r11d
[Codegen] jb         .Lfrom29855
[Codegen] movabsq    $0x7ffffff00000, %rdx
[Codegen] andq       %rax, %rdx
[Codegen] cmpq       $0x0, 0x0(%rdx)
[Codegen] je         .Lfrom29878
[Codegen] .set .Llabel29878, .
[Codegen] movq       %rcx, %rax
[Codegen] call       .Lfrom29886
[Codegen] .set .Llabel29886, .
[Codegen] .set .Lfrom29878, .Llabel29886
[Codegen] .set .Lfrom29855, .Llabel29886
[Codegen] .set .Lfrom29835, .Llabel29886
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel29895, .
[Codegen] .set .Llabel29895, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom29906(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SetAliasedVar
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SetIntrinsic
[Codegen] .set .Llabel29909, .
[Codegen] movq       0x0(%rsp), %rcx
[Codegen] push       %rcx
[Codegen] push       %r14
[Codegen] push       -0x48(%rbp)
[Codegen] .set .Llabel29919, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $24, %ecx
[Codegen] .set .Llabel29932, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom29942
[Codegen] .set .Llabel29942, .
[Codegen] .set .Llabel29942, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel29955, .
[Codegen] .set .Llabel29955, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom29966(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=SetIntrinsic
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=PushLexicalEnv
[Codegen] .set .Llabel29969, .
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] .set .Llabel29976, .
[Codegen] movl       0x1(%r14), %eax
[Codegen] .set .Llabel29980, .
[Codegen] movq       -0x48(%rbp), %rbx
[Codegen] .set .Llabel29984, .
[Codegen] movq       0x40(%rbx), %rbx
[Codegen] .set .Llabel29988, .
[Codegen] movq       0x10(%rbx,%rax,8), %rbx
[Codegen] xorq       $0x7, %rbx
[Codegen] testb      $0x7, %bl
[Codegen] je         .Lfrom30006
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel30024, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel30033, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel30042, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel30051, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel30060, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel30069, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel30078, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel30087, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel30093, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel30099, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel30105, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel30111, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel30117, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel30123, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel30129, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabae9e7, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom30169
[Codegen] .set .Llabel30169, .
[Codegen] int3
[Codegen] .set .Llabel30170, .
[Codegen] .set .Lfrom30169, .Llabel30170
[Codegen] call       .Lfrom30175
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel30180, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel30189, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel30198, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel30207, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel30216, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel30225, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel30234, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel30243, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel30249, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel30255, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel30261, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel30267, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel30273, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel30279, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel30285, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel30309, .
[Codegen] .set .Lfrom30006, .Llabel30309
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] .set .Llabel30311, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $16, %ecx
[Codegen] .set .Llabel30324, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom30334
[Codegen] .set .Llabel30334, .
[Codegen] .set .Llabel30334, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel30347, .
[Codegen] .set .Llabel30347, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom30358(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=PushLexicalEnv
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=PopLexicalEnv
[Codegen] .set .Llabel30361, .
[Codegen] jmp        .Lfrom30366
[Codegen] testl      $0x40, -0x10(%rbp)
[Codegen] je         .Lfrom30379
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %r14
[Codegen] push       %rcx
[Codegen] .set .Llabel30389, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $16, %ecx
[Codegen] .set .Llabel30402, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom30412
[Codegen] .set .Llabel30412, .
[Codegen] .set .Llabel30412, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] jmp        .Lfrom30421
[Codegen] .set .Llabel30421, .
[Codegen] .set .Lfrom30379, .Llabel30421
[Codegen] .set .Lfrom30366, .Llabel30421
[Codegen] .set .Llabel30421, .
[Codegen] movq       -0x30(%rbp), %rcx
[Codegen] .set .Llabel30425, .
[Codegen] movq       0x0(%rcx), %rbx
[Codegen] .set .Llabel30428, .
[Codegen] movq       0x0(%rbx), %rbx
[Codegen] movabsq    $0x5c7eddf2f760, %r11
[Codegen] cmpq       %r11, 0x0(%rbx)
[Codegen] je         .Lfrom30450
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel30468, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel30477, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel30486, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel30495, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel30504, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel30513, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel30522, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel30531, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel30537, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel30543, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel30549, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel30555, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel30561, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel30567, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel30573, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edaca761f, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom30613
[Codegen] .set .Llabel30613, .
[Codegen] int3
[Codegen] .set .Llabel30614, .
[Codegen] .set .Lfrom30613, .Llabel30614
[Codegen] call       .Lfrom30619
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel30624, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel30633, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel30642, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel30651, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel30660, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel30669, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel30678, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel30687, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel30693, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel30699, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel30705, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel30711, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel30717, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel30723, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel30729, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel30753, .
[Codegen] .set .Lfrom30450, .Llabel30753
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] movq       0x18(%rcx), %rcx
[Codegen] xorq       %r11, %rcx
[Codegen] .set .Llabel30770, .
[Codegen] movq       %rcx, -0x30(%rbp)
[Codegen] .set .Llabel30774, .
[Codegen] .set .Lfrom30421, .Llabel30774
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel30783, .
[Codegen] .set .Llabel30783, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom30794(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=PopLexicalEnv
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=DebugLeaveLexicalEnv
[Codegen] .set .Llabel30797, .
[Codegen] jmp        .Lfrom30802
[Codegen] testl      $0x40, -0x10(%rbp)
[Codegen] je         .Lfrom30815
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %r14
[Codegen] push       %rcx
[Codegen] .set .Llabel30825, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $16, %ecx
[Codegen] .set .Llabel30838, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom30848
[Codegen] .set .Llabel30848, .
[Codegen] .set .Llabel30848, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel30852, .
[Codegen] .set .Lfrom30815, .Llabel30852
[Codegen] .set .Lfrom30802, .Llabel30852
[Codegen] .set .Llabel30852, .
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel30861, .
[Codegen] .set .Llabel30861, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom30872(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=DebugLeaveLexicalEnv
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=RecreateLexicalEnv
[Codegen] .set .Llabel30875, .
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] jmp        .Lfrom30887
[Codegen] testl      $0x40, -0x10(%rbp)
[Codegen] je         .Lfrom30900
[Codegen] push       %r14
[Codegen] push       %rcx
[Codegen] .set .Llabel30903, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $16, %ecx
[Codegen] .set .Llabel30916, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom30926
[Codegen] .set .Llabel30926, .
[Codegen] .set .Llabel30926, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] jmp        .Lfrom30935
[Codegen] .set .Llabel30935, .
[Codegen] .set .Lfrom30900, .Llabel30935
[Codegen] .set .Lfrom30887, .Llabel30935
[Codegen] push       %rcx
[Codegen] .set .Llabel30936, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel30949, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom30959
[Codegen] .set .Llabel30959, .
[Codegen] .set .Llabel30959, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel30963, .
[Codegen] .set .Lfrom30935, .Llabel30963
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel30972, .
[Codegen] .set .Llabel30972, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom30983(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=RecreateLexicalEnv
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=FreshenLexicalEnv
[Codegen] .set .Llabel30986, .
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] jmp        .Lfrom30998
[Codegen] testl      $0x40, -0x10(%rbp)
[Codegen] je         .Lfrom31011
[Codegen] push       %r14
[Codegen] push       %rcx
[Codegen] .set .Llabel31014, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $16, %ecx
[Codegen] .set .Llabel31027, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom31037
[Codegen] .set .Llabel31037, .
[Codegen] .set .Llabel31037, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] jmp        .Lfrom31046
[Codegen] .set .Llabel31046, .
[Codegen] .set .Lfrom31011, .Llabel31046
[Codegen] .set .Lfrom30998, .Llabel31046
[Codegen] push       %rcx
[Codegen] .set .Llabel31047, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel31060, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom31070
[Codegen] .set .Llabel31070, .
[Codegen] .set .Llabel31070, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel31074, .
[Codegen] .set .Lfrom31046, .Llabel31074
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel31083, .
[Codegen] .set .Llabel31083, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom31094(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=FreshenLexicalEnv
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=PushClassBodyEnv
[Codegen] .set .Llabel31097, .
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] .set .Llabel31104, .
[Codegen] movl       0x1(%r14), %eax
[Codegen] .set .Llabel31108, .
[Codegen] movq       -0x48(%rbp), %rbx
[Codegen] .set .Llabel31112, .
[Codegen] movq       0x40(%rbx), %rbx
[Codegen] .set .Llabel31116, .
[Codegen] movq       0x10(%rbx,%rax,8), %rbx
[Codegen] xorq       $0x7, %rbx
[Codegen] testb      $0x7, %bl
[Codegen] je         .Lfrom31134
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel31152, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel31161, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel31170, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel31179, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel31188, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel31197, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel31206, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel31215, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel31221, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel31227, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel31233, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel31239, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel31245, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel31251, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel31257, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabae9e7, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom31297
[Codegen] .set .Llabel31297, .
[Codegen] int3
[Codegen] .set .Llabel31298, .
[Codegen] .set .Lfrom31297, .Llabel31298
[Codegen] call       .Lfrom31303
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel31308, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel31317, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel31326, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel31335, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel31344, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel31353, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel31362, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel31371, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel31377, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel31383, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel31389, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel31395, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel31401, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel31407, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel31413, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel31437, .
[Codegen] .set .Lfrom31134, .Llabel31437
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] .set .Llabel31439, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $16, %ecx
[Codegen] .set .Llabel31452, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom31462
[Codegen] .set .Llabel31462, .
[Codegen] .set .Llabel31462, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel31475, .
[Codegen] .set .Llabel31475, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom31486(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=PushClassBodyEnv
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=PushVarEnv
[Codegen] .set .Llabel31489, .
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] .set .Llabel31496, .
[Codegen] movl       0x1(%r14), %eax
[Codegen] .set .Llabel31500, .
[Codegen] movq       -0x48(%rbp), %rbx
[Codegen] .set .Llabel31504, .
[Codegen] movq       0x40(%rbx), %rbx
[Codegen] .set .Llabel31508, .
[Codegen] movq       0x10(%rbx,%rax,8), %rbx
[Codegen] xorq       $0x7, %rbx
[Codegen] testb      $0x7, %bl
[Codegen] je         .Lfrom31526
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel31544, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel31553, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel31562, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel31571, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel31580, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel31589, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel31598, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel31607, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel31613, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel31619, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel31625, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel31631, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel31637, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel31643, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel31649, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabae9e7, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom31689
[Codegen] .set .Llabel31689, .
[Codegen] int3
[Codegen] .set .Llabel31690, .
[Codegen] .set .Lfrom31689, .Llabel31690
[Codegen] call       .Lfrom31695
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel31700, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel31709, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel31718, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel31727, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel31736, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel31745, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel31754, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel31763, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel31769, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel31775, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel31781, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel31787, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel31793, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel31799, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel31805, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel31829, .
[Codegen] .set .Lfrom31526, .Llabel31829
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] .set .Llabel31831, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $16, %ecx
[Codegen] .set .Llabel31844, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom31854
[Codegen] .set .Llabel31854, .
[Codegen] .set .Llabel31854, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel31867, .
[Codegen] .set .Llabel31867, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom31878(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=PushVarEnv
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=EnterWith
[Codegen] .set .Llabel31881, .
[Codegen] pop        %rcx
[Codegen] .set .Llabel31882, .
[Codegen] movl       0x1(%r14), %eax
[Codegen] .set .Llabel31886, .
[Codegen] movq       -0x48(%rbp), %rbx
[Codegen] .set .Llabel31890, .
[Codegen] movq       0x40(%rbx), %rbx
[Codegen] .set .Llabel31894, .
[Codegen] movq       0x10(%rbx,%rax,8), %rbx
[Codegen] xorq       $0x7, %rbx
[Codegen] testb      $0x7, %bl
[Codegen] je         .Lfrom31912
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel31930, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel31939, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel31948, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel31957, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel31966, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel31975, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel31984, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel31993, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel31999, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel32005, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel32011, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel32017, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel32023, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel32029, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel32035, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabae9e7, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom32075
[Codegen] .set .Llabel32075, .
[Codegen] int3
[Codegen] .set .Llabel32076, .
[Codegen] .set .Lfrom32075, .Llabel32076
[Codegen] call       .Lfrom32081
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel32086, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel32095, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel32104, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel32113, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel32122, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel32131, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel32140, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel32149, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel32155, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel32161, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel32167, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel32173, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel32179, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel32185, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel32191, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel32215, .
[Codegen] .set .Lfrom31912, .Llabel32215
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] movq       %rbp, %rbx
[Codegen] subq       $72, %rbx
[Codegen] push       %rbx
[Codegen] .set .Llabel32225, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $24, %ecx
[Codegen] .set .Llabel32238, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom32248
[Codegen] .set .Llabel32248, .
[Codegen] .set .Llabel32248, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel32261, .
[Codegen] .set .Llabel32261, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom32272(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=EnterWith
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=LeaveWith
[Codegen] .set .Llabel32275, .
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel32283, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel32296, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom32306
[Codegen] .set .Llabel32306, .
[Codegen] .set .Llabel32306, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel32319, .
[Codegen] .set .Llabel32319, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom32330(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=LeaveWith
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=AddDisposable
[Codegen] .set .Llabel32333, .
[Codegen] .set .Llabel32333, .
[Codegen] movzbl     0x1(%r14), %ecx
[Codegen] push       %rcx
[Codegen] movl       0x8(%rsp), %ecx
[Codegen] push       %rcx
[Codegen] movq       0x18(%rsp), %rbx
[Codegen] push       %rbx
[Codegen] movq       0x28(%rsp), %rax
[Codegen] push       %rax
[Codegen] .set .Llabel32356, .
[Codegen] movq       -0x30(%rbp), %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel32361, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $40, %ecx
[Codegen] .set .Llabel32374, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom32384
[Codegen] .set .Llabel32384, .
[Codegen] .set .Llabel32384, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $24, %rsp
[Codegen] addq       $2, %r14
[Codegen] .set .Llabel32401, .
[Codegen] .set .Llabel32401, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom32412(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=AddDisposable
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=TakeDisposeCapability
[Codegen] .set .Llabel32415, .
[Codegen] .set .Llabel32415, .
[Codegen] movq       -0x30(%rbp), %rcx
[Codegen] movabsq    $0x75bb8e73a2b0, %r11
[Codegen] .set .Llabel32429, .
[Codegen] movq       0x0(%r11), %rax
[Codegen] testl      $0x1, 0x10(%rax)
[Codegen] je         .Lfrom32445
[Codegen] movq       0x20(%rcx), %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff6, %r11d
[Codegen] jb         .Lfrom32466
[Codegen] push       %rdx
[Codegen] leaq       0x20(%rcx), %rdx
[Codegen] call       .Lfrom32476
[Codegen] pop        %rdx
[Codegen] .set .Llabel32477, .
[Codegen] .set .Lfrom32466, .Llabel32477
[Codegen] .set .Llabel32477, .
[Codegen] .set .Lfrom32445, .Llabel32477
[Codegen] movq       0x20(%rcx), %rbx
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] movq       %r11, 0x20(%rcx)
[Codegen] push       %rbx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel32505, .
[Codegen] .set .Llabel32505, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom32516(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=TakeDisposeCapability
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=BindVar
[Codegen] .set .Llabel32519, .
[Codegen] .set .Llabel32519, .
[Codegen] movq       -0x30(%rbp), %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel32524, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel32537, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom32547
[Codegen] .set .Llabel32547, .
[Codegen] .set .Llabel32547, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] movq       %rax, %rcx
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel32577, .
[Codegen] .set .Llabel32577, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom32588(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=BindVar
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GlobalOrEvalDeclInstantiation
[Codegen] .set .Llabel32591, .
[Codegen] .set .Llabel32591, .
[Codegen] movl       0x1(%r14), %ecx
[Codegen] push       %rcx
[Codegen] push       -0x48(%rbp)
[Codegen] .set .Llabel32599, .
[Codegen] movq       -0x30(%rbp), %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel32604, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $24, %ecx
[Codegen] .set .Llabel32617, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom32627
[Codegen] .set .Llabel32627, .
[Codegen] .set .Llabel32627, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel32640, .
[Codegen] .set .Llabel32640, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom32651(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=GlobalOrEvalDeclInstantiation
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=DelName
[Codegen] .set .Llabel32654, .
[Codegen] .set .Llabel32654, .
[Codegen] movq       -0x30(%rbp), %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel32659, .
[Codegen] movl       0x1(%r14), %eax
[Codegen] .set .Llabel32663, .
[Codegen] movq       -0x48(%rbp), %rbx
[Codegen] .set .Llabel32667, .
[Codegen] movq       0x40(%rbx), %rbx
[Codegen] .set .Llabel32671, .
[Codegen] movq       0x10(%rbx,%rax,8), %rbx
[Codegen] xorq       $0x2, %rbx
[Codegen] testb      $0x7, %bl
[Codegen] je         .Lfrom32689
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel32707, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel32716, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel32725, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel32734, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel32743, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel32752, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel32761, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel32770, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel32776, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel32782, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel32788, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel32794, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel32800, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel32806, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel32812, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabae9e7, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom32852
[Codegen] .set .Llabel32852, .
[Codegen] int3
[Codegen] .set .Llabel32853, .
[Codegen] .set .Lfrom32852, .Llabel32853
[Codegen] call       .Lfrom32858
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel32863, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel32872, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel32881, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel32890, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel32899, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel32908, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel32917, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel32926, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel32932, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel32938, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel32944, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel32950, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel32956, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel32962, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel32968, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel32992, .
[Codegen] .set .Lfrom32689, .Llabel32992
[Codegen] push       %rbx
[Codegen] .set .Llabel32993, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $16, %ecx
[Codegen] .set .Llabel33006, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom33016
[Codegen] .set .Llabel33016, .
[Codegen] .set .Llabel33016, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel33030, .
[Codegen] .set .Llabel33030, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom33041(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=DelName
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Arguments
[Codegen] .set .Llabel33044, .
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel33052, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel33065, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom33075
[Codegen] .set .Llabel33075, .
[Codegen] .set .Llabel33075, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel33089, .
[Codegen] .set .Llabel33089, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom33100(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Arguments
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Rest
[Codegen] .set .Llabel33103, .
[Codegen] .set .Llabel33103, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] .set .Llabel33107, .
[Codegen] movq       -0x38(%rbp), %rdi
[Codegen] .set .Llabel33111, .
[Codegen] movq       0x0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel33116, .
[Codegen] .set .Llabel33116, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] push       %rcx
[Codegen] addq       $8, -0x38(%rbp)
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel33135, .
[Codegen] .set .Llabel33135, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom33146(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Rest
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=FunctionThis
[Codegen] .set .Llabel33149, .
[Codegen] push       0x20(%rbp)
[Codegen] .set .Llabel33152, .
[Codegen] movq       -0x48(%rbp), %rax
[Codegen] testl      $0x100, 0x38(%rax)
[Codegen] jne        .Lfrom33169
[Codegen] pop        %rcx
[Codegen] movq       %rcx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fffc, %r11d
[Codegen] je         .Lfrom33190
[Codegen] movq       %rbp, %rbx
[Codegen] subq       $72, %rbx
[Codegen] push       %rbx
[Codegen] .set .Llabel33198, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel33211, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom33221
[Codegen] .set .Llabel33221, .
[Codegen] .set .Llabel33221, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] .set .Llabel33225, .
[Codegen] .set .Lfrom33190, .Llabel33225
[Codegen] push       %rcx
[Codegen] .set .Llabel33226, .
[Codegen] .set .Lfrom33169, .Llabel33226
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel33235, .
[Codegen] .set .Llabel33235, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom33246(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=FunctionThis
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Pop
[Codegen] .set .Llabel33249, .
[Codegen] addq       $8, %rsp
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel33262, .
[Codegen] .set .Llabel33262, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom33273(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Pop
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=PopN
[Codegen] .set .Llabel33276, .
[Codegen] .set .Llabel33276, .
[Codegen] movzwl     0x1(%r14), %ecx
[Codegen] leaq       0x0(%rsp,%rcx,8), %rsp
[Codegen] addq       $3, %r14
[Codegen] .set .Llabel33294, .
[Codegen] .set .Llabel33294, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom33305(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=PopN
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Dup
[Codegen] .set .Llabel33308, .
[Codegen] pop        %rcx
[Codegen] movq       %rcx, %rbx
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel33323, .
[Codegen] .set .Llabel33323, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom33334(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Dup
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Dup2
[Codegen] .set .Llabel33337, .
[Codegen] movq       0x8(%rsp), %rcx
[Codegen] movq       0x0(%rsp), %rbx
[Codegen] push       %rcx
[Codegen] push       %rbx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel33357, .
[Codegen] .set .Llabel33357, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom33368(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Dup2
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=DupAt
[Codegen] .set .Llabel33371, .
[Codegen] .set .Llabel33371, .
[Codegen] movl       0x0(%r14), %ecx
[Codegen] shrl       $8, %ecx
[Codegen] movq       0x0(%rsp,%rcx,8), %rcx
[Codegen] push       %rcx
[Codegen] addq       $4, %r14
[Codegen] .set .Llabel33391, .
[Codegen] .set .Llabel33391, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom33402(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=DupAt
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Swap
[Codegen] .set .Llabel33405, .
[Codegen] pop        %rbx
[Codegen] pop        %rcx
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel33418, .
[Codegen] .set .Llabel33418, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom33429(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Swap
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Pick
[Codegen] .set .Llabel33432, .
[Codegen] .set .Llabel33432, .
[Codegen] movzbl     0x1(%r14), %eax
[Codegen] movq       0x0(%rsp,%rax,8), %rcx
[Codegen] .set .Llabel33441, .
[Codegen] subl       $1, %eax
[Codegen] js         .Lfrom33450
[Codegen] movq       0x0(%rsp,%rax,8), %rbx
[Codegen] movq       %rbx, 0x8(%rsp,%rax,8)
[Codegen] jmp        .Llabel33441
[Codegen] .set .Llabel33461, .
[Codegen] .set .Lfrom33450, .Llabel33461
[Codegen] movq       %rcx, 0x0(%rsp)
[Codegen] addq       $2, %r14
[Codegen] .set .Llabel33474, .
[Codegen] .set .Llabel33474, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom33485(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Pick
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Unpick
[Codegen] .set .Llabel33488, .
[Codegen] .set .Llabel33488, .
[Codegen] movzbl     0x1(%r14), %eax
[Codegen] movq       0x0(%rsp), %rcx
[Codegen] movq       0x0(%rsp,%rax,8), %rbx
[Codegen] movq       %rcx, 0x0(%rsp,%rax,8)
[Codegen] testl      %eax, %eax
[Codegen] jg         .Lfrom33513
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel33531, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel33540, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel33549, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel33558, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel33567, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel33576, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel33585, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel33594, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel33600, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel33606, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel33612, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel33618, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel33624, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel33630, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel33636, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabaeee4, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom33676
[Codegen] .set .Llabel33676, .
[Codegen] int3
[Codegen] .set .Llabel33677, .
[Codegen] .set .Lfrom33676, .Llabel33677
[Codegen] call       .Lfrom33682
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel33687, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel33696, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel33705, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel33714, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel33723, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel33732, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel33741, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel33750, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel33756, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel33762, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel33768, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel33774, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel33780, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel33786, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel33792, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel33816, .
[Codegen] .set .Lfrom33513, .Llabel33816
[Codegen] .set .Llabel33816, .
[Codegen] subl       $1, %eax
[Codegen] je         .Lfrom33825
[Codegen] movq       0x0(%rsp,%rax,8), %rcx
[Codegen] movq       %rbx, 0x0(%rsp,%rax,8)
[Codegen] movq       %rcx, %rbx
[Codegen] jmp        .Llabel33816
[Codegen] .set .Llabel33838, .
[Codegen] .set .Lfrom33825, .Llabel33838
[Codegen] movq       %rbx, 0x0(%rsp)
[Codegen] addq       $2, %r14
[Codegen] .set .Llabel33851, .
[Codegen] .set .Llabel33851, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom33862(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Unpick
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Nop
[Codegen] .set .Llabel33865, .
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel33874, .
[Codegen] .set .Llabel33874, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom33885(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Nop
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Lineno
[Codegen] .set .Llabel33888, .
[Codegen] addq       $5, %r14
[Codegen] .set .Llabel33897, .
[Codegen] .set .Llabel33897, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom33908(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Lineno
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=NopDestructuring
[Codegen] .set .Llabel33911, .
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel33920, .
[Codegen] .set .Llabel33920, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom33931(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=NopDestructuring
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ForceInterpreter
[Codegen] .set .Llabel33934, .
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel33952, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel33961, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel33970, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel33979, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel33988, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel33997, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel34006, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel34015, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel34021, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel34027, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel34033, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel34039, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel34045, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel34051, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel34057, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabaf234, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom34097
[Codegen] .set .Llabel34097, .
[Codegen] int3
[Codegen] .set .Llabel34098, .
[Codegen] .set .Lfrom34097, .Llabel34098
[Codegen] call       .Lfrom34103
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel34108, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel34117, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel34126, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel34135, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel34144, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel34153, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel34162, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel34171, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel34177, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel34183, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel34189, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel34195, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel34201, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel34207, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel34213, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel34246, .
[Codegen] .set .Llabel34246, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom34257(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=ForceInterpreter
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=DebugCheckSelfHosted
[Codegen] .set .Llabel34260, .
[Codegen] movq       0x0(%rsp), %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel34265, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel34278, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom34288
[Codegen] .set .Llabel34288, .
[Codegen] .set .Llabel34288, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel34301, .
[Codegen] .set .Llabel34301, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom34312(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=DebugCheckSelfHosted
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Debugger
[Codegen] .set .Llabel34315, .
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel34323, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $8, %ecx
[Codegen] .set .Llabel34336, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom34346
[Codegen] .set .Llabel34346, .
[Codegen] .set .Llabel34346, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] addq       $1, %r14
[Codegen] .set .Llabel34359, .
[Codegen] .set .Llabel34359, .
[Codegen] movzbl     0x0(%r14), %ecx
[Codegen] leaq       .Lfrom34370(%rip), %rbx
[Codegen] jmp        *0x0(%rbx,%rcx,8)
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop/op=Debugger
[Codegen] .set .Llabel34373, .
[Codegen] .set .Lfrom23543, .Llabel34373
[Codegen] .set .Lfrom21746, .Llabel34373
[Codegen] .set .Llabel34373, .
[Codegen] .set .Llabel34373, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] jmp        .Llabel1516
[Codegen] .set .Llabel34382, .
[Codegen] .set .Llabel34382, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] jmp        .Llabel1521
[Codegen] .set .Llabel34391, .
[Codegen] .set .Llabel34391, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] jmp        .Llabel1045
[Codegen] .set .Llabel34400, .
[Codegen] jmp        .Lfrom34405
[Codegen] .balign 8, 0xf4   # hlt
[Codegen] .set .Llabel34408, .
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] .quad 0xffffffffffffffff
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitInterpreterLoop
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineCodeGen<Handler>::emitEpilogue
[Codegen] .set .Llabel36328, .
[Codegen] .set .Lfrom24282, .Llabel36328
[Codegen] .set .Lfrom23852, .Llabel36328
[Codegen] .set .Lfrom19893, .Llabel36328
[Codegen] .set .Lfrom19450, .Llabel36328
[Codegen] .set .Lfrom19079, .Llabel36328
[Codegen] .set .Lfrom18881, .Llabel36328
[Codegen] jmp        .Lfrom36333
[Codegen] testl      $0x40, -0x10(%rbp)
[Codegen] je         .Lfrom36346
[Codegen] movq       %rcx, -0x8(%rbp)
[Codegen] orl        $0x1, -0x10(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %r14
[Codegen] push       %rcx
[Codegen] .set .Llabel36364, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rbp, %rcx
[Codegen] subq       %rsp, %rcx
[Codegen] subl       $16, %ecx
[Codegen] .set .Llabel36377, .
[Codegen] movl       %ecx, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom36387
[Codegen] .set .Llabel36387, .
[Codegen] .set .Llabel36387, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] movq       -0x8(%rbp), %rcx
[Codegen] .set .Llabel36395, .
[Codegen] .set .Lfrom36346, .Llabel36395
[Codegen] .set .Lfrom36333, .Llabel36395
[Codegen] .set .Llabel36395, .
[Codegen] jmp        .Lfrom36400
[Codegen] jmp        .Lfrom36405
[Codegen] .set .Llabel36405, .
[Codegen] .set .Lfrom36400, .Llabel36405
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineCodeGen<Handler>::emitEpilogue
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineCodeGen<Handler>::emitOutOfLinePostBarrierSlot
[Codegen] .set .Llabel36410, .
[Codegen] .set .Lfrom29886, .Llabel36410
[Codegen] .set .Lfrom29600, .Llabel36410
[Codegen] .set .Lfrom27072, .Llabel36410
[Codegen] .set .Lfrom15893, .Llabel36410
[Codegen] .set .Lfrom14476, .Llabel36410
[Codegen] movabsq    $0x75bb8e7336e0, %r11
[Codegen] cmpq       %rax, 0x0(%r11)
[Codegen] je         .Lfrom36429
[Codegen] .set .Llabel36429, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] push       %rcx
[Codegen] movq       %rsp, %rdx
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rdx
[Codegen] movabsq    $0x75bb8e730000, %rdx
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rsi
[Codegen] movq       %rdx, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom36472
[Codegen] .set .Llabel36472, .
[Codegen] int3
[Codegen] .set .Llabel36473, .
[Codegen] .set .Lfrom36472, .Llabel36473
[Codegen] push       %rax
[Codegen] movabsq    $0x75bb8e73a200, %rax
[Codegen] .set .Llabel36484, .
[Codegen] movl       $0x1, 0x180(%rax)
[Codegen] pop        %rax
[Codegen] call       .Lfrom36500
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x75bb8e73a200, %rax
[Codegen] cmpl       $0x0, 0x180(%rax)
[Codegen] je         .Lfrom36529
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel36547, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel36556, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel36565, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel36574, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel36583, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel36592, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel36601, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel36610, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel36616, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel36622, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel36628, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel36634, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel36640, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel36646, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel36652, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edaca656f, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom36692
[Codegen] .set .Llabel36692, .
[Codegen] int3
[Codegen] .set .Llabel36693, .
[Codegen] .set .Lfrom36692, .Llabel36693
[Codegen] call       .Lfrom36698
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel36703, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel36712, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel36721, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel36730, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel36739, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel36748, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel36757, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel36766, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel36772, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel36778, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel36784, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel36790, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel36796, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel36802, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel36808, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel36832, .
[Codegen] .set .Lfrom36529, .Llabel36832
[Codegen] pop        %rax
[Codegen] .set .Llabel36833, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] pop        %rcx
[Codegen] .set .Llabel36838, .
[Codegen] .set .Lfrom36429, .Llabel36838
[Codegen] ret
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineCodeGen<Handler>::emitOutOfLinePostBarrierSlot
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitOutOfLineCodeCoverageInstrumentation
[Codegen] .set .Llabel36839, .
[Codegen] .set .Lfrom1108, .Llabel36839
[Codegen] .set .Llabel36839, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rsp, %rcx
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rcx
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] subq       $8, %rsp
[Codegen] movq       %rcx, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom36875
[Codegen] .set .Llabel36875, .
[Codegen] int3
[Codegen] .set .Llabel36876, .
[Codegen] .set .Lfrom36875, .Llabel36876
[Codegen] push       %rax
[Codegen] movabsq    $0x75bb8e73a200, %rax
[Codegen] .set .Llabel36887, .
[Codegen] movl       $0x1, 0x180(%rax)
[Codegen] pop        %rax
[Codegen] call       .Lfrom36903
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x75bb8e73a200, %rax
[Codegen] cmpl       $0x0, 0x180(%rax)
[Codegen] je         .Lfrom36932
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel36950, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel36959, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel36968, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel36977, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel36986, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel36995, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel37004, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel37013, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel37019, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel37025, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel37031, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel37037, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel37043, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel37049, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel37055, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edaca656f, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom37095
[Codegen] .set .Llabel37095, .
[Codegen] int3
[Codegen] .set .Llabel37096, .
[Codegen] .set .Lfrom37095, .Llabel37096
[Codegen] call       .Lfrom37101
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel37106, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel37115, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel37124, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel37133, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel37142, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel37151, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel37160, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel37169, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel37175, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel37181, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel37187, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel37193, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel37199, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel37205, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel37211, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel37235, .
[Codegen] .set .Lfrom36932, .Llabel37235
[Codegen] pop        %rax
[Codegen] .set .Llabel37236, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] ret
[Codegen] .set .Llabel37241, .
[Codegen] .set .Lfrom21901, .Llabel37241
[Codegen] .set .Lfrom21848, .Llabel37241
[Codegen] .set .Lfrom18914, .Llabel37241
[Codegen] .set .Llabel37241, .
[Codegen] movq       %r14, -0x40(%rbp)
[Codegen] movq       %rsp, %rcx
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rcx
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] subq       $8, %rsp
[Codegen] movq       %r14, %rsi
[Codegen] movq       %rcx, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom37280
[Codegen] .set .Llabel37280, .
[Codegen] int3
[Codegen] .set .Llabel37281, .
[Codegen] .set .Lfrom37280, .Llabel37281
[Codegen] push       %rax
[Codegen] movabsq    $0x75bb8e73a200, %rax
[Codegen] .set .Llabel37292, .
[Codegen] movl       $0x1, 0x180(%rax)
[Codegen] pop        %rax
[Codegen] call       .Lfrom37308
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x75bb8e73a200, %rax
[Codegen] cmpl       $0x0, 0x180(%rax)
[Codegen] je         .Lfrom37337
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel37355, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel37364, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel37373, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel37382, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel37391, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel37400, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel37409, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel37418, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel37424, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel37430, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel37436, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel37442, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel37448, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel37454, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel37460, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edaca656f, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom37500
[Codegen] .set .Llabel37500, .
[Codegen] int3
[Codegen] .set .Llabel37501, .
[Codegen] .set .Lfrom37500, .Llabel37501
[Codegen] call       .Lfrom37506
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel37511, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel37520, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel37529, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel37538, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel37547, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel37556, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel37565, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel37574, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel37580, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel37586, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel37592, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel37598, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel37604, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel37610, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel37616, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel37640, .
[Codegen] .set .Lfrom37337, .Llabel37640
[Codegen] pop        %rax
[Codegen] .set .Llabel37641, .
[Codegen] movq       -0x40(%rbp), %r14
[Codegen] ret
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/BaselineInterpreterGenerator::emitOutOfLineCodeCoverageInstrumentation
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/everything_else
[Codegen] # BEGIN creators: BaselineInterpreterGenerator::generate/everything_else/Assembler::finish
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/everything_else/Assembler::finish
[Codegen] # END   creators: BaselineInterpreterGenerator::generate/everything_else
[Codegen] # END   creators: BaselineInterpreterGenerator::generate
[BaselineScripts] Baseline compiling script ../../../../Benchmarkers/prop_access.js:1:1 (1970c7c730b0)
[BaselineOp] Analyzing op @ 0 (end=56): GlobalOrEvalDeclInstantiation
[BaselineOp] Analyzing op @ 5 (end=56): GetGName
[BaselineOp] Analyzing op @ 10 (end=56): Undefined
[BaselineOp] Analyzing op @ 11 (end=56): Uint16
[BaselineOp] Analyzing op @ 14 (end=56): CallIgnoresRv
[BaselineOp] Analyzing op @ 17 (end=56): Pop
[BaselineOp] Analyzing op @ 18 (end=56): GetGName
[BaselineOp] Analyzing op @ 23 (end=56): Undefined
[BaselineOp] Analyzing op @ 24 (end=56): GetGName
[BaselineOp] Analyzing op @ 29 (end=56): Dup
[BaselineOp] Analyzing op @ 30 (end=56): GetProp
[BaselineOp] Analyzing op @ 35 (end=56): Swap
[BaselineOp] Analyzing op @ 36 (end=56): GetGName
[BaselineOp] Analyzing op @ 41 (end=56): Undefined
[BaselineOp] Analyzing op @ 42 (end=56): Call
[BaselineOp] Analyzing op @ 45 (end=56): Null
[BaselineOp] Analyzing op @ 46 (end=56): Int8
[BaselineOp] Analyzing op @ 48 (end=56): Call
[BaselineOp] Analyzing op @ 51 (end=56): CallIgnoresRv
[BaselineOp] Analyzing op @ 54 (end=56): Pop
[BaselineOp] Analyzing op @ 55 (end=56): RetRval
[Codegen] # Emitting baseline code for script ../../../../Benchmarkers/prop_access.js:1:1
[Codegen] # BEGIN creators: BaselineCompiler::compile
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCodeGen<Handler>::emitPrologue
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] jmp        .Lfrom9
[Codegen] movabsq    $0x75bb8e73a200, %rcx
[Codegen] .set .Llabel19, .
[Codegen] movq       0x150(%rcx), %rcx
[Codegen] .set .Llabel26, .
[Codegen] movq       %rbp, 0xe0(%rcx)
[Codegen] movq       $0, 0xe8(%rcx)
[Codegen] .set .Llabel44, .
[Codegen] .set .Lfrom9, .Llabel44
[Codegen] subq       $72, %rsp
[Codegen] .set .Llabel48, .
[Codegen] movl       $0x0, -0x10(%rbp)
[Codegen] .set .Llabel55, .
[Codegen] movq       %rbx, -0x30(%rbp)
[Codegen] movabsq    $0x75bb8e73adf8, %rcx
[Codegen] cmpq       $0x0, 0x0(%rcx)
[Codegen] je         .Lfrom79
[Codegen] .set .Llabel79, .
[Codegen] movq       0x0(%rcx), %rax
[Codegen] .set .Llabel82, .
[Codegen] movq       %rax, -0x28(%rbp)
[Codegen] movq       $0, 0x0(%rcx)
[Codegen] jmp        .Lfrom98
[Codegen] .set .Llabel98, .
[Codegen] .set .Lfrom79, .Llabel98
[Codegen] movabsq    $0x75bb8e7a3568, %r11
[Codegen] movq       %r11, -0x28(%rbp)
[Codegen] .set .Llabel112, .
[Codegen] .set .Lfrom98, .Llabel112
[Codegen] movabsq    $0x75bb8e73ae30, %r11
[Codegen] cmpq       %rsp, 0x0(%r11)
[Codegen] jbe        .Lfrom131
[Codegen] movq       %rbp, %rbx
[Codegen] subq       $72, %rbx
[Codegen] push       %rbx
[Codegen] .set .Llabel139, .
[Codegen] movl       $0x48, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom153
[Codegen] .set .Llabel153, .
[Codegen] .set .Llabel153, .
[Codegen] .set .Lfrom131, .Llabel153
[Codegen] .set .Llabel153, .
[Codegen] movabsq    $0x75bb8cc8e800, %rbx
[Codegen] movabsq    $0x75bb8e73a2b8, %r11
[Codegen] cmpq       %rbx, 0x0(%r11)
[Codegen] je         .Lfrom182
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel200, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel209, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel218, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel227, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel236, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel245, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel254, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel263, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel269, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel275, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel281, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel287, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel293, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel299, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel305, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edaca5fac, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom345
[Codegen] .set .Llabel345, .
[Codegen] int3
[Codegen] .set .Llabel346, .
[Codegen] .set .Lfrom345, .Llabel346
[Codegen] call       .Lfrom351
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel356, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel365, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel374, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel383, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel392, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel401, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel410, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel419, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel425, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel431, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel437, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel443, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel449, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel455, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel461, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel485, .
[Codegen] .set .Lfrom182, .Llabel485
[Codegen] .set .Llabel485, .
[Codegen] movq       -0x28(%rbp), %rax
[Codegen] .set .Llabel489, .
[Codegen] movl       0xa8(%rax), %ecx
[Codegen] addl       $1, %ecx
[Codegen] .set .Llabel498, .
[Codegen] movl       %ecx, 0xa8(%rax)
[Codegen] cmpl       $0x1f4, %ecx
[Codegen] jne        .Lfrom516
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel524, .
[Codegen] movl       $0x48, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom538
[Codegen] .set .Llabel538, .
[Codegen] .set .Llabel538, .
[Codegen] movq       -0x28(%rbp), %rax
[Codegen] .set .Llabel542, .
[Codegen] movl       0xa8(%rax), %ecx
[Codegen] .set .Llabel548, .
[Codegen] .set .Lfrom516, .Llabel548
[Codegen] testl      %ecx, %ecx
[Codegen] jl         .Lfrom556
[Codegen] cmpl       $0x0, 0xb4(%rax)
[Codegen] jne        .Lfrom569
[Codegen] .set .Llabel569, .
[Codegen] movq       -0x38(%rax), %rax
[Codegen] testb      $0x1, %al
[Codegen] jne        .Lfrom581
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel589, .
[Codegen] movl       $0x48, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom603
[Codegen] .set .Llabel603, .
[Codegen] .set .Llabel603, .
[Codegen] .set .Lfrom581, .Llabel603
[Codegen] .set .Lfrom569, .Llabel603
[Codegen] .set .Lfrom556, .Llabel603
[Codegen] .set .Llabel603, .
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCodeGen<Handler>::emitPrologue
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody
[BaselineOp] Compiling op @ 0: GlobalOrEvalDeclInstantiation
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GlobalOrEvalDeclInstantiation
[Codegen] movl       $0x1, %ecx
[Codegen] push       %rcx
[Codegen] movabsq    $0x1970c7c730b0, %r11
[Codegen] push       %r11
[Codegen] .set .Llabel621, .
[Codegen] movq       -0x30(%rbp), %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel626, .
[Codegen] movl       $0x48, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom640
[Codegen] .set .Llabel640, .
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GlobalOrEvalDeclInstantiation
[BaselineOp] Compiling op @ 5: GetGName
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetGName
[Codegen] movabsq    $0x1970c7c41040, %rcx
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetGName/emitNextIC
[Codegen] .set .Llabel650, .
[Codegen] movq       -0x28(%rbp), %rdi
[Codegen] .set .Llabel654, .
[Codegen] movq       0xc0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel663, .
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetGName/emitNextIC
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetGName
[BaselineOp] Compiling op @ 10: Undefined
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Undefined
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Undefined
[BaselineOp] Compiling op @ 11: Uint16
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Uint16
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Uint16
[BaselineOp] Compiling op @ 14: CallIgnoresRv
[Codegen] push       %rcx
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=CallIgnoresRv
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] movabsq    $0xfff8800000004e20, %r11
[Codegen] push       %r11
[Codegen] movl       $0x1, %ecx
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=CallIgnoresRv/emitNextIC
[Codegen] .set .Llabel693, .
[Codegen] movq       -0x28(%rbp), %rdi
[Codegen] .set .Llabel697, .
[Codegen] movq       0xc8(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel706, .
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=CallIgnoresRv/emitNextIC
[Codegen] addq       $24, %rsp
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=CallIgnoresRv
[BaselineOp] Compiling op @ 17: Pop
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Pop
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Pop
[BaselineOp] Compiling op @ 18: GetGName
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetGName
[Codegen] movabsq    $0x1970c7c41040, %rcx
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetGName/emitNextIC
[Codegen] .set .Llabel720, .
[Codegen] movq       -0x28(%rbp), %rdi
[Codegen] .set .Llabel724, .
[Codegen] movq       0xd0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel733, .
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetGName/emitNextIC
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetGName
[BaselineOp] Compiling op @ 23: Undefined
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Undefined
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Undefined
[BaselineOp] Compiling op @ 24: GetGName
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetGName
[Codegen] push       %rcx
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] movabsq    $0x1970c7c41040, %rcx
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetGName/emitNextIC
[Codegen] .set .Llabel756, .
[Codegen] movq       -0x28(%rbp), %rdi
[Codegen] .set .Llabel760, .
[Codegen] movq       0xd8(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel769, .
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetGName/emitNextIC
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetGName
[BaselineOp] Compiling op @ 29: Dup
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Dup
[Codegen] movq       %rcx, %rbx
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Dup
[BaselineOp] Compiling op @ 30: GetProp
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetProp
[Codegen] push       %rbx
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetProp/emitNextIC
[Codegen] .set .Llabel773, .
[Codegen] movq       -0x28(%rbp), %rdi
[Codegen] .set .Llabel777, .
[Codegen] movq       0xe0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel786, .
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetProp/emitNextIC
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetProp
[BaselineOp] Compiling op @ 35: Swap
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Swap
[Codegen] movq       %rcx, %rbx
[Codegen] pop        %rcx
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Swap
[BaselineOp] Compiling op @ 36: GetGName
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetGName
[Codegen] push       %rbx
[Codegen] push       %rcx
[Codegen] movabsq    $0x1970c7c41040, %rcx
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetGName/emitNextIC
[Codegen] .set .Llabel802, .
[Codegen] movq       -0x28(%rbp), %rdi
[Codegen] .set .Llabel806, .
[Codegen] movq       0xe8(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel815, .
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetGName/emitNextIC
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetGName
[BaselineOp] Compiling op @ 41: Undefined
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Undefined
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Undefined
[BaselineOp] Compiling op @ 42: Call
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Call
[Codegen] push       %rcx
[Codegen] movabsq    $0xfff9800000000000, %r11
[Codegen] push       %r11
[Codegen] xorl       %ecx, %ecx
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Call/emitNextIC
[Codegen] .set .Llabel830, .
[Codegen] movq       -0x28(%rbp), %rdi
[Codegen] .set .Llabel834, .
[Codegen] movq       0xf0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel843, .
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Call/emitNextIC
[Codegen] addq       $16, %rsp
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Call
[BaselineOp] Compiling op @ 45: Null
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Null
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Null
[BaselineOp] Compiling op @ 46: Int8
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Int8
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Int8
[BaselineOp] Compiling op @ 48: Call
[Codegen] push       %rcx
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Call
[Codegen] movabsq    $0xfffa000000000000, %r11
[Codegen] push       %r11
[Codegen] movabsq    $0xfff8800000000002, %r11
[Codegen] push       %r11
[Codegen] movl       $0x3, %ecx
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Call/emitNextIC
[Codegen] .set .Llabel877, .
[Codegen] movq       -0x28(%rbp), %rdi
[Codegen] .set .Llabel881, .
[Codegen] movq       0xf8(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel890, .
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Call/emitNextIC
[Codegen] addq       $40, %rsp
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Call
[BaselineOp] Compiling op @ 51: CallIgnoresRv
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=CallIgnoresRv
[Codegen] push       %rcx
[Codegen] movl       $0x1, %ecx
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=CallIgnoresRv/emitNextIC
[Codegen] .set .Llabel900, .
[Codegen] movq       -0x28(%rbp), %rdi
[Codegen] .set .Llabel904, .
[Codegen] movq       0x100(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel913, .
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=CallIgnoresRv/emitNextIC
[Codegen] addq       $24, %rsp
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=CallIgnoresRv
[BaselineOp] Compiling op @ 54: Pop
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Pop
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Pop
[BaselineOp] Compiling op @ 55: RetRval
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=RetRval
[Codegen] movabsq    $0xfff9800000000000, %rcx
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=RetRval
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCodeGen<Handler>::emitEpilogue
[Codegen] .set .Llabel927, .
[Codegen] jmp        .Lfrom932
[Codegen] jmp        .Lfrom937
[Codegen] .set .Llabel937, .
[Codegen] .set .Lfrom932, .Llabel937
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCodeGen<Handler>::emitEpilogue
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCodeGen<Handler>::emitOutOfLinePostBarrierSlot
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCodeGen<Handler>::emitOutOfLinePostBarrierSlot
[Codegen] # END   creators: BaselineCompiler::compile
[Codegen] # BEGIN creators: exception_tail
[Codegen] # BEGIN creators: exception_tail/Assembler::finish
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] # END   creators: exception_tail/Assembler::finish
[BaselineScripts] Created BaselineScript 75bb8e7bb920 (raw 2e5e545e4010) for ../../../../Benchmarkers/prop_access.js:1:1
[Profiling] Added JitcodeGlobalEntry for baseline script ../../../../Benchmarkers/prop_access.js:1:1 (75bb8e7bb920)
[Codegen] # END   creators: exception_tail
[IonScripts] Warp Compiling script ../../../../Benchmarkers/prop_access.js:1:1 (1970c7c730b0) (warmup-counter=1,)
[WarpTranspiler] fallback stub (entered-count: 0) for JSOp::GetGName @ ../../../../Benchmarkers/prop_access.js:12:1
[WarpTranspiler] fallback stub (entered-count: 0) for JSOp::CallIgnoresRv @ ../../../../Benchmarkers/prop_access.js:12:24
[WarpTranspiler] fallback stub (entered-count: 0) for JSOp::GetGName @ ../../../../Benchmarkers/prop_access.js:14:1
[WarpTranspiler] fallback stub (entered-count: 0) for JSOp::GetGName @ ../../../../Benchmarkers/prop_access.js:14:7
[WarpTranspiler] fallback stub (entered-count: 0) for JSOp::GetProp @ ../../../../Benchmarkers/prop_access.js:14:7
[WarpTranspiler] fallback stub (entered-count: 0) for JSOp::GetGName @ ../../../../Benchmarkers/prop_access.js:14:22
[WarpTranspiler] fallback stub (entered-count: 0) for JSOp::Call @ ../../../../Benchmarkers/prop_access.js:14:22
[WarpTranspiler] fallback stub (entered-count: 0) for JSOp::Call @ ../../../../Benchmarkers/prop_access.js:14:12
[WarpTranspiler] fallback stub (entered-count: 0) for JSOp::CallIgnoresRv @ ../../../../Benchmarkers/prop_access.js:14:6
WarpSnapshot (0x75bb8cba44f8)
------------------------------
globalLexicalEnv: 0x1970c7c41040
globalLexicalEnvThis: 0x1970c7c4e040
failedBoundsCheck: 0
failedLexicalCheck: 0

JitZone stubs:
Stub 0: 0x0
Stub 1: 0x0
Stub 2: 0x0
Stub 3: 0x0
Stub 4: 0x0

Nursery objects (0):

WarpScriptSnapshot (0x75bb8cba4488)
------------------------------
Script: ../../../../Benchmarkers/prop_access.js:1:1 (0x1970c7c730b0)
  moduleObject: 0x0
  isArrowFunction: 0
  environment: Object: 0x1970c7c41040

  WarpBailout (offset 5, JSOp::GetGName)

  WarpBailout (offset 14, JSOp::CallIgnoresRv)

  WarpBailout (offset 18, JSOp::GetGName)

  WarpBailout (offset 24, JSOp::GetGName)

  WarpBailout (offset 30, JSOp::GetProp)

  WarpBailout (offset 36, JSOp::GetGName)

  WarpBailout (offset 42, JSOp::Call)

  WarpBailout (offset 48, JSOp::Call)

  WarpBailout (offset 51, JSOp::CallIgnoresRv)

[IonSyncLogs] Can't log script ../../../../Benchmarkers/prop_access.js:1:1. (Compiled on background thread.)
[BaselineICFallback] Fallback hit for (../../../../Benchmarkers/prop_access.js:1:1) (pc=5,line=12,uses=2,stubs=0): GetName(GetGName)

===== BuildSSA (== input to OptimizeMIR) ==[Codegen] # BEGIN creators: BaselineCacheIRCompiler::compile
[Codegen] addl       $1, 0x8(%rdi)
===
  Block0:
    [Codegen] 0 = emitGuardGlobalGeneration
Undefined.[Codegen] emitLoadStubField
[Codegen] .set .Llabel4, .
[Codegen] movl       0x20(%rdi), %eax
[Codegen] emitLoadStubField
[Codegen] .set .Llabel7, .Constant undefined
[Codegen] movq       0x28(%rdi), %rdx
[Codegen] cmpl       %eax, 0x0(%rdx)
[Codegen] jne        .Lfrom19

    [Codegen]1 = None.Start
    2 = None.CheckOverRecursed
    3 = Object.Constant object 1970c7c41040 (LexicalEnvironment)
    4 = None.GlobalDeclInstantiation
    5 = Object.Constant object 1970c7c41040 (LexicalEnvironment)
 emitLoadObject
[Codegen] emitLoadStubField
[Codegen] .set .Llabel19, .
[Codegen] movq       0x30(%rdi), %rax
[Codegen] emitAssertPropertyLookup
    6 = [Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
None.Bail
    [Codegen]7 = push       %rsi
[Codegen] Value. push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[UnreachableResult
Codegen] movq       %rsp, %rdx
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen    8 = Undefined.Constant] push       %rdx
[Codegen] emitLoadStubField
 undefined
    9 = Int32.Constant 0x4e20
    10 = None.Bail
    11 = Value.UnreachableResult
[Codegen] .set .Llabel42, .
    12 = Object.Constant[Codegen] movq       0x38(%rdi), %rdx
[Codegen] emitLoadStubField
[Codegen] .set .Llabel46, .
[Codegen] movl       0x40(%rdi), %ebx
[Codegen] subq       $8, %rsp
 object 1970c7c41040 (LexicalEnvironment)
    13 =[Codegen] movq       %rdx, %rsi
 None.Bail[Codegen] movq       %rbx, %rdx
[Codegen] movq       %rax, %rdi

    14 = [Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom72
Value.UnreachableResult
[Codegen] .set .Llabel72, .
    15[Codegen = Undefined.Constant undefined
    16 = ] int3
Object.Constant object 1970c7c41040 (LexicalEnvironment)
    17 = None.Bail
    18 = Value.UnreachableResult
    19 = None.Bail
    20 = Value.UnreachableResult
    21 = Object.[Codegen] .set .Llabel73, .
Constant object[Codegen] .set .Lfrom72, .Llabel73
 1970c7c41040 (LexicalEnvironment)[Codegen
    ] push       %rax
[Codegen] movabsq    $0x75bb8e73a200, %rax
22 = None.Bail
[Codegen] .set .Llabel84, .
[Codegen] movl       $0x1, 0x180(%rax)
[Codegen] pop        %rax
[Codegen]     23 = Value.UnreachableResult
    24 = Undefined.Constant undefined
    25call       .Lfrom100
[Codegen] = None.Bail
    26 = Value. addq       $8, %rspUnreachableResult

[Codegen] pop        %rsp
[    27Codegen] push       %rax = Null
[Codegen] movabsq    $0x75bb8e73a200, %rax
.Constant null
    [Codegen] cmpl       $0x0, 0x180(%rax)
28 = [Codegen] je         .Lfrom129
Int32.Constant 0x[Codegen] push       %r10
2
[Codegen] push       %r9
[Codegen] push       %r8
    29 = None.Bail[Codegen] push       %rdi

    30 = Value.UnreachableResult
    31[Codegen] push       %rsi
 = None.Bail
    32 = Value.UnreachableResult
    33 = Undefined.Constant undefined
    34 [Codegen] push       %rdx
[Codegen] push       %rcx
= None.[Codegen] Return push       %rax
33
[Codegen===== ] ../../../../Benchmarkers/prop_access.js:1 =====
subq       $240, %rsp

[[CodegenPrune] Begin
] .set .Llabel147, .
[Prune] [Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
Visit [Codegen] block 0:
[Prune.set .Llabel156, .
] [Codegen] Remove unreachable instructions and blocks:
vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] [Prune] .set .Llabel165, .
  T[Codegen] rim vmovdqu    %xmm12, 0xc0(%rsp)
bloc[Codegenk 0.] .set .Llabel174, .

[Codegen] 
vmovdqu    %xmm11, 0xb0(%rsp)
[Escape] [Codegen] .set .Llabel183, .
Begin (ScalarReplacement)
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[
[Alias] Begin
Codegen] .set .Llabel192, .
[Alias] [CodegenProcessing store Start] vmovdqu    %xmm9, 0x90(%rsp)
#1[Codegen] .set .Llabel201, .
 (fl[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
ags fffffff)
[Alias[Codegen] .set .Llabel210, .
] Processing store GlobalDeclInstantiation[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
#4 (flags fffffff)
[AliasSummaries[Codegen] ] Dependency list for other passes:
.set .Llabel216, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel222, .
[
[GVN] Running GCodegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel228, .
[VN on graph (with 1 blocCodegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen]ks)
 .set .Llabel234, .[GVN]   
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)Visiting dominator tree (wit
[Codegen] .set .Llabel240, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
h 1 bl[Codegen] .set .Llabel246, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
ocks) [Codegen] .set .Llabel252, .
root[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
ed at block[Codegen] movq       %rsp, %rax
0 (normal entry block)
[GVN]  [Codegen]    Visiting andq       $0xfffffffffffffff0, %rsp
block0
[Codegen[GVN] ] push       %rax
      Re[Codegen] cordinmovabsq    $0x5c7edaca656f, %rax
g Constant0
[GVN]   [Codegen] subq       $8, %rsp
    Recording Constant3
[GVN[Codegen] movq       %rax, %rdi
] [Codegen  ] testb      $0xf, %spl
    [CodegenDiscar] je         .Lfrom292
ding dead[Codegen] .set .Llabel292, .
 Constant5
[Codegen] int3
[LICM]
[Codegen]  Beginning LICM pass
.set .Llabel293, .

[Range] Adding beta nodes
[Codegen] [Range.set .Lfrom292, .Llabel293
] [Codegen] call       .Lfrom298
Looking [Codegen] ataddq       $8, %rsp
[Codegen] pop        %rsp
 block 0[Codegen] 
.set .Llabel303, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Range] Doing range propagation
[Range] co[Codegen] .set .Llabel312, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
mputing range on 0
[Range] computing range on 1
[[Codegen] .set .Llabel321, .
Range] computing range on 2
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Range] [Codegen] .set .Llabel330, .
computing range on[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel339, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
 3
[Range] computing range on 4
[Range] computing range [Codegen] .set .Llabel348, .
[Codegen] on 6
[Range] vmovdqu    0x90(%rsp), %xmm9
Removing beta nodes
[Codegen] .set .Llabel357, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Range] [Codegen] .set .Llabel366, .
Do range-base truncation (backward loop)
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel372, .
[Range] Do graph type fixup (dequeue)
[Codegen] vmovdqu    0x60(%rsp), %xmm6

[[Codegen] .set .Llabel378, .
Sink] Begin

[Range] Begin (removeUnnecessaryBitops)[Codegen] vmovdqu    0x50(%rsp), %xmm5


[[Codegen] FLAC] Begin
.set .Llabel384, .
[Codegen
[] vmovdqu    0x40(%rsp), %xmm4
EAA] Begin[Codegen] .set .Llabel390, .


[MarkLoadsUsedAsPropertyKeys][Codegen] vmovdqu    0x30(%rsp), %xmm3
 Begin
[Codegen] [RedundantShapeGuards] Begin
.set .Llabel396, .
[RedundantGCBarriers[Codegen] Begin
] vmovdqu    0x20(%rsp), %xmm2

=[Codegen] .set .Llabel402, .
==== BeforeLIR (== result of OptimizeMIR) [Codegen] =====
  Block0:
    0vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel408, .
 = Undefined.Constant[Codegen]  undefined
    vmovdqu    0x0(%rsp), %xmm0
1 = None.Start
    2 = None.CheckOverRecursed
    3 = Object.Constant obj[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
ect 1970c7c41040 (LexicalEnvironment[Codegen] pop        %rcx
)
    4[Codegen] pop        %rdx
 = None.GlobalDeclInstantiation
    5 = [Codegen] pop        %rsi
None.Bail
[Codegen] pop        %rdi
    6 = None.Unreachable[Codegen] pop        %r8

===== ../../../../Benchmarkers/prop_access.js[Codegen] pop        %r9
[Codegen:1 =] pop        %r10
====
[Codegen] int3
[Codegen] .set .Llabel432, .
Curr[Codegen] .set .Lfrom129, .Llabel432
ent resume point[Codegen] pop        %rax
 75bb8cba47b0 d[Codegen] pop        %rax
etails[Codegen] pop        %rcx
:
[Codegen]     pop        %rdx
frame count: 1[Codegen] 
    taken at blopop        %rsi
ck 0 ent[Codegen] pop        %rdi
ry[Codegen] pop        %r8

 [Codegen]    pc: 75bb8e70d921 (pop        %r9
script[Codegen] pop        %r10
: 1970c7c730b0, offset: 0[Codegen] )
  emitLoadDynamicSlotResult
  slot0: Constant#0
 [Codegen]    slot1movq       %rcx, %rdx
: Constant#0
[Codegen] .set .Llabel447, .
[Codegen] movl       0x48(%rdi), %ecx
[Codegen] [IonSnapshots] .set .Llabel450, .
Genera[Codegen] movq       0x8(%rax), %rbx
ting L[Codegen] movq       0x0(%rbx,%rcx,1), %rcx
IR recover info 75bb8cba7688 from[Codegen MIR (] 75bb8cba47b0)
[IonSnapshots] Generating LIR snapshot 75bb8cba76e0 from recover (75bb8cba7688)
emitReturnFromIC
[IonSnapshots] [CodegenAssigning snapshot 75bb8cba76e0]  to instruret
ction 75bb8cba7730 (os[Codegenipoint] push       %r10
)
[Codegen] push       %r9
[IonSnapshots] Gene[Codegen] rating LIR recover info push       %r8
75bb8cba7950 from MIR (75bb8cba4ac0)
[[Codegen] push       %rdi
[CodegenIonSnapshots] Genera] push       %rsi
ting LIR snapshot [Codegen] push       %rdx
75bb8cba79a8 fr[Codegen] push       %rcx
[Codegen] push       %rax
om recover (75bb8cba7950)
[IonSnapshots[Codegen] ] subq       $240, %rsp
Assigning [Codegen] .set .Llabel477, .
snapshot 75bb8cba79a8 to in[Codegenstruct] ion 75bb8cba79f8 vmovdqu    %xmm14, 0xe0(%rsp)
(osi[Codegen] .set .Llabel486, .
po[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
int)
[Codegen] .set .Llabel495, .
Current resume[Codegen]  pointvmovdqu    %xmm12, 0xc0(%rsp)
 75bb8cba4ac0 det[Codegen] .set .Llabel504, .
ails:
  [Codegen]   frame count: 1vmovdqu    %xmm11, 0xb0(%rsp)

    taken after: GlobalDeclInstantiation#[Codegen] 4
    pc: 75bb8e70d921 (s.set .Llabel513, .
cript: 1970c7c730b0[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel522, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel531, .
, offset: 0)
    slot0: Constant#3
    slot1: Constant#0
[Codegen[IonSnapshots] ] Generativmovdqu    %xmm8, 0x80(%rsp)
ng LIR sna[Codegen] .set .Llabel540, .
pshot [Codegen75bb8cba7b10 from recover (75bb8cba7950)
[IonSnapshots] A] vmovdqu    %xmm7, 0x70(%rsp)
ssigning snapshot 75bb8cba7b10 to instruction 75bb8cba7aa8 ([Codegenbail)
] .set .Llabel546, .
[Codegen
[RegAlloc]] vmovdqu    %xmm6, 0x60(%rsp)
 Beginning register allocation[Codegen] 

.set .Llabel552, .
[Codegen] [RegAlloc] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel558, .
[Codegen] LIR instructions (Pre-allocation LIR)
[RegAlloc]   Bvmovdqu    %xmm4, 0x40(%rsp)
lock 0[Codegen] 
[RegAlloc]     2-3 CheckOverRecursed
[RegAlloc]     4-5 OsiPoint.set .Llabel564, .
[Codegen]  [use vmovdqu    %xmm3, 0x30(%rsp)
const][Codegen] .set .Llabel570, .
[Codegen [use ] const]vmovdqu    %xmm2, 0x20(%rsp)

[RegAlloc]     [Codegen] .set .Llabel576, .
6-7 [Codegen] GlobalDeclInstantiation
[RegAllocvmovdqu    %xmm1, 0x10(%rsp)
]     8[Codegen] -9 OsiPoint.set .Llabel582, .
 [use [Codegen] obj 1970c7c41040]vmovdqu    %xmm0, 0x0(%rsp)
 [us[Codegen] e const]movq       %rsp, %rax

[RegAlloc]     10-11 Bail [use [Codegen] andq       $0xfffffffffffffff0, %rsp
obj 1970c7c41040][Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabc2c06, %rax
[Codegen] subq       $8, %rsp
 [use const]
[[CodegenRegAlloc]     12-13 Unreachable

] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[RegAlloc] Beginning liveness analysis
[Codegen] je         .Lfrom622
[Codegen] .set .Llabel622, .
[Codegen] int3
[Codegen] .set .Llabel623, .
[Codegen] .set .Lfrom622, .Llabel623
[Codegen] call       .Lfrom628
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel633, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel642, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel651, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[RegAlloc] Completed liveness analysis
[Codegen] 
[RegAlloc] .set .Llabel660, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
Live r[Codegen] .set .Llabel669, .
anges by virtu[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] al regis.set .Llabel678, .
[Codegen] ter (vmovdqu    0x90(%rsp), %xmm9
after liveness analysis):
[Codegen] .set .Llabel687, .

[[Codegen] vmovdqu    0x80(%rsp), %xmm8
RegAlloc] Beginning grouping and queueing registers[Codegen] 
[RegAlloc] Completed grouping and queueing registers

[.set .Llabel696, .
RegAlloc] Live ranges[Codegen] vmovdqu    0x70(%rsp), %xmm7
 by bu[Codegen] .set .Llabel702, .
ndle[Codegen] vmovdqu    0x60(%rsp), %xmm6
 (after grouping/queueing regs)[Codegen:

[RegAlloc] Beginning main allocation loop] .set .Llabel708, .



[[Codegen] vmovdqu    0x50(%rsp), %xmm5
RegAlloc] Main allocation loop complete; beginning spill-bundle allocation loop


[Codegen] .set .Llabel714, .
[RegAlloc] [Codegen] Spill-bundle allocation loop complete

[RegAllocvmovdqu    0x40(%rsp), %xmm4
] Allocations:

[[Codegen] RegAlloc] Live .set .Llabel720, .
ranges by bundle (in dumpAllocations())[Codegen] :

[vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel726, .
[CodegenRegAlloc] Allocations by physical register:] vmovdqu    0x20(%rsp), %xmm2
[Codegen

[RegAlloc] ] ResolveControlFlow: begin
[RegAlloc]   ResolveControlFlow: adding MoveGroups within blocks
.set .Llabel732, .
[RegAlloc] [Codegen  ResolveControlFlow: adding MoveGroups for phi nodes
[RegAlloc] ] vmovdqu    0x10(%rsp), %xmm1
  ResolveControlFlow: adding MoveGroups to fix conflicted edges
[RegAlloc] ResolveControlFlow: end
[Codegen] [RegAlloc] .set .Llabel738, .
Installing Allocations
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[RegAlloc] [Codegen] addq       $240, %rsp
Populating Safepoints
[Codegen] pop        %rax
[Codegen] pop        %rcx

[RegAlloc][Codegen]  Lpop        %rdx
[Codegen] pop        %rsi
IR instructions (Post-allocation LIR)
[Codegen] pop        %rdi
[RegAlloc] [Codegen] pop        %r8
  Block [Codegen] pop        %r9
0
[[Codegen] pop        %r10
[Codegen] int3
RegAlloc]     [Codegen] 2-3 emitFailurePath
CheckOverRecursed
[Codegen[RegAlloc] ] .set .Llabel762, .
    4-5[Codegen]  OsiPoint.set .Lfrom19, .Llabel762 [use 
[Codegen] .set .Llabel762, .
const][Codegen]  [use const]movq       0x10(%rdi), %rdi

[RegAlloc]     [Codegen] jmp        *0x0(%rdi)
6-[Codegen] # BEGIN creators: BaselineCacheIRCompiler::compile/7 Assembler::finish
GlobalDeclInstantiation
[[Codegen] .balign 16, 0xf4   # hlt
RegAlloc]     [Codegen] jmp        *2(%rip)
8-[Codegen] ud2
9 OsiPoint [Codegen] .quad      0
[use obj 1970c7c41040] [us[Codegen] jmp        *2(%rip)
e const][Codegen] 
[RegAlloc]     ud2
10-11 Bail [use [Codegen] obj 1970c7c41040].quad      0
 [us[Codegen] jmp        *2(%rip)
e const]
[RegAlloc] [Codegen] ud2
    12-13 Unreachable

[RegAlloc] Finished register allocation

[RegAlloc] Register Allocation Integrity State:
[RegAlloc]   Block 0
[RegAlloc][Codegen] .quad      0     2-3 
[CodegenCheckOverRecursed
[RegAlloc] ]     4-5 OsiPoint# END   creators: BaselineCacheIRCompiler::compile [use const] [use const]
[RegAlloc]     6-7 /Assembler::finishGlobalDeclInstantiation
[RegAlloc]     8-9
 OsiPoint [use obj 1970c7c41040] [use const]
[RegAlloc]     10-11 Bail [Codegen] # END   creators: BaselineCacheIRCompiler::compile
[use obj 1970c7c41040] [use const]
[RegAlloc] [BaselineIC]     12-13 Unreachable

  At[Codegen] # BEGIN creators: CodeGenerator::generate
[Codegen] tached GetName CacheIR stub
# Emitting code for script ../../../../Benchmarkers/prop_access.js:1:1[BaselineICFallback] 
Fallback hi[Codegent ] push       %rbp
fo[Codegen] movq       %rsp, %rbp
r (../../../../Benchmarkers/prop_access.js[Codegen] :1:1) (pc=14,litestb      $0xf, %spl
ne=12,uses[Codegen] je         .Lfrom14
=2,stubs=[Codegen0): Call(CallIgnoresRv)
] .set .Llabel14, .
[Codegen] int3
[Codegen] [Codegen] .set .Llabel15, .
# BEGIN creators: BaselineCacheIRCompiler::compile
[Codegen] addl       $1, 0x8(%rdi)
[Codegen] .set .Lfrom14, .Llabel15
[Codegen] 
[Codegen] # BEGIN creators: CodeGenerator::generate/CodeGenerator::generateBody
[Codegen] ==== BEGIN CodeGenerator::generateBody ====emitLoadArgumentDynamicSlot

[Codegen] [Codegen] --------------------------------
[Codegen] movq       0x10(%rsp,%rcx,8), %rax
# block0 ../../../../Benchmarkers/prop_access.js:1:1:
[Codegen] emitGuardToObject
[Codegen[Codegen] movq       %rax, %r11
] .set .Llabel15, .
[Codegen] shrq       $47, %r11
[Codegen] [Codegen] cmpl       $0x1fffc, %r11d
           [Codegen] jne        .Lfrom29
                    [Codegen]  # LIRemitGuardSpecificObject
=CheckOverRecursed[Codegen] movabsq    $0xfffe000000000000, %r11

[Codegen]       [Codegen] xorq       %r11, %rax
        [Codegen]                 cmpq       %rax, 0x20(%rdi)
[Codegen] jne        .Lfrom52
  [Codegen] # LIR=OsiPoint
emitCallScriptedFunction
[Codegen] movq       %rcx, %rdx
[IonSnapshots] [Codegen] movq       %rbp, %r11
Encodi[Codegen] subq       %rsp, %r11
ng LRecoverInfo [Codegen] 75bb8cba7688 (framesubq       $8, %r11
Count [Codegen] .set .Llabel65, .
1, ins[Codegen] movl       %r11d, -0xc(%rbp)
truc[Codegen] tions push       0x0(%rsp)
1)[Codegen
[IonSnapshots] movq       $1, 0x8(%rsp)
] [Codegen] starpush       %rbp
ting r[Codegen] ecovermovq       %rsp, %rbp
 with [Codegen] 1 instructpush       %rdi
ion(s)[Codegen
[IonSnapshots] ] Stcmpl       $0x1, %edx
arti[Codegen] ng fraje         .Lfrom95
me[Codegen; implic] push       %r10
it 2[Codegen] , formals push       %r9
0, fixed[Codegen] push       %r8
 0, [Codegen] push       %rdi
exprs 0
[Codegen] push       %rsi
[[IonSnapshots] Codegen] push       %rdx
[WritCodegen] push       %rcxing pc offset 0, mode 
[CodegenResumeAt, nsl] push       %rax
[Codegenots ] subq       $240, %rsp
[Codegen] .set .Llabel113, .
2
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[IonSnapshots[Codegen] .set .Llabel122, .
] [Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
Encoding LSnapshot [Codegen] .set .Llabel131, .
75bb8cba76e0 (LRecove[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
r 75bb8cba7688)
[Codegen] [IonSnapshots.set .Llabel140, .
] [Codegen] startingvmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel149, .
[Codegen]  snapshot witvmovdqu    %xmm10, 0xa0(%rsp)
h reco[Codegen] .set .Llabel158, .
ver offs[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
et 0, bailout kind 11[Codegen] 
.set .Llabel167, .
[IonSnapshots] [Codegen] vmovdqu    %xmm8, 0x80(%rsp)
    slot 0 (0): undefined
[IonSnapshots]     slot 1 (0): undefined
[Codegen] .set .Llabel176, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[IonSnapshots] endin[Codegen] .set .Llabel182, .
g snapshot total size: 9 bytes (start 0)
[Codegen] .set .Llabel15, .
[Codegen] .set .Llabel15, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel15, .
[Codegen] .set .Llabel188, .
[Codegen]                                 # LI[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen]R=GlobalDeclInstantiation .set .Llabel194, .

[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel200, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel206, .
[Codegen] movabsq    $0x75bb8e70d921, %r11
[Codegen[Codegen] push       %r11
] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel212, .
[Codegen[Codegen] movabsq    $0x1970c7c730b0, %r11
] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] push       %r11
[Codegen] .set .Llabel218, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] push       $0x0
[Codegen] .set .Llabel41, .
[Codegen] .set .Llabel41, .
[Codegen] movq       %rsp, %rax
[Codegen] call       .Lfrom46
[Codegen] [Codegen] .set .Llabel46, .andq       $0xfffffffffffffff0, %rsp

[Codegen] push       %rax
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabc3815, %rax
[Codegen] subq       $8, %rsp
[Codegen] xorl       %eax, %eax
[Codegen] movq       %rax, %rdi
[Codegen] [Codegen] movabsq    $0x75bb8e727f50, %r11
testb      $0xf, %spl
[Codegen] [Codegen] je         .Lfrom258
.set .Llabel59, .
[Codegen] .set .Llabel258, .
[Codegen] int3
[Codegen] .set .Llabel259, .
[Codegen] movl       %eax, 0x0(%r11)
[Codegen] pop        %rax
[Codegen] [Codegen]                    .set .Lfrom258, .Llabel259
      [Codegen]        # LIR=OsiPoint
[IonSnapshots] Ecall       .Lfrom264
ncodin[Codegen] addq       $8, %rsp
[Codegen] g LRecpop        %rsp
overInfo 75bb8cba7950 (frameCount 1, instructions 1)
[IonSnapshots] [Codegen] .set .Llabel269, .
starting recover with 1 instructio[Codegen] vmovdqu    0xe0(%rsp), %xmm14
n(s)
[IonSnapshots[Codegen] .set .Llabel278, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel287, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel296, .
] St[Codegen] vmovdqu    0xb0(%rsp), %xmm11
arting frame; implic[Codegen]it 2,  .set .Llabel305, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegenformals 0, fixed 0, exprs ] .set .Llabel314, .
0
[IonSnapshots] Wr[Codegen] vmovdqu    0x90(%rsp), %xmm9
iting pc offset 0, mode ResumeAfter, nsl[Codegenots 2
[IonSnapshots] .set .Llabel323, .
] [Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel332, .
Encoding LSnapshot 75bb8cba79a8 (LRecover 75bb8cba7950)
[IonSnapshots[Codegen] ] starvmovdqu    0x70(%rsp), %xmm7
ting[Codegen]  snapsho.set .Llabel338, .
t with reco[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel344, .
[Codegenver offset 4, bailout kind 11
] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel350, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[IonSnapshots] [Codegen] .set .Llabel356, .
[Codegen    slot 0] vmovdqu    0x30(%rsp), %xmm3
 (2): constant (inde[Codegenx 0)] .set .Llabel362, .

[IonSnapshots]     slot 1 [Codegen] (0vmovdqu    0x20(%rsp), %xmm2
): undefined[Codegen] .set .Llabel368, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen
[IonSnapshots] ] .set .Llabel374, .
ending snap[Codegen] shotvmovdqu    0x0(%rsp), %xmm0
 total[Codegen] addq       $240, %rsp
[Codegen]  size: 10 bytes (start 9)
pop        %rax
[Codegen] pop        %rcx
[Codegen] [Codegen] .set .Llabel63, .
pop        %rdx
[Codegen] .set .Llabel63, .
[Codegen] [Codegen] .set .Llabel63, .
pop        %rsi
[Codegen] [Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
    [Codegen] pop        %r10
      [Codegen] int3
            [Codegen] .set .Llabel398, .
[Codegen] .set .Lfrom95, .Llabel398
          # LIR=Bail
[Codegen[Codegen] ] testb      $0x7, %spl
jmp        .Lfrom68
[Codegen] [IonSnapshots] Encoje         .Lfrom408
ding L[Codegen] Snapshot 75bb8cba7b10 (LRecover 75bb8cba7950)
.set .Llabel408, .
[Codegen] int3
[Codegen] .set .Llabel409, .
[IonSnapshots] [Codegen] .set .Lfrom408, .Llabel409
starting s[Codegen] andq       $0xfffffffffffffff0, %rsp
napsho[Codegen] push       0x18(%rbp)
t with recov[Codegen] push       0x20(%rbp)
[Codegen] er o.set .Llabel419, .
[Codegen] movq       0x28(%rax), %rbxffset 
[4,Codegen] .set .Llabel423, .
 bailout kind [Codegen] 14
movq       0x0(%rbx), %rbx
[Codegen] push       %rax
[IonSnapshots]   [Codegen]   slmovl       %edx, %ecx
ot[Codegen]  0 (shll       $5, %ecx
2): [Codegen] orl        $0x2, %ecx
[Codegen] push       %rcx
[Codegen] .set .Llabel436, .
constant ([Codegen] movl       0x18(%rax), %eax
inde[Codegen] shrl       $16, %eax
[Codegen] cmpl       %eax, %edx
[Codegen] jae        .Lfrom450
x 0)
[IonSnapshots]     slot 1 (0): undefined
[[Codegen] movabsq    $0x2e5e545a4720, %rbx
[Codegen] .set .Llabel460, .
IonSnapshots] en[Codegen] ding snapshot total size: 11 bytes (start 19)
.set .Lfrom450, .Llabel460
[Codegen]             [Codegen]       call       *%rbx
[Codegen] .set .Llabel462, .
[Codegen] .set .Llabel462, .
    [Codegen] movq       -0x8(%rbp), %rdi
          # LIR=Unreachable
[Codegen] push       %r10
[Codegen[Codegen] push       %r9
] [Codegen] push       %r8
[Codegen] movq       %rbp, %rsp
push       %rdi
[Codegen[Codegen] pop        %rbp
] push       %rsi
[Codegen] pop        0x0(%rsp)
[Codegen] emitReturnFromIC
[Codegen] ret
[Codegen[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
] [Codegen] .set .Llabel86, .
push       %r10
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel95, .
[Codegen] [Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel104, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] push       %r9
.set .Llabel113, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel122, .
[Codegen] [Codegen] push       %r8
vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen[Codegen] .set .Llabel131, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel140, .
[] Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel149, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
push       %rdi
[Codegen] [Codegen.set .Llabel155, .
[Codegen] ] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel161, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] [Codegen] .set .Llabel167, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel173, .
push       %rax
[Codegen] [Codegen] subq       $240, %rsp
[Codegenvmovdqu    %xmm3, 0x30(%rsp)
[Codegen] ] .set .Llabel492, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel501, .
.set .Llabel179, .
[Codegen[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] ] vmovdqu    %xmm2, 0x20(%rsp)
.set .Llabel510, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen[Codegen] .set .Llabel519, .
] .set .Llabel185, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel191, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] .set .Llabel528, .
[Codegen] movq       %rsp, %rax
[Codegen[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] ] push       %rax
[Codegen] movabsq    $0x5c7edac37788, %rax
vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] subq       $8, %rsp
[Codegen][Codegen] .set .Llabel537, . movq       %rax, %rdi
[
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom231
[Codegen] .set .Llabel231, .
[Codegen] int3[Codegen] .set .Llabel546, .

[Codegen] .set .Llabel232, .[Codegen] vmovdqu    %xmm8, 0x80(%rsp)

[Codegen] .set .Lfrom231, .Llabel232[Codegen] .set .Llabel555, .

[Codegen] call       .Lfrom237
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel242, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel251, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen][Codegen] .set .Llabel260, .
[ .set .Llabel561, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel567, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel269, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel278, .

[Codegen] .set .Llabel573, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)[Codegen] vmovdqu    0xa0(%rsp), %xmm10

[Codegen] .set .Llabel579, .[Codegen] .set .Llabel287, .
[Codegen
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)] vmovdqu    0x90(%rsp), %xmm9

[Codegen][Codegen]  .set .Llabel585, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel591, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel597, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp).set .Llabel296, .

[Codegen] movq       %rsp, %rax
[Codegen] [Codegen] andq       $0xfffffffffffffff0, %rspvmovdqu    0x80(%rsp), %xmm8
[Codegen] 
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabc2c06, %rax
[Codegen] subq       $8, %rsp
.set .Llabel305, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] [Codegen] movq       %rax, %rdi
[Codegen.set .Llabel311, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] ] testb      $0xf, %spl
[Codegen] je         .Lfrom637
[Codegen] .set .Llabel637, .
[Codegen] int3
[Codegen] .set .Llabel638, .
[Codegen] .set .Lfrom637, .Llabel638
[Codegen] call       .Lfrom643
.set .Llabel317, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] [Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
.set .Llabel323, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] [Codegen] .set .Llabel648, .
.set .Llabel329, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel335, .
[Codegen] .set .Llabel657, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel341, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen[Codegen] .set .Llabel347, .
] [Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] pop        %rax
[Codegen] pop        %rcx
.set .Llabel666, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] [Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
.set .Llabel675, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel684, .
[[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] ==== END CodeGenerator::generateBody ====
Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel693, .
[Codegen] # END   creators: CodeGenerator::generate/
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel702, .
[CodegenCodeGenerator::generateBody
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel711, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel717, .
] .set .Llabel371, .
[Codegen] movq       %rbp, %rsp
[Codegen] [Codegen] vmovdqu    0x60(%rsp), %xmm6
pop        %rbp
[Codegen] ret
[Codegen] .set .Llabel723, .
[Codegen[Codegen] nop
[Codegen] nop
[Codegen] nop
[Codegen] vmovdqu    0x50(%rsp), %xmm5
] nop
[Codegen] .set .Llabel729, .
[Codegen] [Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] nop
[Codegen.set .Llabel735, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] ] nop
[Codegen] nop
[.set .Llabel741, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] nopCodegen] .set .Llabel747, .
[
[CodegenCodegen] .set .Llabel384, .
] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel753, .
[Codegen] movabsq    $0xffffffffffffffff, %r11
[Codegen] [Codegen] push       %r11
[Codegen] jmp        .Lfrom401
vmovdqu    0x0(%rsp), %xmm0
[Codegen] # BEGIN creators: CodeGenerator::generate[Codegen/CodeGeneratorShared::generateOutOfLineCode
[] addq       $240, %rsp
Codegen][Codegen # Emitting out of line code
[Codegen] pop        %rax
[Codegen] ] .set .Llabel401, .
pop        %rcx
[Codegen] pop        %rdx
[Codegen] [Codegen] .set .Lfrom68, .Llabel401
[Codegen] push       $0x13
[Codegen] jmp        .Lfrom408
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
# END   creators: CodeGenerator::generate/CodeGeneratorShared::generateOutOfLineCode
[Codegen] .set .Llabel408, .
[[Codegen] pop        %r9
[Codegen] pop        %r10
Codegen] .set .Lfrom408, .Llabel408
[Codegen][Codegen] int3
[Codegen] emitFailurePath
[Codegen] push       $0x0
[ .set .Llabel777, .
Codegen] jmp        .Lfrom415
[Profiling] Nativ[Codegen] .set .Lfrom52, .Llabel777
[Codegen] e To Bytecode Entries for ../../../../Benchmarkers/prop_access.js:1:1
[Safepoints] Encoding.set .Lfrom29, .Llabel777
 safepoint (p[Codegenosition 0):
] .set .Llabel777, .
[Safepoints] [Codegen] movq       0x10(%rdi), %rdi
    [Codegen] -- entry ended at 9
[Codegen] jmp        *0x0(%rdi)
# END   creators: CodeGenerator::generate
[Codegen] # BEGIN creators: BaselineCacheIRCompiler::compile/Assembler::finish
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] # END   creators: BaselineCacheIRCompiler::compile/Assembler::finish
[Codegen] # END   creators: BaselineCacheIRCompiler::compile
[BaselineIC]   Attached Call CacheIR stub
[BaselineScripts] Baseline compiling script ../../../../Benchmarkers/prop_access.js:2:33 (1970c7c73060)
[BaselineOp] Analyzing op @ 0 (end=105): Uninitialized
[BaselineOp] Analyzing op @ 1 (end=105): InitLexical
[BaselineOp] Analyzing op @ 5 (end=105): Pop
[BaselineOp] Analyzing op @ 6 (end=105): Zero
[BaselineOp] Analyzing op @ 7 (end=105): InitLexical
[BaselineOp] Analyzing op @ 11 (end=105): Pop
[BaselineOp] Analyzing op @ 12 (end=105): LoopHead
[BaselineOp] Analyzing op @ 18 (end=105): GetLocal
[BaselineOp] Analyzing op @ 22 (end=105): GetArg
[BaselineOp] Analyzing op @ 25 (end=105): Lt
[BaselineOp] Analyzing op @ 26 (end=105): JumpIfFalse
[BaselineOp] Analyzing op @ 31 (end=105): JumpTarget
[BaselineOp] Analyzing op @ 36 (end=105): Uninitialized
[BaselineOp] Analyzing op @ 37 (end=105): InitLexical
[BaselineOp] Analyzing op @ 41 (end=105): InitLexical
[BaselineOp] Analyzing op @ 45 (end=105): Pop
[BaselineOp] Analyzing op @ 46 (end=105): NewObject
[BaselineOp] Analyzing op @ 51 (end=105): Zero
[BaselineOp] Analyzing op @ 52 (end=105): String
[BaselineOp] Analyzing op @ 57 (end=105): InitElem
[BaselineOp] Analyzing op @ 58 (end=105): One
[BaselineOp] Analyzing op @ 59 (end=105): String
[BaselineOp] Analyzing op @ 64 (end=105): InitElem
[BaselineOp] Analyzing op @ 65 (end=105): InitLexical
[BaselineOp] Analyzing op @ 69 (end=105): Pop
[BaselineOp] Analyzing op @ 70 (end=105): GetLocal
[BaselineOp] Analyzing op @ 74 (end=105): One
[BaselineOp] Analyzing op @ 75 (end=105): GetElem
[BaselineOp] Analyzing op @ 76 (end=105): InitLexical
[BaselineOp] Analyzing op @ 80 (end=105): Pop
[BaselineOp] Analyzing op @ 81 (end=105): DebugLeaveLexicalEnv
[BaselineOp] Analyzing op @ 82 (end=105): GetLocal
[BaselineOp] Analyzing op @ 86 (end=105): ToNumeric
[BaselineOp] Analyzing op @ 87 (end=105): Inc
[BaselineOp] Analyzing op @ 88 (end=105): SetLocal
[BaselineOp] Analyzing op @ 92 (end=105): Pop
[BaselineOp] Analyzing op @ 93 (end=105): Goto
[BaselineOp] Analyzing op @ 98 (end=105): JumpTarget
[BaselineOp] Analyzing op @ 103 (end=105): DebugLeaveLexicalEnv
[BaselineOp] Analyzing op @ 104 (end=105): RetRval
[Codegen] # Emitting baseline code for script ../../../../Benchmarkers/prop_access.js:2:33
[Codegen] # BEGIN creators: BaselineCompiler::compile
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCodeGen<Handler>::emitPrologue
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] jmp        .Lfrom9
[Codegen] movabsq    $0x75bb8e73a200, %rcx
[Codegen] .set .Llabel19, .
[Codegen] movq       0x150(%rcx), %rcx
[Codegen] .set .Llabel26, .
[Codegen] movq       %rbp, 0xe0(%rcx)
[Codegen] movq       $0, 0xe8(%rcx)
[Codegen] .set .Llabel44, .
[Codegen] .set .Lfrom9, .Llabel44
[Codegen] subq       $72, %rsp
[Codegen] .set .Llabel48, .
[Codegen] movl       $0x0, -0x10(%rbp)
[Codegen] .set .Llabel55, .
[Codegen] movq       0x18(%rbp), %rcx
[Codegen] andq       $0x3, %rcx
[Codegen] testq      %rcx, %rcx
[Codegen] je         .Lfrom72
[Codegen] cmpq       $0x1, %rcx
[Codegen] je         .Lfrom82
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel100, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel109, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel118, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel127, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel136, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel145, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel154, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel163, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel169, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel175, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel181, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel187, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel193, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel199, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel205, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabb5761, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom245
[Codegen] .set .Llabel245, .
[Codegen] int3
[Codegen] .set .Llabel246, .
[Codegen] .set .Lfrom245, .Llabel246
[Codegen] call       .Lfrom251
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel256, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel265, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel274, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel283, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel292, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel301, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel310, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel319, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel325, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel331, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel337, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel343, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel349, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel355, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel361, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel385, .
[Codegen] .set .Lfrom82, .Llabel385
[Codegen] .set .Lfrom72, .Llabel385
[Codegen] .set .Llabel385, .
[Codegen] movq       0x18(%rbp), %rcx
[Codegen] andq       $0xfffffffffffffffc, %rcx
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] movq       0x20(%rcx), %rcx
[Codegen] xorq       %r11, %rcx
[Codegen] .set .Llabel410, .
[Codegen] movq       %rcx, -0x30(%rbp)
[Codegen] movabsq    $0x75bb8e73adf8, %rcx
[Codegen] cmpq       $0x0, 0x0(%rcx)
[Codegen] je         .Lfrom434
[Codegen] .set .Llabel434, .
[Codegen] movq       0x0(%rcx), %rax
[Codegen] .set .Llabel437, .
[Codegen] movq       %rax, -0x28(%rbp)
[Codegen] movq       $0, 0x0(%rcx)
[Codegen] jmp        .Lfrom453
[Codegen] .set .Llabel453, .
[Codegen] .set .Lfrom434, .Llabel453
[Codegen] movabsq    $0x75bb8e7a3b68, %r11
[Codegen] movq       %r11, -0x28(%rbp)
[Codegen] .set .Llabel467, .
[Codegen] .set .Lfrom453, .Llabel467
[Codegen] movabsq    $0x75bb8e73ae30, %r11
[Codegen] cmpq       %rsp, 0x0(%r11)
[Codegen] jbe        .Lfrom486
[Codegen] movq       %rbp, %rbx
[Codegen] subq       $72, %rbx
[Codegen] push       %rbx
[Codegen] .set .Llabel494, .
[Codegen] movl       $0x48, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom508
[Codegen] .set .Llabel508, .
[Codegen] .set .Llabel508, .
[Codegen] .set .Lfrom486, .Llabel508
[Codegen] movabsq    $0xfff9800000000000, %rcx
[Codegen] push       %rcx
[Codegen] push       %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel521, .
[Codegen] movabsq    $0x75bb8cc8e800, %rbx
[Codegen] movabsq    $0x75bb8e73a2b8, %r11
[Codegen] cmpq       %rbx, 0x0(%r11)
[Codegen] je         .Lfrom550
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel568, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel577, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel586, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel595, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel604, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel613, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel622, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel631, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel637, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel643, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel649, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel655, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel661, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel667, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel673, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edaca5fac, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom713
[Codegen] .set .Llabel713, .
[Codegen] int3
[Codegen] .set .Llabel714, .
[Codegen] .set .Lfrom713, .Llabel714
[Codegen] call       .Lfrom719
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel724, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel733, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel742, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel751, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel760, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel769, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel778, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel787, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel793, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel799, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel805, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel811, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel817, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel823, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel829, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel853, .
[Codegen] .set .Lfrom550, .Llabel853
[Codegen] .set .Llabel853, .
[Codegen] movq       -0x28(%rbp), %rax
[Codegen] .set .Llabel857, .
[Codegen] movl       0xa8(%rax), %ecx
[Codegen] addl       $1, %ecx
[Codegen] .set .Llabel866, .
[Codegen] movl       %ecx, 0xa8(%rax)
[Codegen] cmpl       $0x1f4, %ecx
[Codegen] jne        .Lfrom884
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel892, .
[Codegen] movl       $0x60, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom906
[Codegen] .set .Llabel906, .
[Codegen] .set .Llabel906, .
[Codegen] movq       -0x28(%rbp), %rax
[Codegen] .set .Llabel910, .
[Codegen] movl       0xa8(%rax), %ecx
[Codegen] .set .Llabel916, .
[Codegen] .set .Lfrom884, .Llabel916
[Codegen] testl      %ecx, %ecx
[Codegen] jl         .Lfrom924
[Codegen] cmpl       $0x0, 0xb4(%rax)
[Codegen] jne        .Lfrom937
[Codegen] .set .Llabel937, .
[Codegen] movq       -0x38(%rax), %rax
[Codegen] testb      $0x1, %al
[Codegen] jne        .Lfrom949
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel957, .
[Codegen] movl       $0x60, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom971
[Codegen] .set .Llabel971, .
[Codegen] .set .Llabel971, .
[Codegen] .set .Lfrom949, .Llabel971
[Codegen] .set .Lfrom937, .Llabel971
[Codegen] .set .Lfrom924, .Llabel971
[Codegen] .set .Llabel971, .
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCodeGen<Handler>::emitPrologue
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody
[BaselineOp] Compiling op @ 0: Uninitialized
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Uninitialized
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Uninitialized
[BaselineOp] Compiling op @ 1: InitLexical
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=InitLexical
[Codegen] movabsq    $0xfffa80000000000a, %r11
[Codegen] movq       %r11, -0x50(%rbp)
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=InitLexical
[BaselineOp] Compiling op @ 5: Pop
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Pop
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Pop
[BaselineOp] Compiling op @ 6: Zero
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Zero
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Zero
[BaselineOp] Compiling op @ 7: InitLexical
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=InitLexical
[Codegen] movabsq    $0xfff8800000000000, %r11
[Codegen] movq       %r11, -0x50(%rbp)
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=InitLexical
[BaselineOp] Compiling op @ 11: Pop
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Pop
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Pop
[BaselineOp] Compiling op @ 12: LoopHead
[Codegen] .set .Llabel999, .
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=LoopHead
[Codegen] movabsq    $0x75bb8e73adf0, %r11
[Codegen] cmpl       $0x0, 0x0(%r11)
[Codegen] je         .Lfrom1019
[Codegen] .set .Llabel1019, .
[Codegen] movl       $0x60, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom1033
[Codegen] .set .Llabel1033, .
[Codegen] .set .Llabel1033, .
[Codegen] .set .Lfrom1019, .Llabel1033
[Codegen] .set .Llabel1033, .
[Codegen] .set .Llabel1033, .
[Codegen] movq       -0x28(%rbp), %rax
[Codegen] .set .Llabel1037, .
[Codegen] movl       0xa8(%rax), %ecx
[Codegen] addl       $1, %ecx
[Codegen] .set .Llabel1046, .
[Codegen] movl       %ecx, 0xa8(%rax)
[Codegen] cmpl       $0x1f4, %ecx
[Codegen] jne        .Lfrom1064
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel1072, .
[Codegen] movl       $0x60, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom1086
[Codegen] .set .Llabel1086, .
[Codegen] .set .Llabel1086, .
[Codegen] movq       -0x28(%rbp), %rax
[Codegen] .set .Llabel1090, .
[Codegen] movl       0xa8(%rax), %ecx
[Codegen] .set .Llabel1096, .
[Codegen] .set .Lfrom1064, .Llabel1096
[Codegen] testl      %ecx, %ecx
[Codegen] jl         .Lfrom1104
[Codegen] cmpl       $0x0, 0xb4(%rax)
[Codegen] jne        .Lfrom1117
[Codegen] .set .Llabel1117, .
[Codegen] movq       -0x38(%rax), %rax
[Codegen] testb      $0x1, %al
[Codegen] jne        .Lfrom1129
[Codegen] movl       $0x60, %ecx
[Codegen] movabsq    $0x75bb8e70a7dd, %r11
[Codegen] push       %r11
[Codegen] push       %rcx
[Codegen] movq       %rbp, %rcx
[Codegen] subq       $72, %rcx
[Codegen] push       %rcx
[Codegen] .set .Llabel1155, .
[Codegen] movl       $0x60, -0xc(%rbp)
[Codegen] push       $0x1
[Codegen] call       .Lfrom1169
[Codegen] .set .Llabel1169, .
[Codegen] testq      %rax, %rax
[Codegen] je         .Lfrom1178
[Codegen] movabsq    $0x75bb8e7303bc, %r11
[Codegen] cmpl       $0x0, 0x0(%r11)
[Codegen] je         .Lfrom1198
[Codegen] movabsq    $0x75bb8e73a320, %r11
[Codegen] .set .Llabel1208, .
[Codegen] movq       0x0(%r11), %rdx
[Codegen] .set .Llabel1211, .
[Codegen] movq       0xe0(%rdx), %rdx
[Codegen] testq      %rdx, %rdx
[Codegen] je         .Lfrom1227
[Codegen] cmpq       %rdx, %rbp
[Codegen] je         .Lfrom1236
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel1254, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel1263, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel1272, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel1281, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel1290, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel1299, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel1308, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel1317, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel1323, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel1329, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel1335, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel1341, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel1347, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel1353, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel1359, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabaed4c, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom1399
[Codegen] .set .Llabel1399, .
[Codegen] int3
[Codegen] .set .Llabel1400, .
[Codegen] .set .Lfrom1399, .Llabel1400
[Codegen] call       .Lfrom1405
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel1410, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel1419, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel1428, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel1437, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel1446, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel1455, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel1464, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel1473, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel1479, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel1485, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel1491, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel1497, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel1503, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel1509, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel1515, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel1539, .
[Codegen] .set .Lfrom1236, .Llabel1539
[Codegen] .set .Lfrom1227, .Llabel1539
[Codegen] .set .Lfrom1198, .Llabel1539
[Codegen] movq       %rbp, %rsp
[Codegen] .set .Llabel1542, .
[Codegen] movq       0x8(%rax), %rcx
[Codegen] jmp        *0x0(%rax)
[Codegen] .set .Llabel1548, .
[Codegen] .set .Lfrom1178, .Llabel1548
[Codegen] .set .Lfrom1129, .Llabel1548
[Codegen] .set .Lfrom1117, .Llabel1548
[Codegen] .set .Lfrom1104, .Llabel1548
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=LoopHead
[BaselineOp] Compiling op @ 18: GetLocal
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetLocal
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetLocal
[BaselineOp] Compiling op @ 22: GetArg
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetArg
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetArg
[BaselineOp] Compiling op @ 25: Lt
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Lt
[Codegen] movq       0x28(%rbp), %rbx
[Codegen] movq       -0x50(%rbp), %rcx
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Lt/emitNextIC
[Codegen] .set .Llabel1556, .
[Codegen] movq       -0x28(%rbp), %rdi
[Codegen] .set .Llabel1560, .
[Codegen] movq       0xc0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel1569, .
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Lt/emitNextIC
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Lt
[BaselineOp] Compiling op @ 26: JumpIfFalse
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=JumpIfFalse
[Codegen] testl      %ecx, %ecx
[Codegen] je         .Lfrom1577
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=JumpIfFalse
[BaselineOp] Compiling op @ 31: JumpTarget
[Codegen] .set .Llabel1577, .
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=JumpTarget
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=JumpTarget
[BaselineOp] Compiling op @ 36: Uninitialized
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Uninitialized
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Uninitialized
[BaselineOp] Compiling op @ 37: InitLexical
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=InitLexical
[Codegen] movabsq    $0xfffa80000000000a, %r11
[Codegen] movq       %r11, -0x58(%rbp)
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=InitLexical
[BaselineOp] Compiling op @ 41: InitLexical
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=InitLexical
[Codegen] movabsq    $0xfffa80000000000a, %r11
[Codegen] movq       %r11, -0x60(%rbp)
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=InitLexical
[BaselineOp] Compiling op @ 45: Pop
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Pop
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Pop
[BaselineOp] Compiling op @ 46: NewObject
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=NewObject
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=NewObject/emitNextIC
[Codegen] .set .Llabel1605, .
[Codegen] movq       -0x28(%rbp), %rdi
[Codegen] .set .Llabel1609, .
[Codegen] movq       0xd0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel1618, .
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=NewObject/emitNextIC
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=NewObject
[BaselineOp] Compiling op @ 51: Zero
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Zero
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Zero
[BaselineOp] Compiling op @ 52: String
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=String
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=String
[BaselineOp] Compiling op @ 57: InitElem
[Codegen] push       %rcx
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=InitElem
[Codegen] movabsq    $0xfffb1970c7c2d780, %r11
[Codegen] movq       %r11, -0x18(%rbp)
[Codegen] movabsq    $0xfff8800000000000, %rbx
[Codegen] pop        %rcx
[Codegen] push       %rcx
[Codegen] push       -0x18(%rbp)
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=InitElem/emitNextIC
[Codegen] .set .Llabel1648, .
[Codegen] movq       -0x28(%rbp), %rdi
[Codegen] .set .Llabel1652, .
[Codegen] movq       0xd8(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel1661, .
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=InitElem/emitNextIC
[Codegen] addq       $8, %rsp
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=InitElem
[BaselineOp] Compiling op @ 58: One
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=One
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=One
[BaselineOp] Compiling op @ 59: String
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=String
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=String
[BaselineOp] Compiling op @ 64: InitElem
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=InitElem
[Codegen] movabsq    $0xfffb1970c7c2be60, %r11
[Codegen] movq       %r11, -0x18(%rbp)
[Codegen] movabsq    $0xfff8800000000001, %rbx
[Codegen] pop        %rcx
[Codegen] push       %rcx
[Codegen] push       -0x18(%rbp)
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=InitElem/emitNextIC
[Codegen] .set .Llabel1694, .
[Codegen] movq       -0x28(%rbp), %rdi
[Codegen] .set .Llabel1698, .
[Codegen] movq       0xe0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel1707, .
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=InitElem/emitNextIC
[Codegen] addq       $8, %rsp
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=InitElem
[BaselineOp] Compiling op @ 65: InitLexical
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=InitLexical
[Codegen] movq       -0x68(%rbp), %rcx
[Codegen] movq       %rcx, -0x58(%rbp)
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=InitLexical
[BaselineOp] Compiling op @ 69: Pop
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Pop
[Codegen] addq       $8, %rsp
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Pop
[BaselineOp] Compiling op @ 70: GetLocal
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetLocal
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetLocal
[BaselineOp] Compiling op @ 74: One
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=One
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=One
[BaselineOp] Compiling op @ 75: GetElem
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetElem
[Codegen] movabsq    $0xfff8800000000001, %rbx
[Codegen] movq       -0x58(%rbp), %rcx
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetElem/emitNextIC
[Codegen] .set .Llabel1737, .
[Codegen] movq       -0x28(%rbp), %rdi
[Codegen] .set .Llabel1741, .
[Codegen] movq       0xe8(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel1750, .
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetElem/emitNextIC
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetElem
[BaselineOp] Compiling op @ 76: InitLexical
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=InitLexical
[Codegen] movq       %rcx, -0x60(%rbp)
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=InitLexical
[BaselineOp] Compiling op @ 80: Pop
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Pop
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Pop
[BaselineOp] Compiling op @ 81: DebugLeaveLexicalEnv
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=DebugLeaveLexicalEnv
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=DebugLeaveLexicalEnv
[BaselineOp] Compiling op @ 82: GetLocal
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetLocal
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=GetLocal
[BaselineOp] Compiling op @ 86: ToNumeric
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=ToNumeric
[Codegen] movq       -0x50(%rbp), %rcx
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=ToNumeric/emitNextIC
[Codegen] .set .Llabel1758, .
[Codegen] movq       -0x28(%rbp), %rdi
[Codegen] .set .Llabel1762, .
[Codegen] movq       0xf0(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel1771, .
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=ToNumeric/emitNextIC
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=ToNumeric
[BaselineOp] Compiling op @ 87: Inc
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Inc
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Inc/emitNextIC
[Codegen] .set .Llabel1771, .
[Codegen] movq       -0x28(%rbp), %rdi
[Codegen] .set .Llabel1775, .
[Codegen] movq       0xf8(%rdi), %rdi
[Codegen] call       *0x0(%rdi)
[Codegen] .set .Llabel1784, .
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Inc/emitNextIC
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Inc
[BaselineOp] Compiling op @ 88: SetLocal
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=SetLocal
[Codegen] movq       %rcx, -0x50(%rbp)
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=SetLocal
[BaselineOp] Compiling op @ 92: Pop
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Pop
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Pop
[BaselineOp] Compiling op @ 93: Goto
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Goto
[Codegen] jmp        .Llabel999
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=Goto
[BaselineOp] Compiling op @ 98: JumpTarget
[Codegen] .set .Llabel1793, .
[Codegen] .set .Lfrom1577, .Llabel1793
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=JumpTarget
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=JumpTarget
[BaselineOp] Compiling op @ 103: DebugLeaveLexicalEnv
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=DebugLeaveLexicalEnv
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=DebugLeaveLexicalEnv
[BaselineOp] Compiling op @ 104: RetRval
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=RetRval
[Codegen] movabsq    $0xfff9800000000000, %rcx
[Codegen] testl      $0x1, -0x10(%rbp)
[Codegen] je         .Lfrom1816
[Codegen] movq       -0x8(%rbp), %rcx
[Codegen] .set .Llabel1820, .
[Codegen] .set .Lfrom1816, .Llabel1820
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody/op=RetRval
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCompiler::emitBody
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCodeGen<Handler>::emitEpilogue
[Codegen] .set .Llabel1820, .
[Codegen] jmp        .Lfrom1825
[Codegen] jmp        .Lfrom1830
[Codegen] .set .Llabel1830, .
[Codegen] .set .Lfrom1825, .Llabel1830
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[Codegen] ret
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCodeGen<Handler>::emitEpilogue
[Codegen] # BEGIN creators: BaselineCompiler::compile/BaselineCodeGen<Handler>::emitOutOfLinePostBarrierSlot
[Codegen] # END   creators: BaselineCompiler::compile/BaselineCodeGen<Handler>::emitOutOfLinePostBarrierSlot
[Codegen] # END   creators: BaselineCompiler::compile
[Codegen] # BEGIN creators: exception_tail
[Codegen] # BEGIN creators: exception_tail/Assembler::finish
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] # END   creators: exception_tail/Assembler::finish
[BaselineScripts] Created BaselineScript 75bb8e7bb030 (raw 2e5e545e4a70) for ../../../../Benchmarkers/prop_access.js:2:33
[Profiling] Added JitcodeGlobalEntry for baseline script ../../../../Benchmarkers/prop_access.js:2:33 (75bb8e7bb030)
[Codegen] # END   creators: exception_tail
[IonScripts] Warp Compiling script ../../../../Benchmarkers/prop_access.js:2:33 (1970c7c73060) (warmup-counter=1,)
[WarpTranspiler] fallback stub (entered-count: 0) for JSOp::Lt @ ../../../../Benchmarkers/prop_access.js:3:25
[WarpTranspiler] fallback stub (entered-count: 0) for JSOp::JumpIfFalse @ ../../../../Benchmarkers/prop_access.js:3:25
[WarpTranspiler] fallback stub (entered-count: 0) for JSOp::NewObject @ ../../../../Benchmarkers/prop_access.js:6:19
[WarpTranspiler] fallback stub (entered-count: 0) for JSOp::InitElem @ ../../../../Benchmarkers/prop_access.js:6:21
[WarpTranspiler] fallback stub (entered-count: 0) for JSOp::InitElem @ ../../../../Benchmarkers/prop_access.js:6:32
[WarpTranspiler] fallback stub (entered-count: 0) for JSOp::GetElem @ ../../../../Benchmarkers/prop_access.js:7:17
[WarpTranspiler] fallback stub (entered-count: 0) for JSOp::ToNumeric @ ../../../../Benchmarkers/prop_access.js:3:37
[WarpTranspiler] fallback stub (entered-count: 0) for JSOp::Inc @ ../../../../Benchmarkers/prop_access.js:3:37
WarpSnapshot (0x75bb8cbca4c8)
------------------------------
globalLexicalEnv: 0x1970c7c41040
globalLexicalEnvThis: 0x1970c7c4e040
failedBoundsCheck: 0
failedLexicalCheck: 0

JitZone stubs:
Stub 0: 0x0
Stub 1: 0x0
Stub 2: 0x0
Stub 3: 0x0
Stub 4: 0x0

Nursery objects (0):

WarpScriptSnapshot (0x75bb8cbca458)
------------------------------
Script: ../../../../Benchmarkers/prop_access.js:2:33 (0x1970c7c73060)
  moduleObject: 0x0
  isArrowFunction: 0
  environment: None

  WarpBailout (offset 25, JSOp::Lt)

  WarpBailout (offset 26, JSOp::JumpIfFalse)

  WarpBailout (offset 46, JSOp::NewObject)

  WarpBailout (offset 57, JSOp::InitElem)

  WarpBailout (offset 64, JSOp::InitElem)

  WarpBailout (offset 75, JSOp::GetElem)

  WarpBailout (offset 86, JSOp::ToNumeric)

  WarpBailout (offset 87, JSOp::Inc)

[IonSyncLogs] Can't log script ../../../../Benchmarkers/prop_access.js:2:33. (Compiled on background thread.)
[BaselineICFallback] Fallback hit for (../../../../Benchmarkers/prop_access.js:2:33) (pc=25,line=3,uses=3,stubs=0): 
=Compare(Lt)
==== BuildSSA (== input to OptimizeMIR) [Codegen] # BEGIN creators: BaselineCacheIRCompiler::compile
[Codegen] addl       $1, 0x8(%rdi)
[Codegen] emitGuardToInt32
===[Codegen] movq       %rcx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff1, %r11d
[Codegen] ==
  Block0:
    0 = Value.Parameter
    1 = Value.Parameter
    2 = Undefined.Constant undefined
    3 = None.Start
    4 = None.CheckOverRecursed
    5 = MagicUninitializedLexical.Constant magic uninitialized-lexical
    6 = Int32.Constant 0x0
    14 = jne        .Lfrom24
[Codegen] emitGuardToInt32
[Codegen] movq       %rbx, %r11
[Codegen] None.Gotoshrq       $47, %r11
[Codegen] Block1
  Block1:
    7 = Value. cmpl       $0x1fff1, %r11d
[Codegen] jne        .Lfrom44
Phi 2[Codegen] emitCompareInt32Result
[Codegen] movq       %rcx, %rax
[ 2
    8Codegen] movl       %eax, %eax
[Codegen] movl       %ebx, %ebx = Value.Phi
[Codegen] cmpl       %ebx, %eax
[Codegen] jl         .Lfrom59
 2 2
    [Codegen] 9 = Value.Phimovabsq    $0xfff9000000000000, %rcx
[Codegen 0 0] jmp        .Lfrom74
[Codegen
    10 = Value.Phi ] .set .Llabel74, .
1 1
    11 = Value.Phi 6[Codegen]  34
    12 = Value.Phi 2 21
    13 = Value.Phi 2.set .Lfrom59, .Llabel74
 30[Codegen] movabsq    $0xfff9000000000001, %rcx

    [Codegen] .set .Llabel84, .
15 = None.InterruptCheck
[Codegen]     16 = None.set .Lfrom74, .Llabel84
.Bail
    17 = Bool.[CodegenUnreachableResult
]     18 =emitReturnFromIC
 None.Test[Codegen] ret
 true->Block2 false->Block3[Codegen] push       %r10
 17[Codegen] push       %r9

  B[Codegenlock2:
    ] 19 = MagicUninitializedLexical.push       %r8
Constant [Codegen] push       %rdi
magic uninitialized-lexical
[Codegen] push       %rsi    20 = None.Bail
[
    21 Codegen] push       %rdx
= [Codegen] Object.UnreachableResult
push       %rcx
    22[Codegen]  = Int32push       %rax
.Constant 0x0
    [Codegen23 ] = String.subq       $240, %rsp
Constant [Codegenstring 1970c7c2d780] .set .Llabel103, .

    24 = None.Bail
    25 = Int32.Constant 0x1
    26 = String.Constant[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel112, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
 string 1970c7c2be60
    27 = None.Bail
    28 = [Codegen] .set .Llabel121, .
Int32.Constant [Codegen0x1
    29]  = None.Bail
    30 = Value.UnreachableResult
    31 = None.Bailvmovdqu    %xmm12, 0xc0(%rsp)

    32 = Value.UnreachableResult
    33 = None.Bail
    34 = Value.UnreachableResult[Codegen] .set .Llabel130, .

    35 [Codegen] = None.vmovdqu    %xmm11, 0xb0(%rsp)
Goto Block1[Codegen] 
  Block3:
    36 .set .Llabel139, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel148, .
= None.[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
Return [Codegen] .set .Llabel157, .
8
[Codegen===== ../../../../Benchmarkers/prop_access.js:] vmovdqu    %xmm8, 0x80(%rsp)
2 =====

[[Codegen] .set .Llabel166, .
Prune] Begin[Codegen] 
[Prune] Vivmovdqu    %xmm7, 0x70(%rsp)
si[Codegen] .set .Llabel172, .
t block [Codegen] 0:
vmovdqu    %xmm6, 0x60(%rsp)
[Prune] [Codegen  Reach] .set .Llabel178, .
es blo[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
ck 1[Codegen] .set .Llabel184, .

[[Codegen] Prune]vmovdqu    %xmm4, 0x40(%rsp)
 Visit block 1[Codegen] :
[Prune.set .Llabel190, .
] [Codegen] vmovdqu    %xmm3, 0x30(%rsp)Remove unreachable instructions and blocks:

[Codegen] [Prune.set .Llabel196, .
]   R[Codegenem] vmovdqu    %xmm2, 0x20(%rsp)
ove [Codegen] block .set .Llabel202, .
3.
[Prune[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel208, .
]   Remove block ed[Codegen] ge 2vmovdqu    %xmm0, 0x0(%rsp)
 -> 1.
[Prune]   Remove block 2.
[[Codegen] movq       %rsp, %rax
[Codegen] Prune]   Trim blandq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
ock 1.
[Codegen] movabsq    $0x5c7edabc2c06, %rax
[Codegen] subq       $8, %rsp

[Escape][Codegen] movq       %rax, %rdi
 Begin (ScalarReplacement)
[Codegen] 
[Alias] Begin
[Alias] Processing store Parametertestb      $0xf, %spl
#0 (flags fffffff)
[[Codegen] je         .Lfrom248
Alias] Processing store [Codegen] .set .Llabel248, .
[Codegen] Parameter#1 (flags fffffffint3
[Codegen] .set .Llabel249, .
)
[Codegen] .set .Lfrom248, .Llabel249
[Alias] [Codegen] call       .Lfrom254
Processing store Start[Codegen] addq       $8, %rsp
#3 (flags[Codegen] pop        %rsp
 fffffff[Codegen] )
.set .Llabel259, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel268, .
[AliasSummaries] Dependency list for other passes:
[Codegen] vmovdqu    0xd0(%rsp), %xmm13

[GVN] Running GVN on[Codegen] .set .Llabel277, .
 graph[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel286, .
 (with[Codegen]  2 blovmovdqu    0xb0(%rsp), %xmm11
cks)
[GVN]   Visit[Codegen] in.set .Llabel295, .
g do[Codegen] vmovdqu    0xa0(%rsp), %xmm10
minato[Codegen] r tree (with 2 blocks) rooted at block0 (normal entry block)
[.set .Llabel304, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel313, .
GVN]     Visiting block0
[Codegen] [GVN]  vmovdqu    0x80(%rsp), %xmm8
     Recording Constant2
[Codegen[GVN] ] .set .Llabel322, .
      [Codegen] vmovdqu    0x70(%rsp), %xmm7
Discarding dead Constant5
[GVN] [Codegen      Recording Constant6] .set .Llabel328, .

[GVN]   [Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel334, .
[Codegen  Visiting block1
] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel340, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4

[LICM] Beginning LICM pass
[Codegen] .set .Llabel346, .

[Range] Adding beta nodes
[Range] [Codegen] vmovdqu    0x30(%rsp), %xmm3
Lookin[Codegeng at block 1] .set .Llabel352, .
[Codegen] 
[vmovdqu    0x20(%rsp), %xmm2
Range] L[Codegen] .set .Llabel358, .
ooking at block [Codegen] vmovdqu    0x10(%rsp), %xmm1
0
[Codegen] [Range.set .Llabel364, .
] [Codegen] Doing range propagation
vmovdqu    0x0(%rsp), %xmm0
[Range[Codegen] ] addq       $240, %rsp
computing ra[Codegen] pop        %rax
nge on 0
[Range] [Codegen] pop        %rcx
comput[Codegen] ing range pop        %rdx
on 1[Codegen]
[Range] co pop        %rsimputin
[Codegen] pop        %rdi
[Codegen] pop        %r8g range 
[Codegen] pop        %r9
on 2
[[Codegen] Range] cpop        %r10
[Codegen] int3
omputing range on 3
[Range] [Codegen] emitFailurePath
computin[Codegen] .set .Llabel388, .
[Codegen] g rang.set .Lfrom44, .Llabel388
[Codegene on 4
] .set .Lfrom24, .Llabel388
[Codegen] .set .Llabel388, .
[Codegen] movq       0x10(%rdi), %rdi
[Range] computing range on 6
[[Codegen] jmp        *0x0(%rdi)
Range[Codegen]   Constant#6 has range I[0] # BEGIN creators: BaselineCacheIRCompiler::compile, 0]
/Assembler::finish
[Codegen[Range] comput] .balign 16, 0xf4   # hlt
[Codegening range on 8
[Range] c] jmp        *2(%rip)
omputing[Codegen] ud2
[Codegen] .quad      0
[Codegen] # END   creators: BaselineCacheIRCompiler::compile r/Assembler::finish
ange on 9
[Range] [Codegen] # END   creators: BaselineCacheIRCompiler::compileRemoving beta nodes

[Range] Do range-base truncation (backward loop)
[Range] Do graph type fixup (dequeue)
[BaselineIC]   Attached Compare
[Sink] Begin
 CacheIR stub

[Range] Begin (removeUnnecessaryBitops)
[BaselineICFallback] Fallback hit for (../../../../Benchmarkers/prop_access.js:2:33) (pc=
[FLAC] Begin
46,line=6
[EAA] ,uses=Begin
3,stubs=
[0): NewObject
MarkLoadsUsedAsPropertyKeys] Begin
[RedundantShapeGuards] Begin
[RedundantGCBarriers] Begin
[
===Codegen] # BEGIN creators: BaselineCacheIRCompiler::compile
[Codegen] == BeforeLIR (== result of OptimizeMIR) ====addl       $1, 0x8(%rdi)
=
  Block0:[Codegen] 
    0 = Value.Parameter
    1 = ValueemitGuardNoAllocationMetadataBuilder
.Parameter
    2 = Undefined.Constant undefined
    3 = None.Start
    4 = None.CheckOverRecursed
[Codegen]     5 = Int32.Constant 0x0emitLoadStubField

    6 = None.Goto Block1
 [Codegen] .set .Llabel4, .
 Block1:
    7 = None.InterruptCheck
    8[Codegen] movq       0x20(%rdi), %rax
 = None.Bail[Codegen] cmpq       $0x0, 0x0(%rax)

    9 [Codegen] jne        .Lfrom18
= None.Unreachable
===== ../../../../Benchmarkers/prop_access.js:2 =====
[Current resume point 75bb8cbca780Codegen] emitNewPlainObjectResult
[Codegen] .set .Llabel18, .
 details[Codegen:
] movq       0x28(%rdi), %rcx
    frame [Codegen] count: 1.set .Llabel22, .

 [Codegen]   movq       0x30(%rdi), %rbx
 taken at block 0 entry
    p[Codegen]c: 75bb8e70a7d1 ( movabsq    $0x75bb8e732260, %r11
[Codegen] cmpl       $0x0, 0x0(%r11)
[Codegen] jne        .Lfrom46
script: 1970c7c73060, off[Codegen] testq      $0x1, 0x8(%rbx)
set: 0)
[Codegen]     sjne        .Lfrom60
lot0: [CodegenConstant#2
]     slot1: Constantmovabsq    $0x75bb8e7329d0, %rdx
#2
    slot2: [Codegen] Parameter#0
  .set .Llabel70, .
  slot3:[Codegen Parameter] movq       0x0(%rdx), %rax
#1[Codegen] addq       $64, %rax

    slot4: [Codegen] cmpq       %rax, 0x8(%rdx)
[Codegen] Constant#2
jb         .Lfrom87
    sl[Codegen] .set .Llabel87, .
[Codegen] movq       %rax, 0x0(%rdx)
[Codegen] subq       $56, %rax
ot5: Constant#2
    slot6: Constant#2
[Codegen] addl       $1, 0x1c(%rbx)
[Codegen[IonSnapshots] ] cmpl       $0xc8, 0x1c(%rbx)
[Codegen] jne        .Lfrom111
Generating LIR recover info 75bb8cbce520 from MIR (75bb8cbca780)
[IonSnapshots] [Codegen] movabsq    $0x75bb8e732bb8, %r11
Generating LIR snapshot 75bb8cbce578 from reco[Codegenver (75bb8cbce520)
] [IonSnapshots] .set .Llabel121, .
Assigning snapshot 75bb8cbce578 to instruction 75bb8cbce5f0 (osipoint[Codegen] movq       0x0(%r11), %rdx
)
Current resu[Codegen] .set .Llabel124, .
me point 75bb8cbcadf0 details:
    fr[Codegen] ame count: 1
 movq       %rdx, 0x10(%rbx)
   taken a[Codegen] movabsq    $0x75bb8e732bb8, %r11
t bl[Codegen] .set .Llabel138, .
ock [Codegen] movq       %rbx, 0x0(%r11)
1 entry
[Codegen]     pc.set .Llabel141, .
: [Codegen] .set .Lfrom111, .Llabel141
75bb8e70a7dd (scrip[Codegen] orq        $0x0, %rbx
t: 1970c7c73060, of[Codegen] .set .Llabel145, .
fset: 12)
    s[Codegen] lot0: Constant#movq       %rbx, -0x8(%rax)
2
    slot1: Constant#2[Codegen] .set .Llabel149, .

 [Codegen]    slot2: Parameter#0
    slot3: Parameter#1
    slomovq       %rcx, 0x0(%rax)
[Codegen] movabsq    $0x5c7edaa16540, %r11
t4: [Codegen] Constant#movq       %r11, 0x8(%rax)
5
    slot[Codegen] 5: Constant#movabsq    $0x5c7edaa16510, %r11
2
    slot6: Constant[Codegen] movq       %r11, 0x10(%rax)
#2
[IonSnapshots] [Codegen] jmp        .Lfrom185
Genera[Codegen] ting LIR recover info 75bb8cbce880 from MIR (75bb8cbcadf0).set .Llabel185, .
[Codegen] .set .Lfrom87, .Llabel185

[IonSnapshots[Codegen] ] Generating.set .Lfrom60, .Llabel185
[Codegen] .set .Lfrom46, .Llabel185
 LIR sna[Codegen] movq       %rbp, %r11
psho[Codegen] subq       %rsp, %r11
t [Codegen] subq       $8, %r11
75bb8cbce8d8 from recov[Codegen] .set .Llabel195, .
er[Codegen (75bb8cbce880)
[IonSnapshots] movl       %r11d, -0xc(%rbp)
] [Codegen] push       0x0(%rsp)
Assigning s[Codegen] movq       $1, 0x8(%rsp)
naps[Codegenhot 75bb8cbce8d8 ] to inspush       %rbp
truction 75bb8cbce950 [Codegen] (omovq       %rsp, %rbp
sipo[Codegenint)
] push       %rdi
[IonSnapshots] [Codegen] push       %rbx
Generating[Codegen LIR s] push       $0x9
naps[Codegen] .set .Llabel219, .
hot [Codegen] movq       0x28(%rdi), %rcx
[Codegen] 75bb8cbcea68 from recover (75bb8cbce880)
[IonSnapshots]push       %rcx
 Assigni[Codegen] push       $0x2
[Codegenng snapsh] ot 75bb8cbcea68call       .Lfrom231
 to instruction 75bb8cbcea00 (bai[Codegenl)
] .set .Llabel231, .
[Codegen] movq       -0x8(%rbp), %rdi

[RegAlloc][Codegen Beginning register allocation

[] RegAlloc] LIR instmovq       %rbp, %rsp
ructions[Codegen]  (Pre-allocation LIR)
[pop        %rbp
RegAlloc]   Block[Codegen] pop        0x0(%rsp)
[Codegen] .set .Llabel242, .
 0 [successor 1][Codegen] 
[RegAlloc]     2-.set .Lfrom185, .Llabel242
[Codegen] movq       %rax, %rcx
3 Parameter[Codegen] movabsq    $0xfffe000000000000, %r11
 [def v1<x>:arg:0][Codegen] 
[RegAlloc]     orq        %r11, %rcx
4-5 Parameter [def v2<x>:arg:8]
[RegAlloc[Codegen] ] emitReturnFromIC
    6[Codegen] ret
-7 CheckOverRecursed
[RegAlloc]     [Codegen] push       %r10
8-9 [Codegen] push       %r9
OsiPoint [use [Codegen] push       %r8
const][Codegen] push       %rdi
 [us[Codegen] push       %rsi
e const][Codegen] push       %rdx
 [use [Codegen] push       %rcx
v1:KA][Codegen] push       %rax
 [use v2:KA][Codegen] subq       $240, %rsp
 [use const][Codegen [us] .set .Llabel277, .
e const] [use const][Codegen] vmovdqu    %xmm14, 0xe0(%rsp)

[[CodegenRegAlloc]     ] 10-11 .set .Llabel286, .
[CodegenGoto
] vmovdqu    %xmm13, 0xd0(%rsp)
[RegAlloc[Codegen] ]   .set .Llabel295, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel304, .
Block [Codegen] 1
[RegAllocvmovdqu    %xmm11, 0xb0(%rsp)
]     12-13 InterruptCheck
[Codegen] .set .Llabel313, .
[RegAlloc]     14-15 OsiPoint [[Codegen] use const] [use const]vmovdqu    %xmm10, 0xa0(%rsp)
 [us[Codegen] .set .Llabel322, .
e v1:KA][Codegen]  [usvmovdqu    %xmm9, 0x90(%rsp)
[Codegen] e v2:KA].set .Llabel331, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp) [use 0]
[Codegen] .set .Llabel340, .
 [use const][Codegen] vmovdqu    %xmm7, 0x70(%rsp)
 [use const]
[RegAlloc]     16-17 [Codegen] .set .Llabel346, .
Bail [Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[use const] [use const][Codegen] .set .Llabel352, .
 [use v1:KA] [use v2:KA][Codegen] vmovdqu    %xmm5, 0x50(%rsp) [use 
[Codegen0]] .set .Llabel358, .
 [us[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
e const][Codegen] .set .Llabel364, .
 [use const]
[RegAlloc]     [Codegen] vmovdqu    %xmm3, 0x30(%rsp)
18-19 [Codegen] .set .Llabel370, .
Unreachable
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)

[Codegen] .set .Llabel376, .
[RegAlloc[Codegen] ] Beginning liveness analysis
vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] [RegAlloc] .set .Llabel382, .
Completed liveness analysis
[Codegen] 
[RegAlloc] Lvmovdqu    %xmm0, 0x0(%rsp)
ive ranges by vi[Codegen] movq       %rsp, %rax
rtua[Codegen] andq       $0xfffffffffffffff0, %rsp
l register ([Codegen] push       %rax
after liveness analysis):
[RegAlloc[Codegen]   ] movabsq    $0x5c7edabc2c06, %rax
[Codegen] subq       $8, %rsp
v1 3-17 { 3_def:F:arg:0 9_v1:KA 15_v1:KA 17_v1:KA }
[Codegen] [RegAlloc]   movq       %rax, %rdi
[Codegenv2 5-17 { 5_def:F:arg:8 9_v2:KA 15_v2:KA 17_v2:KA }
] testb      $0xf, %spl
[Codegen] 
[RegAlloc] Beginning grouping and queueing registers
[RegAllocje         .Lfrom422
] Completed grouping and queueing registers
[Codegen] 
[RegAlloc] L.set .Llabel422, .
[Codegen] ive ranges by bundleint3
 (after grouping/queueing regs):
[Codegen] .set .Llabel423, .
[RegAlloc]   LB0(parent=none v1 3-17 { 3_def:F:arg:0 9_v1:KA 15_v1:KA 17_v1:KA })
[Codegen] .set .Lfrom422, .Llabel423[RegAlloc]   LB1(parent=none v2 5-17 { 5_def:F:arg:8 9_v2:KA 15_v2:KA 17_v2:KA })

[Codegen
[RegAlloc] Beginning main allocation loop

] call       .Lfrom428
[Codegen[RegAlloc] ] Allocating LB0(parent=none v1 3-17 { 3_def:F:arg:0 9_v1:KA 15_v1:KA 17_v1:KA })addq       $8, %rsp
 [priority 15] [weight 133]
[RegAlloc[Codegen]   Requirem] pop        %rsp
ent [Codegen] arg:0, fixed.set .Llabel433, .
 by [Codegen] vmovdqu    0xe0(%rsp), %xmm14
defini[Codegen] tion.set .Llabel442, .
[Codegen] 
[RegAlloc]   stack allocation requirement
vmovdqu    0xd0(%rsp), %xmm13
[[RegAlloc] Allocating LB1(parent=none v2 5-17 { 5_def:F:arg:8 9_v2:KA 15_v2:KA 17_v2:KA }) [priority 13] [weight 153]
[RegAlloc]   Requirement arg:8,Codegen] .set .Llabel451, .
[Codegen]  fixed by devmovdqu    0xc0(%rsp), %xmm12
finiti[Codegen] on
[RegAlloc]   stack allocation requirement.set .Llabel460, .


[Codegen] [RegAllocvmovdqu    0xb0(%rsp), %xmm11
] [Codegen] Main allocation loop complete; beginning spill-bundle allocation loop


.set .Llabel469, .
[RegAlloc] [Codegen] vmovdqu    0xa0(%rsp), %xmm10
Spill-bundle allocation loop complete

[RegAlloc] Allocations:

[RegAlloc] L[Codegenive ranges by bun] .set .Llabel478, .
dle (in dumpAllocations()):
[Codegen] vmovdqu    0x90(%rsp), %xmm9[RegAlloc] 
[Codegen] .set .Llabel487, .
[  LB0(parent=none v1 3-17 arg:0 { 3_def:F:arg:0 9_v1:KA 15_v1:KA 17_v1:KA })
Codegen] vmovdqu    0x80(%rsp), %xmm8
[RegAlloc]   LB1(parent=none v2 5-17 arg:8 { 5_def:F:arg:8 9_v2:KA 15_v2:KA 17_v2:KA })
[Codegen] .set .Llabel496, .

[RegAlloc] Allocations by physical register:

[Codegen] vmovdqu    0x70(%rsp), %xmm7
[[RegAlloc] Codegen] .set .Llabel502, .ResolveControlFlow: begin
[RegAlloc] 
[Codegen] vmovdqu    0x60(%rsp), %xmm6
  ResolveControlFlow: adding MoveGroups within blocks
[Codegen] .set .Llabel508, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] [RegAlloc].set .Llabel514, .
   ResolveControlFlow: adding MoveGroups for phi nodes
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[RegAlloc] [Codegen] .set .Llabel520, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen]   ResolveControlFlow: adding MoveGroups to fix conflicted edges
[RegAlloc] ResolveControlFlow: end
.set .Llabel526, .
[RegAlloc] [Codegen] Installing Allocations
vmovdqu    0x20(%rsp), %xmm2
[RegAlloc] Populating Safepoints
[Codegen
[RegAlloc] L] IR i.set .Llabel532, .
nstructions (Post-allocation LIR)
[Codegen] [RegAlloc]   Blocvmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel538, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
k 0 [successor 1]
[RegAlloc]     [Codegen] pop        %rax
2-3 [Codegen] Parameter [def v1<x>:arg:0]
pop        %rcx
[Codegen] pop        %rdx
[RegAlloc] [Codegen]     4pop        %rsi
-5 Parameter [de[Codegen] f v2<x>:arg:8]
pop        %rdi
[RegAlloc] [Codegen    6] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] emitFailurePath
[Codegen-7] .set .Llabel562, . CheckOverRecursed

[Codegen] .set .Lfrom18, .Llabel562
[RegAlloc[Codegen]     8-9 OsiPoint] .set .Llabel562, .
 [use const][Codegen] movq       0x10(%rdi), %rdi
[Codegen] jmp        *0x0(%rdi)
 [use [Codegen] # BEGIN creators: BaselineCacheIRCompiler::compile/Assembler::finish
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[const] [use arg:0]Codegen] .quad      0 [use arg:8]
[Codegen]  [us# END   creators: BaselineCacheIRCompiler::compilee const] [use const] [/Assembler::finish
use const]
[[Codegen] # END   creators: BaselineCacheIRCompiler::compileRegAlloc]     
10[BaselineIC-11]  Goto  Attached NewObject
[ CacheIR stubRegAlloc]   
B[BaselineICFallback] lockFallback 1
[RegAlloc]     12-13  hit for (../../../../Benchmarkers/prop_access.js:2:33) (pc=57,lInterruptCheck
[RegAlloc] ine=    14-15 OsiPoint6,uses=3 [use const] [use const] [,stubs=0)us: SetElem(InitElem)
e arg:0][Codegen] # BEGIN creators: BaselineCacheIRCompiler::compile [us
[Codegene arg:8] [us] addl       $1, 0x8(%rdi)
[Codegen] emitGuardToObject
[Codegen] movq       %rcx, %r11
[Codegen] shrq       $47, %r11
e 0] [[Codegen] cmpl       $0x1fffc, %r11d
use [Codegen] jne        .Lfrom24
const] [use const][Codegen] emitGuardToInt32
[Codegen] movq       %rbx, %r11

[RegAlloc]     16-[Codegen] 17 Bail [use const]shrq       $47, %r11
[Codegen] cmpl       $0x1fff1, %r11d
[Codegen] jne        .Lfrom44
[Codegen] emitGuardShape
 [use const][Codegen] movabsq    $0xfffe000000000000, %r11
 [use arg:0][Codegen]  [usxorq       %r11, %rcx
[Codegen] .set .Llabel57, .
e [Codegen] movq       0x20(%rdi), %rax
arg:8] [use 0][Codegen] xorl       %edx, %edx
 [use const][Codegen] cmpq       %rax, 0x0(%rcx)
[Codegen] jne        .Lfrom72
 [use const][Codegen] cmovne     %rdx, %rcx

[RegAlloc][Codegen] emitStoreDenseElementHole
[Codegen]      18-19 Unreachable

[RegAllocmovl       %ebx, %ebx
][Codegen]  Finished register allocationmovq       0x8(%rsp), %rax


[RegAlloc] Register Allocation Integrity State:[Codegen] .set .Llabel83, .
[Codegen] movq       0x10(%rcx), %rdx
[Codegen] testl      $0x10, -0x10(%rdx)

[RegAlloc]   Block 0[Codegen] je         .Lfrom100
 [successor 1[Codegen]
[RegAlloc]     2-3 Parameter] push       %r10
 [def v1<x>:arg:0]
[[Codegen] RegAlloc]     push       %r9
4-5 [CodegenParameter ] [defpush       %r8
 v2<x>:arg:8]
[Codegen[RegAlloc] ] push       %rdi
    6-7 CheckOverRecursed[Codegen] push       %rsi

[[Codegen] push       %rdx
RegAlloc]     [Codegen] push       %rcx
8-[Codegen] push       %rax
9 [Codegen] subq       $240, %rsp
OsiPoint [use const] [[Codegen] .set .Llabel118, .use 
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel127, .
const][Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
 [us[Codegen] .set .Llabel136, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)e v1:KA arg:0
[Codegen] .set .Llabel145, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
] [use [Codegen] .set .Llabel154, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
v2:KA [Codegen] arg:8].set .Llabel163, .
 [use [Codegen] vmovdqu    %xmm9, 0x90(%rsp)
const][Codegen] .set .Llabel172, .
 [use const] [Codegen] [uvmovdqu    %xmm8, 0x80(%rsp)
se const[Codegen] .set .Llabel181, .
]
[RegAlloc[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
]     10[Codegen] .set .Llabel187, .
-11 Goto
[RegAlloc]   Block 1[Codegen] vmovdqu    %xmm6, 0x60(%rsp)

[RegAlloc]     12-13 [Codegen] .set .Llabel193, .
[Codegen] InterruptCheck
[RegAlloc]     vmovdqu    %xmm5, 0x50(%rsp)
14-15 [Codegen] .set .Llabel199, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
OsiPoint [us[Codegen] .set .Llabel205, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)e 
[const]Codegen] .set .Llabel211, . [use const]
[Codegen [use v1:KA ] arg:0] [use v2:KA arg:8vmovdqu    %xmm2, 0x20(%rsp)
] [Codegen] [use 0.set .Llabel217, .
] [use const] [use[Codegen]  const]
vmovdqu    %xmm1, 0x10(%rsp)
[RegAlloc]     16-17 Bail [use const][Codegen]  [use const] [use .set .Llabel223, .
v1:KA arg:0[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
] [Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[use v2:KA[Codegen] push       %rax
 arg:8] [use 0][Codegen]  [usemovabsq    $0x5c7edac3edd9, %rax
 const[Codegen] subq       $8, %rsp
] [use const[Codegen] ]
[RegAlloc] movq       %rax, %rdi
    18-19[Codegen] testb      $0xf, %spl
 Unreachable

[Codegen] je         .Lfrom263
[Codegen] .set .Llabel263, .[Codegen] 
[# BEGIN creators: CodeGenerator::generate
Codegen] int3[Codegen
[Codegen] .set .Llabel264, .] 
[Codegen] .set .Lfrom263, .Llabel264
[Codegen] call       .Lfrom269
# Em[Codegen] addq       $8, %rsp
itting code for scr[Codegen] pop        %rsp
ipt ../../../../Benchmarkers/prop_access.js:2:[Codegen] .set .Llabel274, .
[Codegen] 33
vmovdqu    0xe0(%rsp), %xmm14
[[Codegen] Codegen] .set .Llabel283, .push       %rbp

[[Codegen] Codegen] vmovdqu    0xd0(%rsp), %xmm13movq       %rsp, %rbp

[[Codegen] testb      $0xf, %spl
Codegen] .set .Llabel292, .
[Codegen[Codegen] vmovdqu    0xc0(%rsp), %xmm12
] je         .Lfrom14
[Codegen] .set .Llabel301, .
[Codegen] .set .Llabel14, .
[Codegen] int3
[[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] Codegen] .set .Llabel15, ..set .Llabel310, .

[Codegen[Codegen] vmovdqu    0xa0(%rsp), %xmm10
] .set .Lfrom14, .Llabel15
[Codegen] 
[Codegen] # BEGIN creators: CodeGenerator::generate.set .Llabel319, .
/CodeGenerator::generateBody
[Codegen] ==== BEGIN CodeGenerator::generateBody ====
[Codegen[Codegen] vmovdqu    0x90(%rsp), %xmm9
] --------------------------------
[Codegen] # block0 ../../../../Benchmarkers/prop_access.js:3:10[Codegen] :
.set .Llabel328, .
[Codegen] .set .Llabel15, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] [Codegen] .set .Llabel337, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel343, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
    [Codegen] .set .Llabel349, .
                            # LIR=Parameter
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel355, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel361, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[[Codegen]                                 # LIR=Parameter
Codegen] .set .Llabel367, .
[[Codegen]        Codegen] vmovdqu    0x20(%rsp), %xmm2        
[            Codegen] .set .Llabel373, .     #
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel379, .
 LIR[Codegen] vmovdqu    0x0(%rsp), %xmm0
=CheckOverRecursed[Codegen] 
[Codegen] addq       $240, %rsp
    [Codegen] pop        %rax
       [Codegen] pop        %rcx
    [Codegen]                  # LIR=OsiPointpop        %rdx

[IonSnapshots] Encoding LR[Codegen] ecoverInfo 75bb8cbce520 (pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel403, .
[Codegen] .set .Lfrom100, .Llabel403
[Codegen] frametestl      $0x2, -0x10(%rdx)
[Codegen] je         .Lfrom416
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Count 1, instructions 1)
[IonSnapshots] starting recover with 1 instruction(sCodegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel434, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel443, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel452, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel461, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel470, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel479, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] )
[IonSnapshots] Starting frame; impl.set .Llabel488, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
icit[Codegen] .set .Llabel497, .
 2[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
, form[Codegen] .set .Llabel503, .
als 2, f[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
ixed 3, exprs 0
[[CodegenIonSnapshots] Writing pc offset 0] .set .Llabel509, .
, mode ResumeAt, nslots 7[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen
[IonSnapshots]] .set .Llabel515, .
 Encoding LSnapshot [Codegen] vmovdqu    %xmm4, 0x40(%rsp)
75bb8cbce578 (LRecover 75bb8cbce520)[Codegen] .set .Llabel521, .

[[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
IonSnapshots] starting sna[Codegenpshot with] .set .Llabel527, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
 recov[Codegen] .set .Llabel533, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel539, .
[Codegen] er offset 0,vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen]  bandq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edac3edfc, %rax
ailout kind [Codegen] 11
subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[IonSnapshots[Codegen] testb      $0xf, %spl
] [Codegen] je         .Lfrom579
    sl[Codegen] .set .Llabel579, .
ot 0 (0): [Codegen] int3
[Codegenundefined
[IonSnapshots] .set .Llabel580, .
[Codegen] .set .Lfrom579, .Llabel580
[Codegen] ] call       .Lfrom585
    [Codegen] addq       $8, %rsp
slot 1 (0)[Codegen] pop        %rsp
: undefined
[Codegen] .set .Llabel590, .
[IonSnapshots] [Codegen] vmovdqu    0xe0(%rsp), %xmm14
    sl[Codegen] ot 2.set .Llabel599, .
 (2)[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel608, .: value (stack 
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[-32Codegen] .set .Llabel617, .)

[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel626, .
[IonSnapshots[Codegen] vmovdqu    0xa0(%rsp), %xmm10
] [Codegen] .set .Llabel635, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel644, .
[Codegen]     slot 3 (4):vmovdqu    0x80(%rsp), %xmm8
[Codegen value (stack] .set .Llabel653, .
 -40)[Codegen] 
[IonSnapshots]vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel659, .
[Codegen]     slot 4 (0):  vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel665, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
undefined
[Codegen[IonSnapshots]     slot 5 (] .set .Llabel671, .
0): undefined
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[IonSnapshots] [Codegen] .set .Llabel677, .
    slot 6[Codegen] vmovdqu    0x30(%rsp), %xmm3
 (0): undefined[Codegen] 
[IonSnapshots] .set .Llabel683, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] ending.set .Llabel689, .
[Codegen]  snapshot vmovdqu    0x10(%rsp), %xmm1
[Codegen] total .set .Llabel695, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen]size:  pop        %rax
[Codegen] pop        %rcx
[14 bytes (start 0Codegen] pop        %rdx)

[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] .set .Llabel15, .
[Codegen[Codegen] .set .Llabel15, .
] .set .Llabel719, .
[Codegen] .set .Lfrom416, .Llabel719
[Codegen] .set .Llabel15, .
[Codegen] xorl       %r11d, %r11d
[Codegen] cmpl       -0xc(%rdx), %ebx
[Codegen] jae        .Lfrom731
[Codegen] cmovae     %r11d, %ebx
[Codegen]                                [Codegen] jmp        .Lfrom740
[Codegen] .set .Llabel740, . # LIR=Goto
[Codegen] .set .Lfrom731, .Llabel740
[Codegen
[Codegen] xorl       %r11d, %r11d
[] --------------------------------
[Codegen] # blCodegen] cmpl       -0x8(%rdx), %ebx
[Codegenock1 ../../../../Benchmarkers/prop_access.js:3:21:
] jae        .Lfrom752
[Codegen] [Codegen] .set .Llabel15, .
cmovae     %r11d, %ebx
[Codegen] [Codegen]                 jmp        .Lfrom761
[Codegen] .set .Llabel761, .
[Codegen] .set .Lfrom752, .Llabel761
                # LIR=InterruptCheck
[Codegen[Codegen] cmpl       %ebx, -0x8(%rdx)
[Codegen] movabsq    $0x75bb8e73adf0, %r11
] [Codegen] cmpl       $0x0, 0x0(%r11)
jne        .Lfrom770
[Codegen] [Codegen] jne        .Lfrom35
push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] [Codegen] push       %rdi
.set .Llabel35, .
[Codegen] [Codegen] push       %rsi
[Codegen]       push       %rcx
[Codegen] push       %rax
[Codegen]     movq       %rsp, %rdx
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rdx
[Codegen] movabsq    $0x75bb8e73a200, %rdx
          [Codegen      ] subq       $8, %rsp
      # [Codegen] movq       %rcx, %rsi
[Codegen] movq       %rdx, %rdi
LIR=OsiPoint
[Codegen] testb      $0xf, %spl
[IonSnapshots] [Codegen] je         .Lfrom818
Encoding L[Codegen] RecoverInfo 75bb8cbce880 (frame.set .Llabel818, .
[Codegen] int3
Count [Codegen] .set .Llabel819, .
[Codegen] 1, instr.set .Lfrom818, .Llabel819
uctions 1)
[IonSnapshots] starting recover with[Codegen] push       %rax
 1 instructi[Codegen] on(s)
[IonSnapshots] Starting fmovabsq    $0x75bb8e73a200, %rax
[Codegen] .set .Llabel830, .
[Codegenrame; im] movl       $0x1, 0x180(%rax)
[Codegen] pop        %rax
plicit[Codegen] call       .Lfrom846
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] push       %rax
 2, [Codegen] movabsq    $0x75bb8e73a200, %rax
formals 2,[Codegen]  fixed 3, exprs 0
cmpl       $0x0, 0x180(%rax)
[Codegen] [IonSnapshots] Wrje         .Lfrom875
[Codegen] push       %r10
[Codegen] push       %r9
iting pc offset 12, m[Codegenode ] ResumeAt, nslpush       %r8
ots [Codegen] push       %rdi
7
[IonSnapshots[Codegen] ] Encoding LSnapshotpush       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen 75bb8cbce8d8 (LRecover 75bb8cbce880)
[IonSnapshots] starting snapshot with recover offset 4, b] .set .Llabel893, .
[Codegenailout k] vmovdqu    %xmm14, 0xe0(%rsp)
ind 11
[Codegen] .set .Llabel902, .
[IonSnapshots]     slot 0 (0): undefined
[Codegen] [IonSnapshots]     slot 1 (0): undefined
vmovdqu    %xmm13, 0xd0(%rsp)
[IonSnapshots[Codegen] ] .set .Llabel911, .
[Codegen]     slotvmovdqu    %xmm12, 0xc0(%rsp)
[Codegen]  2 (2): value (stack .set .Llabel920, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
-32)
[IonSnapshots]     [Codegen] .set .Llabel929, .
slot[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel938, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp) 3 (4): value (
[Codegen] .set .Llabel947, .stack -40
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen)
] .set .Llabel956, .
[[IonSnapshots] Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen]    slot 4 (6) .set .Llabel962, .
[: constant (index 0)
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel968, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel974, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[IonSnapshots]     slot 5 (0): undefined
Codegen] .set .Llabel980, .
[Codegen[IonSnapshots]] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel986, .
[Codegen]     vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel992, .
[Codegen]  slot 6 (0): undefined
[vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel998, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[CodegenIonSnapshots] ending snapshot total] movq       %rsp, %rax
 size: 15 byt[Codegen] es (start 14)
andq       $0xfffffffffffffff0, %rsp
[Codegen] [Codegen] push       %rax
.set .Llabel35, .
[Codegen] movabsq    $0x5c7edaca656f, %rax
[Codegen] .set .Llabel35, .
[Codegen] [Codegensubq       $8, %rsp
] [Codegen] movq       %rax, %rdi
.set .Llabel35, .
[Codegen[Codegen] testb      $0xf, %spl
] [Codegen] je         .Lfrom1038
[Codegen] .set .Llabel1038, .
[Codegen] int3
      [Codegen] .set .Llabel1039, .
[Codegen]     .set .Lfrom1038, .Llabel1039
[Codegen] call       .Lfrom1044
      [Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
                # LIR=Bail
[Codegen[Codegen] .set .Llabel1049, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
] [Codegen] .set .Llabel1058, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel1067, .
jmp        .Lfrom40
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen[IonSnapshots] .set .Llabel1076, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
] [Codegen] .set .Llabel1085, .
En[Codegen] vmovdqu    0xa0(%rsp), %xmm10
codi[Codegen] .set .Llabel1094, .
[Codegen] ng LSnapshot 75bb8cbcea68 (LRecovervmovdqu    0x90(%rsp), %xmm9
[Codegen]  75bb8cbce880)
.set .Llabel1103, .
[IonSnapshots] star[Codegenting snapshot with recov] er offvmovdqu    0x80(%rsp), %xmm8
set 4, b[Codegen] .set .Llabel1112, .
ailout kind 14
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[IonSnapshots[Codegen] .set .Llabel1118, .
]     [Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] slot 0.set .Llabel1124, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] (0):  .set .Llabel1130, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegenundefined
] .set .Llabel1136, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel1142, .
[IonSnapshots]     sl[Codegenot 1] vmovdqu    0x20(%rsp), %xmm2
 ([Codegen] .set .Llabel1148, .
0): [Codegen] undefined
vmovdqu    0x10(%rsp), %xmm1
[IonSnapshots] [Codegen] .set .Llabel1154, .
    slot [Codegen] vmovdqu    0x0(%rsp), %xmm0
2 (2): value[Codegen] addq       $240, %rsp
 (stack [Codegen] pop        %rax
-32[Codegen] pop        %rcx
)
[IonSnapshots] [Codegen] pop        %rdx
    slot 3 ([Codegen] pop        %rsi
[Codegen] 4): value (stack -40)
[IonSnapshots]     slot 4 pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
(6): constant (index 0)
[IonSnapshots] [Codegen] int3
[Codegen] .set .Llabel1178, .
[Codegen] .set .Lfrom875, .Llabel1178
[Codegen]     slot 5 (0):pop        %rax
[Codegen]  undefined
[IonSnapshots]     slot 6 (0movq       %rax, %rdx
[Codegen] pop        %rax
[Codegen] ): undefined
[IonSnapshots] endpop        %rcx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegening snapshot total size: 16 bytes] pop        %r9
[Codegen] pop        %r10
 (start 29)
[Codegen]                                 # LIR=Unreachable
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] testb      $0xff, %dl
[Codegen[Codegen] je         .Lfrom1201
[Codegen] .set .Llabel1201, .
[Codegen] ] push       %rdi
movq       0x10(%rcx), %rdx
[Codegen] .set .Llabel1205, .
[Codegen] .set .Lfrom761, .Llabel1205
[Codegen] [Codegen] push       %rcx
[Codegen] .set .Llabel1206, .
[Codegen] movl       -0xc(%rdx), %ecx
[Codegen] cmpl       %ebx, %ecx
push       %rsi
[Codegen[Codegen] ] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rspje         .Lfrom1217
[Codegen] orl        $0x80, -0x10(%rdx)
[Codegen
[Codegen] .set .Llabel58, .] .set .Llabel1224, .

[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel67, .
[Codegen[Codegen] movabsq    $0xfffa800000000000, %r11
] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen[Codegen] ] movq       %r11, 0x0(%rdx,%rcx,8)
.set .Llabel76, .
[Codegen] addl       $1, %ecx
[Codegen] cmpl       %ebx, %ecx
[Codegen[Codegen] jne        .Llabel1224
[Codegen] ] vmovdqu    %xmm12, 0xc0(%rsp)
.set .Llabel1245, .
[Codegen] .set .Lfrom1217, .Llabel1245
[Codegen] addl       $1, %ecx
[Codegen] .set .Llabel85, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel94, .
[Codegen] .set .Llabel1248, .
[Codegen] [Codegen] movl       %ecx, -0xc(%rdx)
[Codegen] cmpl       %ecx, -0x4(%rdx)
[Codegen] ja         .Lfrom1260
vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel1260, .
[Codegen] [Codegen] movl       %ecx, -0x4(%rdx)
[Codegen] .set .Llabel1263, .
[Codegen] .set .Lfrom1260, .Llabel1263
[Codegen] .set .Llabel103, .
pop        %rcx
[Codegen[Codegen] jmp        .Lfrom1269
[Codegen] .set .Llabel1269, .
] [Codegen] .set .Lfrom740, .Llabel1269
vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] [Codegen] movabsq    $0x75bb8e77f010, %r11
.set .Llabel112, .
[Codegen] testl      $0x1, 0x0(%r11)
[Codegen[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
] je         .Lfrom1292
[Codegen] .set .Llabel121, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] [Codegen] movq       0x0(%rdx,%rbx,8), %r11
.set .Llabel127, .
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff6, %r11d
[Codegen] jb         .Lfrom1313
[Codegen] push       %rdx
[Codegen] leaq       0x0(%rdx,%rbx,8), %rdx
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] call       .Lfrom1323
[Codegen] pop        %rdx
[Codegen] [Codegen] .set .Llabel133, .
[Codegen.set .Llabel1324, .
[Codegen] .set .Lfrom1313, .Llabel1324
] [Codegen] .set .Llabel1324, .
vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel139, .
[Codegen] .set .Lfrom1292, .Llabel1324
[Codegen[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
] .set .Llabel1324, .
[Codegen] [Codegen] .set .Lfrom1269, .Llabel1324
[Codegen.set .Llabel145, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel151, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] ] .set .Llabel157, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel163, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
movq       %rax, 0x0(%rdx,%rbx,8)
[Codegen] movq       %rsp, %rax
[Codegen] [Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
emitPostBarrierShared
[Codegen] movq       %rax, %r11
[Codegen] movabsq    $0x5c7edac37788, %rax
[Codegen] shrq       $47, %r11
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] cmpl       $0x1fff6, %r11d
[Codegen] testb      $0xf, %spl
[Codegen] jb         .Lfrom1348
[Codegen] je         .Lfrom203
[Codegen] .set .Llabel203, .
[Codegen] int3
[Codegen] .set .Llabel204, .
[Codegen] movabsq    $0x7ffffff00000, %rdx
[Codegen] andq       %rax, %rdx[Codegen] .set .Lfrom203, .Llabel204

[[Codegen] call       .Lfrom209
Codegen] cmpq       $0x0, 0x0(%rdx)
[Codegen] je         .Lfrom1371
[Codegen] .set .Llabel1371, .
[Codegen] movq       %rcx, %r11
[Codegen] andq       $0xfffffffffff00000, %r11
[Codegen] cmpq       $0x0, 0x0(%r11)
[Codegen] jne        .Lfrom1391
[Codegen] movabsq    $0x75bb8e7336e0, %r11
[Codegen] cmpq       %rcx, 0x0(%r11)
[[Codegen] addq       $8, %rsp
Codegen] je         .Lfrom1410
[Codegen] push       %r10
[Codegen] push       %r9[Codegen] pop        %rsp

[Codegen][Codegen push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
] .set .Llabel214, .
[Codegen[Codegen] ] push       %rcx
[Codegen] push       %rax
vmovdqu    0xe0(%rsp), %xmm14
[Codegen] movq       %rsp, %rdx
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rdx
[Codegen] movabsq    $0x75bb8e730000, %rdx
[Codegen] .set .Llabel223, .
[Codegen] subq       $8, %rsp
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] [Codegen] movq       %rdx, %rdi
[Codegen] movq       %rbx, %rdx
[Codegen] movq       %rcx, %rsi
.set .Llabel232, .
[Codegen] testb      $0xf, %spl
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen[Codegen] je         .Lfrom1462
[Codegen] .set .Llabel1462, .
[Codegen] int3
[Codegen] .set .Llabel1463, .
] [Codegen] .set .Lfrom1462, .Llabel1463
[Codegen].set .Llabel241, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
 push       %rax
[Codegen] movabsq    $0x75bb8e73a200, %rax
[Codegen] .set .Llabel250, .
[Codegen] .set .Llabel1474, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] movl       $0x1, 0x180(%rax)
[Codegen] .set .Llabel259, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] pop        %rax
[Codegen] [Codegen] .set .Llabel268, .
call       .Lfrom1490
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] push       %rax
[Codegen] movabsq    $0x75bb8e73a200, %rax
[Codegen] [Codegen] .set .Llabel277, .
cmpl       $0x0, 0x180(%rax)
[Codegen] je         .Lfrom1519
[Codegen] [Codegen] push       %r10
[Codegen] push       %r9
[Codegen] vmovdqu    0x70(%rsp), %xmm7
push       %r8
[Codegen] [Codegen] .set .Llabel283, .
[Codegen] push       %rdi
[Codegen]vmovdqu    0x60(%rsp), %xmm6
 push       %rsi
[[Codegen] .set .Llabel289, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel295, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[CodegenCodegen] push       %rdx
] .set .Llabel301, .
[Codegen[Codegen] ] push       %rcx
vmovdqu    0x30(%rsp), %xmm3
[Codegen] push       %rax
[Codegen] [Codegensubq       $240, %rsp
[Codegen] ] .set .Llabel307, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel313, .
.set .Llabel1537, .
[Codegen] [Codegen] vmovdqu    0x10(%rsp), %xmm1
vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] [Codegen] .set .Llabel319, .
.set .Llabel1546, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] pop        %rax
[Codegen] .set .Llabel1555, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel1564, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel1573, .
[Codegen] [Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel1582, .
pop        %rcx
[Codegen[Codegen] ] pop        %rdx
vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] [Codegen] pop        %rsi
[Codegen] .set .Llabel1591, .
pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] pop        %r10
[Codegen] .set .Llabel1600, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel1606, .
[Codegen] [Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel1612, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel1618, .
[Codegen] int3
vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] [Codegen] ==== END CodeGenerator::generateBody ====

[Codegen] # END   creators: CodeGenerator::generate/CodeGenerator::generateBody
[.set .Llabel1624, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel1630, .
[Codegen] Codegen] .set .Llabel343, .vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] 
[Codegen] movq       %rbp, %rsp
.set .Llabel1636, .
[Codegen] [Codegen] pop        %rbp
[Codegen] ret
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel1642, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] nop
[Codegen]movabsq    $0x5c7edaca656f, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen nop] testb      $0xf, %spl
[Codegen] je         .Lfrom1682
[Codegen] .set .Llabel1682, .
[Codegen
[] int3
[Codegen] .set .Llabel1683, .
[Codegen] .set .Lfrom1682, .Llabel1683
[Codegen] call       .Lfrom1688
[Codegen] addq       $8, %rsp
Codegen] nop[Codegen] pop        %rsp

[Codegen[Codegen] .set .Llabel1693, .
] nop
[Codegen] nop
[Codegen[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel1702, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
] nop
[Codegen] nop
[Codegen] nop
[Codegen] [Codegen] .set .Llabel1711, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel356, .
.set .Llabel1720, .
[Codegen] [Codegen]vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel1729, .
[Codegen movabsq    $0xffffffffffffffff, %r11
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
] push       %r11
[Codegen] jmp        .Lfrom373
[Codegen] # BEGIN creators: CodeGenerator::generate/CodeGeneratorShared::generateOutOfLineCode
[Codegen] .set .Llabel1738, .
[Codegen] [Codegen] vmovdqu    0x90(%rsp), %xmm9
# Emitting out of line code
[Codegen] .set .Llabel1747, .
[Codegen] .set .Llabel373, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] [Codegen.set .Llabel1756, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7] 
[Codegen] .set .Llabel1762, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen].set .Lfrom35, .Llabel373
 .set .Llabel1768, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel1774, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen]                [Codegen] .set .Llabel1780, .
               [Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel1786, .  # LIR=
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[InterruptCheck
Codegen] .set .Llabel1792, .[Codegen] 
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel1798, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %raxpush       $0x0

[Codegen] pop        %rcx[Codegen] .set .Llabel375, .

[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] .set .Llabel375, .
[Codegen] call       .Lfrom380
[Codegen] [Codegen] pop        %r8
.set .Llabel380, .
[Codegen] push       %rax
[Codegen] xorl       %eax, %eax
[Codegen] [Codegen] movabsq    $0x75bb8e727f50, %r11
pop        %r9
[Codegen] .set .Llabel393, .
[Codegen] movl       %eax, 0x0(%r11)
[Codegen] pop        %r10
[Codegen] pop        %rax
[Codegen] int3
[Codegen] .set .Llabel1822, .
[Codegen] .set .Lfrom1519, .Llabel1822
[Codegen] pop        %rax
[Codegen[Codegen] jmp        .Llabel35
] pop        %rax
[Codegen] # Emitting out of line code
[Codegen] [Codegen] .set .Llabel402, .
[Codegen] .set .Lfrom40, .Llabel402
[Codegen] pop        %rcx
push       $0x1d
[Codegen] [Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] jmp        .Lfrom409
pop        %rdi
[Codegen] # END   creators: CodeGenerator::generate[Codegen] pop        %r8
[Codegen] pop        %r9/CodeGeneratorShared::generateOutOfLineCode
[Codegen] 
[Codegen] pop        %r10.set .Llabel409, .
[Codegen] 
[Codegen] .set .Llabel1834, ..set .Lfrom409, .Llabel409

[Codegen] .set .Lfrom1410, .Llabel1834
[Codegen] .set .Lfrom1391, .Llabel1834
[Codegen] .set .Lfrom1371, .Llabel1834
[Codegen] .set .Lfrom1348, .Llabel1834
[Codegen] push       $0x0
[Codegen] emitReturnFromIC
[Codegen] ret
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen][Codegen] jmp        .Lfrom416
 push       %rcx
[Profiling] [Codegen] Native To Bytecode Entries for ../../../../Benchmarkers/prop_access.js:2push       %rax
[Codegen] subq       $240, %rsp
[Codegen]:33
[Safepoints .set .Llabel1853, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] ] .set .Llabel1862, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
Encoding safepoi[Codegen] .set .Llabel1871, .
nt (positi[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] on 0):
[Safepoints] .set .Llabel1880, .
[Codegen    gc value: 0
[Safepoints] vmovdqu    %xmm11, 0xb0(%rsp)
]     gc[Codegen]  value: 8
.set .Llabel1889, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Safepoints]     -- entry ended at 9
[Codegen] .set .Llabel1898, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel1907, .
[Codegen] [Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] # END   creators: CodeGenerator::generate.set .Llabel1916, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)

[Codegen] .set .Llabel1922, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel1928, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel1934, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel1940, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel1946, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel1952, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel1958, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabc2c06, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom1998
[Codegen] .set .Llabel1998, .
[Codegen] int3
[Codegen] .set .Llabel1999, .
[Codegen] .set .Lfrom1998, .Llabel1999
[Codegen] call       .Lfrom2004
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel2009, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel2018, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel2027, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel2036, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel2045, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel2054, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel2063, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel2072, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel2078, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel2084, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel2090, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel2096, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel2102, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel2108, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel2114, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] emitFailurePath
[Codegen] .set .Llabel2138, .
[Codegen] .set .Lfrom44, .Llabel2138
[Codegen] .set .Lfrom24, .Llabel2138
[Codegen] .set .Llabel2138, .
[Codegen] movq       0x10(%rdi), %rdi
[Codegen] jmp        *0x0(%rdi)
[Codegen] emitFailurePath
[Codegen] .set .Llabel2144, .
[Codegen] .set .Lfrom72, .Llabel2144
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] .set .Llabel2157, .
[Codegen] movq       0x10(%rdi), %rdi
[Codegen] jmp        *0x0(%rdi)
[Codegen] emitFailurePath
[Codegen] .set .Llabel2163, .
[Codegen] .set .Lfrom1201, .Llabel2163
[Codegen] .set .Lfrom770, .Llabel2163
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] movabsq    $0xfff8800000000000, %r11
[Codegen] orq        %r11, %rbx
[Codegen] .set .Llabel2189, .
[Codegen] movq       0x10(%rdi), %rdi
[Codegen] jmp        *0x0(%rdi)
[Codegen] # BEGIN creators: BaselineCacheIRCompiler::compile/Assembler::finish
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] # END   creators: BaselineCacheIRCompiler::compile/Assembler::finish
[Codegen] # END   creators: BaselineCacheIRCompiler::compile
[BaselineIC]   Attached SetElem CacheIR stub
[BaselineICFallback] Fallback hit for (../../../../Benchmarkers/prop_access.js:2:33) (pc=64,line=6,uses=3,stubs=0): SetElem(InitElem)
[BaselineIC]   Attached SetElem CacheIR stub
[BaselineICFallback] Fallback hit for (../../../../Benchmarkers/prop_access.js:2:33) (pc=75,line=7,uses=3,stubs=0): GetElem
[Codegen] # BEGIN creators: BaselineCacheIRCompiler::compile
[Codegen] addl       $1, 0x8(%rdi)
[Codegen] emitGuardToObject
[Codegen] movq       %rcx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fffc, %r11d
[Codegen] jne        .Lfrom24
[Codegen] emitGuardToInt32
[Codegen] movq       %rbx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff1, %r11d
[Codegen] jne        .Lfrom44
[Codegen] emitGuardShape
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] xorq       %r11, %rcx
[Codegen] .set .Llabel57, .
[Codegen] movq       0x20(%rdi), %rax
[Codegen] xorl       %edx, %edx
[Codegen] cmpq       %rax, 0x0(%rcx)
[Codegen] jne        .Lfrom72
[Codegen] cmovne     %rdx, %rcx
[Codegen] emitLoadDenseElementResult
[Codegen] movq       %rcx, %rax
[Codegen] movl       %ebx, %ebx
[Codegen] .set .Llabel81, .
[Codegen] movq       0x10(%rax), %rdx
[Codegen] xorl       %r11d, %r11d
[Codegen] cmpl       -0xc(%rdx), %ebx
[Codegen] jae        .Lfrom97
[Codegen] cmovae     %r11d, %ebx
[Codegen] movq       0x0(%rdx,%rbx,8), %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff5, %r11d
[Codegen] je         .Lfrom122
[Codegen] movq       0x0(%rdx,%rbx,8), %rcx
[Codegen] emitReturnFromIC
[Codegen] ret
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel145, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel154, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel163, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel172, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel181, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel190, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel199, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel208, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel214, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel220, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel226, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel232, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel238, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel244, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel250, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabc2c06, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom290
[Codegen] .set .Llabel290, .
[Codegen] int3
[Codegen] .set .Llabel291, .
[Codegen] .set .Lfrom290, .Llabel291
[Codegen] call       .Lfrom296
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel301, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel310, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel319, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel328, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel337, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel346, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel355, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel364, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel370, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel376, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel382, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel388, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel394, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel400, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel406, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] emitFailurePath
[Codegen] .set .Llabel430, .
[Codegen] .set .Lfrom44, .Llabel430
[Codegen] .set .Lfrom24, .Llabel430
[Codegen] .set .Llabel430, .
[Codegen] movq       0x10(%rdi), %rdi
[Codegen] jmp        *0x0(%rdi)
[Codegen] emitFailurePath
[Codegen] .set .Llabel436, .
[Codegen] .set .Lfrom72, .Llabel436
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] .set .Llabel449, .
[Codegen] movq       0x10(%rdi), %rdi
[Codegen] jmp        *0x0(%rdi)
[Codegen] emitFailurePath
[Codegen] .set .Llabel455, .
[Codegen] .set .Lfrom122, .Llabel455
[Codegen] .set .Lfrom97, .Llabel455
[Codegen] movq       %rax, %rcx
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] movabsq    $0xfff8800000000000, %r11
[Codegen] orq        %r11, %rbx
[Codegen] .set .Llabel484, .
[Codegen] movq       0x10(%rdi), %rdi
[Codegen] jmp        *0x0(%rdi)
[Codegen] # BEGIN creators: BaselineCacheIRCompiler::compile/Assembler::finish
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] # END   creators: BaselineCacheIRCompiler::compile/Assembler::finish
[Codegen] # END   creators: BaselineCacheIRCompiler::compile
[BaselineIC]   Attached GetElem CacheIR stub
[BaselineICFallback] Fallback hit for (../../../../Benchmarkers/prop_access.js:2:33) (pc=86,line=3,uses=3,stubs=0): UnaryArith(ToNumeric)
[Codegen] # BEGIN creators: BaselineCacheIRCompiler::compile
[Codegen] addl       $1, 0x8(%rdi)
[Codegen] emitGuardToInt32
[Codegen] movq       %rcx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff1, %r11d
[Codegen] jne        .Lfrom24
[Codegen] emitLoadInt32Result
[Codegen] movq       %rcx, %rax
[Codegen] movl       %eax, %eax
[Codegen] movq       %rax, %rcx
[Codegen] movabsq    $0xfff8800000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] emitReturnFromIC
[Codegen] ret
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel64, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel73, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel82, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel91, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel100, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel109, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel118, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel127, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel133, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel139, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel145, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel151, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel157, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel163, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel169, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabc2c06, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom209
[Codegen] .set .Llabel209, .
[Codegen] int3
[Codegen] .set .Llabel210, .
[Codegen] .set .Lfrom209, .Llabel210
[Codegen] call       .Lfrom215
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel220, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel229, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel238, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel247, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel256, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel265, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel274, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel283, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel289, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel295, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel301, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel307, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel313, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel319, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel325, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] emitFailurePath
[Codegen] .set .Llabel349, .
[Codegen] .set .Lfrom24, .Llabel349
[Codegen] .set .Llabel349, .
[Codegen] movq       0x10(%rdi), %rdi
[Codegen] jmp        *0x0(%rdi)
[Codegen] # BEGIN creators: BaselineCacheIRCompiler::compile/Assembler::finish
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] # END   creators: BaselineCacheIRCompiler::compile/Assembler::finish
[Codegen] # END   creators: BaselineCacheIRCompiler::compile
[BaselineIC]   Attached UnaryArith CacheIR stub
[BaselineICFallback] Fallback hit for (../../../../Benchmarkers/prop_access.js:2:33) (pc=87,line=3,uses=3,stubs=0): UnaryArith(Inc)
[Codegen] # BEGIN creators: BaselineCacheIRCompiler::compile
[Codegen] addl       $1, 0x8(%rdi)
[Codegen] emitGuardToInt32
[Codegen] movq       %rcx, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fff1, %r11d
[Codegen] jne        .Lfrom24
[Codegen] emitInt32IncResult
[Codegen] movq       %rcx, %rax
[Codegen] movl       %eax, %eax
[Codegen] movq       %rax, %rcx
[Codegen] addl       $1, %ecx
[Codegen] jo         .Lfrom41
[Codegen] movabsq    $0xfff8800000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] emitReturnFromIC
[Codegen] ret
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel73, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel82, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel91, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel100, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel109, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel118, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel127, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel136, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel142, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel148, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel154, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel160, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel166, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel172, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel178, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabc2c06, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom218
[Codegen] .set .Llabel218, .
[Codegen] int3
[Codegen] .set .Llabel219, .
[Codegen] .set .Lfrom218, .Llabel219
[Codegen] call       .Lfrom224
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel229, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel238, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel247, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel256, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel265, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel274, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel283, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel292, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel298, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel304, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel310, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel316, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel322, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel328, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel334, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] emitFailurePath
[Codegen] .set .Llabel358, .
[Codegen] .set .Lfrom24, .Llabel358
[Codegen] .set .Llabel358, .
[Codegen] movq       0x10(%rdi), %rdi
[Codegen] jmp        *0x0(%rdi)
[Codegen] emitFailurePath
[Codegen] .set .Llabel364, .
[Codegen] .set .Lfrom41, .Llabel364
[Codegen] movq       %rax, %rcx
[Codegen] movabsq    $0xfff8800000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] .set .Llabel380, .
[Codegen] movq       0x10(%rdi), %rdi
[Codegen] jmp        *0x0(%rdi)
[Codegen] # BEGIN creators: BaselineCacheIRCompiler::compile/Assembler::finish
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] # END   creators: BaselineCacheIRCompiler::compile/Assembler::finish
[Codegen] # END   creators: BaselineCacheIRCompiler::compile
[BaselineIC]   Attached UnaryArith CacheIR stub
[BaselineOSR] WarmUpCounter for ../../../../Benchmarkers/prop_access.js:2:33 reached 4 at pc 75bb8e70a7dd, trying to switch to Ion!
[BaselineOSR]   Compile at loop head!
[Codegen] # BEGIN creators: CodeGenerator::link
[Codegen] # BEGIN creators: CodeGenerator::link/Assembler::finish
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] # END   creators: CodeGenerator::link/Assembler::finish
[Codegen] Created IonScript 75bb8e744900 (raw 2e5e545e6460)
[Codegen] # END   creators: CodeGenerator::link
[IonScripts] Forcing OSR Mismatch Compilation
[IonInvalidate] Start invalidation.
[IonInvalidate]  Invalidate ../../../../Benchmarkers/prop_access.js:2:33, IonScript 75bb8e744900
[IonInvalidate] BEGIN invalidating activation
[IonInvalidate] #1 exit frame @ 7ffe466beba0
[IonInvalidate] #2 Baseline JS frame @ 7ffe466bec30, ../../../../Benchmarkers/prop_access.js:2:33 (fun: 191540400b30, script: 1970c7c73060, pc 2e5e545e4f01)
[IonInvalidate] END invalidating activation
[IonInvalidate] BEGIN invalidating activation
[IonInvalidate] #1 exit frame @ 7ffe466bf480
[IonInvalidate] #2 baseline stub frame @ 7ffe466bf4d8
[IonInvalidate] #3 Baseline JS frame @ 7ffe466bf550, ../../../../Benchmarkers/prop_access.js:1:1 (fun: 0, script: 1970c7c730b0, pc 2e5e545e42d2)
[IonInvalidate] END invalidating activation
[IonScripts] Warp Compiling script ../../../../Benchmarkers/prop_access.js:2:33 (1970c7c73060) (warmup-counter=0,)
[WarpTranspiler] fallback stub (entered-count: 0) for JSOp::JumpIfFalse @ ../../../../Benchmarkers/prop_access.js:3:25
WarpSnapshot (0x75bb8cbd25e0)
------------------------------
globalLexicalEnv: 0x1970c7c41040
globalLexicalEnvThis: 0x1970c7c4e040
failedBoundsCheck: 0
failedLexicalCheck: 0

JitZone stubs:
Stub 0: 0x0
Stub 1: 0x0
Stub 2: 0x0
Stub 3: 0x0
Stub 4: 0x0

Nursery objects (0):

WarpScriptSnapshot (0x75bb8cbd2570)
------------------------------
Script: ../../../../Benchmarkers/prop_access.js:2:33 (0x1970c7c73060)
  moduleObject: 0x0
  isArrowFunction: 0
  environment: None

  WarpCacheIR (offset 25, JSOp::Lt)
    stubCode: 0x1970c7c740d8
    stubInfo: 0x75bb8e72a220
    stubData: 0x0
    IR:
      GuardToInt32                  inputId 0
      GuardToInt32                  inputId 1
      CompareInt32Result            op JSOp::Lt, lhsId 0, rhsId 1
      ReturnFromIC                  

  WarpBailout (offset 26, JSOp::JumpIfFalse)

  WarpCacheIR (offset 46, JSOp::NewObject)
    stubCode: 0x1970c7c74100
    stubInfo: 0x75bb8e72a240
    stubData: 0x75bb8cbd2350
    IR:
      GuardNoAllocationMetadataBuilderbuilderAddrOffset 0
      NewPlainObjectResult          numFixedSlots 0, numDynamicSlots 0, allocKind AllocKind(9), shapeOffset 8, siteOffset 16
      ReturnFromIC                  

  WarpCacheIR (offset 57, JSOp::InitElem)
    stubCode: 0x1970c7c74128
    stubInfo: 0x75bb8e72a360
    stubData: 0x75bb8cbd23c0
    IR:
      GuardToObject                 inputId 0
      GuardToInt32                  inputId 1
      GuardShape                    objId 0, shapeOffset 0
      StoreDenseElementHole         objId 0, indexId 1, rhsId 2, handleAdd true
      ReturnFromIC                  

  WarpCacheIR (offset 64, JSOp::InitElem)
    stubCode: 0x1970c7c74128
    stubInfo: 0x75bb8e72a360
    stubData: 0x75bb8cbd2420
    IR:
      GuardToObject                 inputId 0
      GuardToInt32                  inputId 1
      GuardShape                    objId 0, shapeOffset 0
      StoreDenseElementHole         objId 0, indexId 1, rhsId 2, handleAdd true
      ReturnFromIC                  

  WarpCacheIR (offset 75, JSOp::GetElem)
    stubCode: 0x1970c7c74150
    stubInfo: 0x75bb8e72a2a0
    stubData: 0x75bb8cbd2480
    IR:
      GuardToObject                 inputId 0
      GuardToInt32                  inputId 1
      GuardShape                    objId 0, shapeOffset 0
      LoadDenseElementResult        objId 0, indexId 1
      ReturnFromIC                  

  WarpCacheIR (offset 86, JSOp::ToNumeric)
    stubCode: 0x1970c7c74178
    stubInfo: 0x75bb8e72a380
    stubData: 0x0
    IR:
      GuardToInt32                  inputId 0
      LoadInt32Result               valId 0
      ReturnFromIC                  

  WarpCacheIR (offset 87, JSOp::Inc)
    stubCode: 0x1970c7c741a0
    stubInfo: 0x75bb8e72a160
    stubData: 0x0
    IR:
      GuardToInt32                  inputId 0
      Int32IncResult                inputId 0
      ReturnFromIC                  

[IonSyncLogs] Can't log script ../../../../Benchmarkers/prop_access.js:2:33. (Compiled on background thread.)
[BaselineOSR]   Skipped compile with Ion!

===== BuildSSA (== input to OptimizeMIR)[WarpTrialInlining] Trial i =====
  Block0:
    0 = Value.Parameter
    1 = Value.nlining for outer script 'benchmarkPropertyAccess' (../../../../Benchmarkers/prop_access.js:2:33 (1970c7c73060)) (inliningRoot=75bb8e729500)
Parameter
    2 = Undefined.Constant undefined
    3 = None.Start
    4 = None.CheckOverRecursed
    5 = MagicUninitializedLexical.Constant magic uninitialized-lexical
    6 = Int32.Constant 0x0
    16 = None.Goto Block2
  Block1:
    7 = Pointer.OsrEntry
    8 = Undefined.Constant undefined
    9 = Value.OsrReturnValue 7
    10 = Value.Parameter
    11 = Value.Parameter
    12 = Value.OsrValue 7
    13 = Value.OsrValue 7
    14 = Value.OsrValue 7
    15 = None.Start
    17 = None.Goto Block2
  Block2:
    18 = Undefined.Phi 2 8
    19 = Value.Phi 2 9
    20 = Value.Phi 0 10
    21 = Value.Phi 1 11
    22 = Value.Phi 6 12
    23 = Value.Phi 2 13
    24 = Value.Phi 2 14
    32 = None.Goto Block3
  Block3:
    25 = Value.Phi 18 18
    26 = Value.Phi 19 19
    27 = Value.Phi 20 20
    28 = Value.Phi 21 21
    29 = Value.Phi 22 60
    30 = Value.Phi 23 40
    31 = Value.Phi 24 57
    33 = None.InterruptCheck
    34 = Int32.Unbox 29
    35 = Int32.Unbox 28
    36 = Bool.Compare ty=Int32 jsop=Lt 34 35
    37 = None.Test true->Block4 false->Block5 36
  Block4:
    38 = MagicUninitializedLexical.Constant magic uninitialized-lexical
    39 = Shape.Constant shape at 1970c7c6fc20
    40 = Object.NewPlainObject 39
    41 = Int32.Constant 0x0
    42 = String.Constant string 1970c7c2d780
    43 = Object.GuardShape 40
    44 = Elements.Elements 43
    45 = None.StoreElementHole 43 44 41 42
    46 = Int32.Constant 0x1
    47 = String.Constant string 1970c7c2be60
    48 = Object.GuardShape 40
    49 = Elements.Elements 48
    50 = None.StoreElementHole 48 49 46 47
    51 = Int32.Constant 0x1
    52 = Object.GuardShape 40
    53 = Elements.Elements 52
    54 = Int32.InitializedLength 53
    55 = Int32.BoundsCheck 51 54
    56 = Int32.SpectreMaskIndex 55 54
    57 = Value.LoadElement 53 56
    58 = Int32.Unbox 29
    59 = Int32.Constant 0x1
    60 = Int32.Add 58 59
    61 = None.Goto Block3
  Block5:
    62 = None.Return 26
===== ../../../../Benchmarkers/prop_access.js:2 =====

[Prune] Begin
[Prune] Visit block 1:
[Prune]   Reaches block 2
[Prune] Visit block 2:
[Prune]   Reaches block 3
[Prune] Visit block 3:
[Prune]   Reaches block 4
[Prune]   Reaches block 5
[Prune] Visit block 5:
[Prune] Visit block 4:
[Prune] Visit block 0:

[Escape] [BaselineICFallback] Fallback hit for (../../../../Benchmarkers/prop_access.js:1:1) (pc=18,line=14,uses=2,stBegin (ScalarReplacement)
ubs=0): GetName(GetGName)
[Escape] Check object
NewPlainObject#40:Object = [BaselineIC] NewPlainObject <-   Attached GetName CacConstant#heIR stub
39
[BaselineICFallback] Fallback hit for (../../../../Benchmarkers/prop_access.js:1:1) (pc=24,line=14,uses=2,stu  after ../../../../Benchmarkers/prop_access.js:bs=0):3
 GetName(GetGName)
[Escape]   Check object
GuardShape#52:Object = GuardShape <- NewPlainObject#40
  after ../../../../Benchmarkers/prop_access.js:3
[Escape]     is escaped by
Elements#[BaselineICFallback] Fallback 53:hit for (../../../../Benchmarkers/prop_access.js:1:1Elements = Elements <- GuardShape#52
  after ../../../../Benchmarkers/prop_access.js:3
[Escape] ) (pc=  is indirectly escaped by
GuardShape#52:Object = GuardShape <- 30,lineNewPlainObject#40
  after ../../../../Benchmarkers/prop_access.js:3
=14,uses=2,stubs=0)
[Alias] Begin: GetProp(GetProp)

[Alias] Processing store Parameter#0 (flags fffffff)
[Codegen] # BEGIN creators: BaselineCacheIRCompiler::compile
[Alias] Processing store Parameter#1 (flags fffffff)
[Codegen] addl       $1, 0x8(%rdi)[Alias] Processing store Start#3 (fl
[Codegen] ags emitGuardToObject
fffffff)[Codegen] 
[Alias] movq       %rcx, %r11
Processing store OsrEntry#9 (flag[Codegen] shrq       $47, %r11
s fffffff)
[Codegen] cmpl       $0x1fffc, %r11d
[Alias] Processing store OsrReturnValue[Codegen] jne        .Lfrom24
#11[Codegen] emitGuardShape
 (flags [Codegenfffffff)
] movabsq    $0xfffe000000000000, %r11
[Alias] [Codegen] Processing store Parameter#12 xorq       %r11, %rcx
(flags fffffff[Codegen] .set .Llabel37, .
)
[Codegen] movq       0x20(%rdi), %rax
[Codegen] xorl       %edx, %edx
[Codegen] cmpq       %rax, 0x0(%rcx)
[Alias[Codegen] jne        .Lfrom52
] Processing store Parameter#13[Codegen]  (flags cmovne     %rdx, %rcx
fffffff)
[Codegen] emitLoadDynamicSlotResult
[Alias] Processing store Start[Codegen] movq       %rcx, %rax
[Codegen] .set .Llabel59, .
#17 (flags fffffff)
[Alias] [Codegen] movl       0x28(%rdi), %ecx
Processing loop he[Codegen] .set .Llabel62, .
[Codegen] ader 3
[Alias]movq       0x8(%rax), %rdx
   Load [Codegen] movq       0x0(%rdx,%rcx,1), %rcx
GuardShape#40 [Codegen] depends on semitReturnFromIC
tore Start#17[Codegen ()
] ret
[Codegen] push       %r10
[Codegen] push       %r9
[Alias]   Load Elements[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
#41[Codegen]  depends on store Start#push       %rdx
[Codegen] push       %rcx
17 ()
[[Codegen] Alias] Processing store StoreElementHole#push       %rax
42 (flags 3[Codegen] )
[Alias]   Load GuardShape#45 depends on store subq       $240, %rsp
Start#17 ()
[Alias[Codegen] ]   Load Elements.set .Llabel89, .
#46 depends on store StoreElementHole[Codegen]#42 ()
[Alias vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel98, .
] Processing store StoreElementHole[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
#47[Codegen] .set .Llabel107, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
 (fl[Codegen] .set .Llabel116, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
ags 3)
[Alias] [Codegen]   Load GuardShape.set .Llabel125, .
#49[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
 depends o[Codegen] n st.set .Llabel134, .
ore [Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel143, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
Start#[Codegen] 17 (.set .Llabel152, .
)
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Alias]   Load Elements[Codegen] .set .Llabel158, .
[Codegen] #50 dependsvmovdqu    %xmm6, 0x60(%rsp)
 on [Codegen] .set .Llabel164, .
store StoreElementHole#[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel170, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
47 ()
[Alias[Codegen] .set .Llabel176, .
]   Load InitializedLength#51 depends on store StoreElementHole#47[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
 ()
[Codegen] [Alias] .set .Llabel182, .
  Load LoadElement[Codegen] #54 depends on store StoreElementHole#47 vmovdqu    %xmm2, 0x20(%rsp)
()
[Alias] [Codegen] .set .Llabel188, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
Processing loop backedge 4[Codegen] .set .Llabel194, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
 ([Codegenheader 3)
] movq       %rsp, %rax
[Alias]   [Codegen] andq       $0xfffffffffffffff0, %rsp
Load GuardShape#40 [Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabc2c06, %rax
[Codegen] subq       $8, %rsp
does not depend on any stores in this loop
[Codegen[Alias]   Load Elements] movq       %rax, %rdi
#[Codegen] testb      $0xf, %spl
[Codegen] 41 aliasesje         .Lfrom234
 on stor[Codegen] e .set .Llabel234, .
StoreElementHole#47 (store in loop body[Codegen] int3
)
[Codegen] [Alias] .set .Llabel235, .
  Load Elements[Codegen] #41.set .Lfrom234, .Llabel235
 depends on store Test#33 [Codegen] call       .Lfrom240
[Codegen] addq       $8, %rsp
[Codegen(due to stores in loop body)
] pop        %rsp
[Alias]  [Codegen] .set .Llabel245, .
 Load GuardShape[Codegen] #45 does not depend on any stores in this loopvmovdqu    0xe0(%rsp), %xmm14
[Codegen] 
[.set .Llabel254, .
Alias]  [Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel263, .
 Load GuardShape[Codegen] #49vmovdqu    0xc0(%rsp), %xmm12
 does not depend on any stores in this loop
[AliasSummaries] Dependency list for other passes:
[Codegen[AliasSummaries]  GuardShape] 40 mark.set .Llabel272, .
ed depending on Start17
[AliasSummaries]  Elements41 marked depending [Codegen] on Test33
[AliasSummaries]  GuardShape45 markedvmovdqu    0xb0(%rsp), %xmm11
 dependi[Codegen] .set .Llabel281, .
ng on Start17[Codegen] vmovdqu    0xa0(%rsp), %xmm10

[AliasSummaries][Codegen] .set .Llabel290, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
  Elements46 marked depending [Codegen] .set .Llabel299, .
on StoreElementHole42
[AliasSummaries]  GuardShape[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel308, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
49 [Codegen] .set .Llabel314, .
marked depending on [CodegenStart17
[AliasSummaries]  ] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel320, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5Elements50 marked depending 
[Codegen] on StoreElementHole.set .Llabel326, .
47
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[AliasSummaries[Codegen] .set .Llabel332, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
] [Codegen] .set .Llabel338, .
 InitializedLength[Codegen] vmovdqu    0x20(%rsp), %xmm2
51 marked depending on StoreElementHole47
[AliasSummaries]  LoadElement54 marked depending on StoreElementHole47
[Codegen] 
[GVN] Running GVN on graph (with 6.set .Llabel344, .
[Codegen blocks)
[GVN]   Visiting domin] atorvmovdqu    0x10(%rsp), %xmm1
 tree (wit[Codegen] .set .Llabel350, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
h 1 blocks) rooted at[Codegen] addq       $240, %rsp
[Codegen]  block0 (normal entry block)
[GVN]     Visiting block0
pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[[GVN]       Codegen] Recording pop        %r9
[Codegen] pop        %r10Constant
[Codegen] int3
[Codegen] 2
emitFailurePath
[GVN[Codegen] .set .Llabel374, .
[Codegen] .set .Lfrom24, .Llabel374
]       Di[Codegen] .set .Llabel374, .
[Codegen] movq       0x10(%rdi), %rdi
[Codegen]scarding dead  jmp        *0x0(%rdi)
[Codegen] emitFailurePath
[Codegen] .set .Llabel380, .Constant5

[GVN]       [Codegen] Recordin.set .Lfrom52, .Llabel380
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] orq        %r11, %rcx
[Codegen] .set .Llabel393, .
[Codegen] movq       0x10(%rdi), %rdi
[Codegen] jmp        *0x0(%rdi)
g Constant6
[Codegen] # BEGIN creators: BaselineCacheIRCompiler::compile/Assembler::finish
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] # END   creators: BaselineCacheIRCompiler::compile/Assembler::finish
[GVN]       Reco[Codegen] # END   creators: rding Box7
[GVN]   Visiting dominator tree (with BaselineCacheIRCompiler::compile
1 blocks) rooted at[BaselineIC]   Attached  block1 (OSR entry block)
GetProp CacheIR stub
[GVN]   [BaselineICFallback] Fallback hit for (../../../../Benchmarkers/prop_access.js:1:1) (pc=36,line=14  Visiting,uses=2,stubs=0): GetName(GetGName)
 block[BaselineIC]  1
[GVN]       Recording Constant10 Attached GetName C
[GVN]       Recording Unbox18
[GVNacheIR stu]   Visb
i[BaselineICFallback] Fallback hit for (../../../../Benchmarkers/prop_access.js:1:1) (pc=42,line=14,uses=2,stubs=0): Call(Call)
ting dominato[Codegenr tree (] with 4 blocks) roo# BEGIN creators: BaselineCacheIRCompiler::compileted at block2 (merge point from normal entry and OSR entry)
[GVN]
[Codegen] addl       $1, 0x8(%rdi)
[Codegen     Visiting]  block2
emitLoadArgumentDynamicSlot
[GVN]       Recording Phi20
[GVN]       Recording Phi21
[GVN]       Recording Phi22
[GVN]       Recording Phi23
[GVN]       Recording Constant24
[GVN]     Visiting block3
[GVN]       Recording Phi26
[GVN]       Replacing Constant27 with Constant24
[[Codegen] movq       0x10(%rsp,%rcx,8), %rax
GVN]      [Codegen] emitGuardToObject
 Discarding dead Constant27
[Codegen] movq       %rax, %r11
[Codegen[GVN]       Record] shrq       $47, %r11
[Codegen] cmpl       $0x1fffc, %r11d
[Codegen] jne        .Lfrom29
ing [Codegen] emitGuardSpecificObject
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] xorq       %r11, %rax
[Codegen] cmpq       %rax, 0x20(%rdi)
[Codegen] jne        .Lfrom52
[Codegen] emitCallNativeFunction
[Codegen] movq       %rcx, %rdx
[Codegen] movq       %rbp, %r11
[Codegen] subq       %rsp, %r11
[Codegen] subq       $8, %r11
[Codegen] .set .Llabel65, .
[Codegen] movl       %r11d, -0xc(%rbp)
[Codegen] push       0x0(%rsp)
[Codegen] movq       $1, 0x8(%rsp)
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] push       %rdi
[Codegen] testl      %edx, %edx
[Codegen] je         .Lfrom94
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel112, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel121, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel130, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel139, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel148, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel157, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel166, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel175, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel181, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel187, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel193, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel199, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel205, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel211, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel217, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabc3815, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom257
[Codegen] .set .Llabel257, .
[Codegen] int3
[Codegen] .set .Llabel258, .
[Codegen] .set .Lfrom257, .Llabel258
[Codegen] call       .Lfrom263
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel268, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel277, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel286, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel295, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel304, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] Box29
[GVN]       .set .Llabel313, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel322, .
[Codegen]Fo vmovdqu    0x80(%rsp), %xmm8
[lded Unbox30 tCodegen] .set .Llabel331, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] o Phi26.set .Llabel337, .
[Codegen] 
[vmovdqu    0x60(%rsp), %xmm6
GVN][Codegen] .set .Llabel343, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel349, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel355, .
       Disc[Codegen] ardivmovdqu    0x30(%rsp), %xmm3
ng dead Unbox30
[Codegen] .set .Llabel361, .
[Codegen[GVN]       Disc] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel367, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[arding dead Box29
Codegen] .set .Llabel373, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[GVN]       R[Codegen] .set .Llabel397, .
[Codegen] .set .Lfrom94, .Llabel397
ecordi[Codegen] push       0x18(%rbp)
[Codegen] push       0x20(%rbp)
ng[Codegen] movq       %rsp, %rbx
[Codegen] push       %rdx
[Codegen] push       $0x2
[Codegen] push       %rsi
[Codegen] push       %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rcx
[Codegen] .set .Llabel421, .
[Codegen] movq       0x140(%rcx), %rcx
[Codegen] .set .Llabel428, .
[Codegen] movq       %rsp, 0x70(%rcx)
[Codegen] push       $0x0
[Codegen] movq       %rsp, %rcx
[Codegen] andq       $0xfffffffffffffff0, %rsp Unbox31

[Codegen] push       %rcx[GVN]       Record
[Codegen] movabsq    $0x75bb8e73a200, %rcx
ing Compare[Codegen] subq       $8, %rsp
32
[Codegen] movq       %rdx, %rsi
[Codegen] movq       %rbx, %rdx
[Codegen] movq       %rcx, %rdi
[Codegen] testb      $0xf, %spl
[GVN]     Visiti[Codegen] je         .Lfrom475
[Codegen] .set .Llabel475, .
[Codegen] int3
[Codegen] .set .Llabel476, .
[Codegen] .set .Lfrom475, .Llabel476
ng bloc[Codegen] call       *0x20(%rax)
[k4Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] testb      $0xff, %al
[Codegen] je         .Lfrom492
[Codegen] movq       0x28(%rsp), %rcx

[GVN]       Replacing Constant34 w[Codegen] .set .Llabel497, .
it[Codegen] movq       -0x8(%rbp), %rdi
h Constant24
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
[[GVN]Codegen] pop        0x0(%rsp)
       Discarding dead Constant[Codegen] emitReturnFromIC
[Codegen]34
[GVN]       R ret
[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
ecording Constant35
[GVN]  [Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel527, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel536, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel545, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel554, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
     Record[Codegen] .set .Llabel563, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel572, .
[Codegen]ing Constant36
[GVN]        vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel581, .
Recording Constant38
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel590, .
[GVN]      [Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen]  Recor.set .Llabel596, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel602, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel608, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel614, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel620, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel626, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel632, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen]ding Constant movq       %rsp, %rax
39
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[[GVN]       Recording GuardShape40
Codegen] movabsq    $0x5c7edabc2c06, %rax
[Codegen] subq       $8, %rsp
[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom672
[Codegen] .set .Llabel672, .
[Codegen] int3
[Codegen] .set .Llabel673, .
[Codegen] .set .Lfrom672, .Llabel673
[Codegen] call       .Lfrom678
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] .set .Llabel683, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel692, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel701, .
[Codegen] [GVN]       Recording Elements41
[GVN]vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel710, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel719, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel728, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel737, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel746, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel752, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel758, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel764, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel770, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel776, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel782, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel788, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] emitFailurePath
[Codegen] .set .Llabel812, .
[Codegen] .set .Lfrom52, .Llabel812
[Codegen] .set .Lfrom29, .Llabel812
[Codegen] .set .Llabel812, .
[Codegen] movq       0x10(%rdi), %rdi
[Codegen] jmp        *0x0(%rdi)
[Codegen] .set .Llabel818, .
[Codegen] .set .Lfrom492, .Llabel818
[Codegen] jmp        .Lfrom823
[Codegen] # BEGIN creators: BaselineCacheIRCompiler::compile/Assembler::finish
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] # END   creators: BaselineCacheIRCompiler::compile/Assembler::finish
[Codegen] # END   creators: BaselineCacheIRCompiler::compile
[BaselineIC]   Attached Call CacheIR stub
       Recording Constant43
[GVN]     [BaselineICFallback]   Fallback hit for (../../../../Benchmarkers/prop_access.js:Recordin1:g Constant44
[GVN] 1) (pc=48      Replacing GuardShape45 with GuardShape40,line=14,us
[GVN]     es=2,stubs=0): Call(Call)  Discarding
 dead GuardShape45
[GVN] [Codegen] # BEGIN creators: BaselineCacheIRCompiler::compile
      Recording [Codegen] Elements46
[GVN]       Replacing addl       $1, 0x8(%rdi)
Constant48 with Constant43[Codegen] 
[emitLoadArgumentDynamicSlot
GVN[Codegen] ] movq       0x10(%rsp,%rcx,8), %rax
    [Codegen] emitGuardToObject
  Discarding dead Constant48[Codegen
[GVN] ]       movq       %rax, %r11
Re[Codegen] shrq       $47, %r11
placing [Codegen] GuardShape49 wcmpl       $0x1fffc, %r11d
it[Codegenh ] GuardShape40jne        .Lfrom29

[GVN]       D[Codegeniscarding dead ] GuardShape49emitGuardSpecificObject
[Codegen] movabsq    $0xfffe000000000000, %r11

[GVN] [Codegen  ]     xorq       %r11, %rax
Rec[Codegen]ording Elements cmpq       %rax, 0x20(%rdi)
[Codegen] jne        .Lfrom52
50
[Codegen] [GVNemitCallNativeFunction
]       [Codegen]Recording  movq       %rcx, %rdx
InitializedLength51[Codegen
[GVN] ]   movq       %rbp, %r11
    Re[Codegen] cosubq       %rsp, %r11
rding BoundsCheck52
[GVN] [Codegen]      Record subq       $8, %r11
ing [Codegen]SpectreMaskIndex53
[GVN]       Reco .set .Llabel65, .
[Codegen] rdmovl       %r11d, -0xc(%rbp)
ing [Codegen] LoadElement54
[GVN]       Recording Box55
[GVN]push       0x0(%rsp)
  [Codegen  ]   movq       $1, 0x8(%rsp)
 F[Codegen] push       %rbp
olded Unbox56 t[Codegen] o Phi26
[GVN]  movq       %rsp, %rbp
[Codegen     Discarding dead Unbox56
[GVN]       Discarding dead Box55
[GVN]       Replacing Constant57 with Constant43
[GVN]       Discarding dead Constant57
] push       %rdi
[Codegen][GVN]       Recordin cmpl       $0x3, %edx
[Codegen] je         .Lfrom95
g Add58
[Codegen] push       %r10
[Codegen[GVN]     Visiting ] push       %r9
[Codegen] push       %r8
[Codegen]block5
[GVN]       Re push       %rdi
placing Constant60 with Constant24
[GVN]       Discarding dead Constant60
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen]
[LICM] Beginning LICM pass
[LICM]   Visitin push       %rcx
g loop with header block[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel113, .
3,[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
 hoisting to Goto25
[LICM[Codegen] .set .Llabel122, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel131, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel140, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
]     Visiting bloc[Codegenk3] .set .Llabel149, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] 
[LICM]       H.set .Llabel158, .
oisting Unbox31[Codegen
[LICM] ]     Visitingvmovdqu    %xmm9, 0x90(%rsp)
 block4
[Codegen] .set .Llabel167, .
[Codegen] [LICM] vmovdqu    %xmm8, 0x80(%rsp)
      [CodegenConstant35 will be hoisted only if its users are
[] LICM]  .set .Llabel176, .
     Constant36 will be hoisted only if [Codegenit] vmovdqu    %xmm7, 0x70(%rsp)
s u[Codegensers are
[LICM]       Constant38 will be hoisted only if its users are
[LICM]       Constant39 will be hoisted only if its users are
[LICM]       Constant43 will be hoisted only] .set .Llabel182, .
 if its users are
[LICM]       Constant44 will be hoisted only if its users are
[Codegen] 
[Range] Adding beta nodes
[Range] Looking at blvmovdqu    %xmm6, 0x60(%rsp)
ock [Codegen] 5
[Range] Looking at block 4
[Range.set .Llabel188, .
] [Codegen]   Adding beta nodevmovdqu    %xmm5, 0x50(%rsp)
 for[Codegen] .set .Llabel194, .
 smaller 26
[Range]   Adding beta node for greater 31[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Range] Loo
[Codegen] .set .Llabel200, .
king at bloc[Codegenk 3
[] Range] Lookinvmovdqu    %xmm3, 0x30(%rsp)
g at[Codegen] .set .Llabel206, .
 block 2
[[Codegen] Range] Lovmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel212, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel218, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
okin[Codegen] g amovq       %rsp, %rax
t block 1
[Range][Codegen] andq       $0xfffffffffffffff0, %rsp
 Lo[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabc3815, %rax
oking at[Codegen] subq       $8, %rsp
 block 0
[Codegen] movq       %rax, %rdi
[Range] Doing range propagation
[Range[Codegen]]  testb      $0xf, %spl
[Codegen] je         .Lfrom258
computing range on [Codegen] .set .Llabel258, .
[Codegen] 0
[Range] computint3
[Codegen] .set .Llabel259, .
[Codegening ] .set .Lfrom258, .Llabel259
range on 1[Codegen] call       .Lfrom264

[Range] compu[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
ting r[Codegen] .set .Llabel269, .
an[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel278, .
[Codegenge o] vmovdqu    0xd0(%rsp), %xmm13
[Codegenn ] 2
.set .Llabel287, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel296, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel305, .
[Range] [Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel314, .
[Codegen] computvmovdqu    0x90(%rsp), %xmm9
in[Codegeng ] range o.set .Llabel323, .
n 3
[Codegen] [Range] computing rangevmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel332, . on 4
[Range] co
[Codegen] vmovdqu    0x70(%rsp), %xmm7
mputi[Codegen] .set .Llabel338, .ng range
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen] .set .Llabel344, .
 on 6[Codegen] vmovdqu    0x50(%rsp), %xmm5

[Range[Codegen]   Constant] .set .Llabel350, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
#6 has range I[0, 0[Codegen] .set .Llabel356, .
]
[[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel362, .
Range] computing range on 7
[Range] computing range on 9
[Range] computing ra[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel368, .
[Codegen]nge on 10
[Range] vmovdqu    0x10(%rsp), %xmm1
[Codegen]  computin.set .Llabel374, .
g range on 11
[Range] [Codegen] vmovdqu    0x0(%rsp), %xmm0
compu[Codegen] addq       $240, %rsp
ting range on[Codegen] pop        %rax
[Codegen] pop        %rcx
 12[Codegen] 
[Range] computpop        %rdx
[Codegening range on ] 13
pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] [Range] int3
computin[Codegen] .set .Llabel398, .
[Codegen] g ra.set .Lfrom95, .Llabel398
nge on 14
[Range] computing range on [Codegen] push       0x18(%rbp)
[Codegen] 15
[Range] computing range on 16
[push       0x20(%rbp)
[Codegen] Range] computing range on 17
[Range] computing range opush       0x28(%rbp)
[Codegen] push       0x30(%rbp)
[Codegen] push       0x38(%rbp)
[Codegen] n 18
movq       %rsp, %rbx
[Codegen] push       %rdx
[Codegen] push       $0x2
[Codegen] push       %rsi
[Range][ computing range on 20
[Range] computing range on 21
[Codegen] push       %rbp
Range] computing range[Codegen] movabsq    $0x75bb8e73a200, %rcx
 on 22
[Codegen] [Range] computing range on 23
[Range] computin.set .Llabel431, .
g range on 24
[Range] computing range on 31
[Range] computing ran[Codegen] movq       0x140(%rcx), %rcx
[Codegenge on] .set .Llabel438, .
[Codegen] movq       %rsp, 0x70(%rcx)
 26
[Range[Codegen] push       $0x0] computing range on 28
[Range] computing range on 
[Codegen] movq       %rsp, %rcx
32
[Codegen] andq       $0xfffffffffffffff0, %rsp[Range] comput
[Codegen] push       %rcx
ed symbolic bound on backedges: #31-#23
[Codegen] movabsq    $0x75bb8e73a200, %rcx
[Range[Codegen] subq       $8, %rsp
] added [Codegen] movq       %rdx, %rsi
[Codegen] symbolic range on 26
[Range]   Phi#26 has range movq       %rbx, %rdx
I[-2147483648 {#[Codegen] movq       %rcx, %rdi
[Codegen23}, 2147483647 {[loop] #31-1}]
] testb      $0xf, %spl
[Range] computing range on 72
[Range]   Beta#72 has range I[-2147483647, 2147483647]
[Range] computing range on 71
[[CodegenRange]   Beta#71 has range I[-2147483648, 2147483646]
[Range] computing range on] je         .Lfrom485 35
[Codegen] .set .Llabel485, .

[Range] computing[Codegen] int3
[Codegen]  range on 36
[Range] computing range on 37
[Range.set .Llabel486, .
] computing range on 38
[Range]   Constant[Codegen] .set .Lfrom485, .Llabel486
#38 has range I[Codegen] call       *0x20(%rax)
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] testb      $0xff, %al
[Codegen] je         .Lfrom502
[Codegen] movq       0x28(%rsp), %rcx
[[Codegen] 0, 0]
[.set .Llabel507, .
[Codegen] movq       -0x8(%rbp), %rdi
[Codegen] Range]movq       %rbp, %rsp
[Codegen] pop        %rbp
 computing[Codegen] pop        0x0(%rsp)
 range on 39
[Range] co[Codegen] emitReturnFromIC
[Codegen] ret
[Codegen] push       %r10
mputing range on [Codegen] push       %r9
[Codegen] push       %r840
[Range] com
[Codegen] push       %rdi
putin[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
g ran[Codegen] .set .Llabel537, .
ge on 41
[Range[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
] com[Codegen] .set .Llabel546, .
puting range on 42
[Codegen] [Range] computing range on vmovdqu    %xmm13, 0xd0(%rsp)
43
[Range]   Constant#43 has range I[1, 1[Codegen]
[Range] computing range on 44
[Range] com] .set .Llabel555, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel564, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
puti[Codegen] .set .Llabel573, .
[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel582, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel591, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel600, .ng range on 46

[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel606, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel612, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[[Range] Codegen] .set .Llabel618, .
computing range on 47
[Range] computing[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel624, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel630, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel636, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel642, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
 range on 50
[Codegen] movq       %rsp, %rax
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabc2c06, %rax
[Codegen] subq       $8, %rsp
[Range] comput[Codegen] movq       %rax, %rdi
[Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom682
[Codegen] .set .Llabel682, .
[Codegen] int3
[Codegen] .set .Llabel683, .
[Codegen] .set .Lfrom682, .Llabel683
[Codegen] call       .Lfrom688
ing [Codegen] addq       $8, %rsprang
[Codegen] pop        %rsp
[Codegen] .set .Llabel693, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel702, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel711, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12
[Codegen] .set .Llabel720, .
e on 51
[Range] [Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel729, .
  InitializedLength#51 has range I[0, [Codegen268435444]
[] Range] computing range on vmovdqu    0xa0(%rsp), %xmm10
52
[Range]   BoundsCheck#52 has range [Codegen] .set .Llabel738, .I[1, 1]
[Range] comput
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel747, .
in[Codegen] vmovdqu    0x80(%rsp), %xmm8
g range on 53
[Range]   [Codegen] .set .Llabel756, .
SpectreMaskIndex#53 has range I[1[Codegen, 1] vmovdqu    0x70(%rsp), %xmm7
[Codegen] ]
[Range] c.set .Llabel762, .
omp[Codegen] vmovdqu    0x60(%rsp), %xmm6
ut[Codegen] .set .Llabel768, .ing ra
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel774, .
[Codegen] nge onvmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel780, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel786, .
[Codegen 54
] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel792, .
[Codegen[Range] computing ran] ge on vmovdqu    0x10(%rsp), %xmm1
[Codegen] .set .Llabel798, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
58
[Codegen[Range]   ] addq       $240, %rsp
[CodegenAdd#58 has range I[-2147483647, ] pop        %rax
[Codegen] pop        %rcx
[Codegen2147483647]
] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[[Range] Removing beta nodes
[Range]Codegen] pop        %r8
[  Codegen] pop        %r9
[Codegen] pop        %r10
 Removing beta node [Codegen] int3
72 fo[Codegen] emitFailurePath
r 31
[Range[Codegen] .set .Llabel822, .
[Codegen] .set .Lfrom52, .Llabel822
[Codegen] .set .Lfrom29, .Llabel822
] [Codegen] .set .Llabel822, .
  Remov[Codegen] movq       0x10(%rdi), %rdi
[Codegen] jmp        *0x0(%rdi)
ing beta[Codegen] .set .Llabel828, .
[Codegen node 71 for 26] 
.set .Lfrom502, .Llabel828
[Codegen] jmp        .Lfrom833
[Range] Do range-base truncation (backward loop)[Codegen] # BEGIN creators: BaselineCacheIRCompiler::compile/Assembler::finish
[Codegen] .balign 16, 0xf4   # hlt
[Codegen] jmp        *2(%rip)

[Codegen] ud2[Range] Do graph type fixup (dequeue)

[Codegen] .quad      0
[Codegen] jmp        *2(%rip)
[Sink] Begin

[Codegen] ud2
[Codegen] .quad      0
[
[Range] Begin (removeUnnecessaryBitops)
Codegen] # END   creators: BaselineCacheIRCompiler::compile/Assembler::finish
[FLAC] Begin

[FLAC] analyze add: Add58
[Codegen] # END   creators: BaselineCacheIRCompiler::compile

[EAA] Begin
[BaselineIC]   Attached Call CacheIR stub

[MarkLoadsUsedAsPropertyKeys] Begin
[RedundantShapeGuards] Begin
[RedundantShapeGuards] Visit [BaselineICFallback] Fallback hishape guard 36
[RedundantShapeGuards]t for (../../../../Benchmarkers/prop_access.js:1:1) (pc=51,line=14,uses=2,stubs=0): Call(CallIgnoresRv)
   SKIP: i[Codegen] # BEGIN creators: BaselineCacheIRCompiler::compile
[Codegen] addl       $1, 0x8(%rdi)
ns 16 do[Codegen] emitLoadArgumentDynamicSlot
es not dominate b[Codegen] movq       0x10(%rsp,%rcx,8), %rax
[Codegen] emitGuardToObject
lock 4
[Codegen] movq       %rax, %r11
[Codegen] shrq       $47, %r11
[Codegen] cmpl       $0x1fffc, %r11d
[Codegen] [RedundantGCBarriers] Begin
jne        .Lfrom29
[Codegen] emitGuardSpecificObject
[Codegen] movabsq    $0xfffe000000000000, %r11
[Codegen] 
===== BeforeLIR (== result of OptimizeMIR) =====
  Block0:
    0 xorq       %r11, %rax
= [Codegen] Value.cmpq       %rax, 0x20(%rdi)
Parameter
[Codegen] jne        .Lfrom52
[Codegen    1 = Value.Parameter] 
    2 = emitCallNativeFunction
Undefined.Constant undefined
    3 = None.Start
[Codegen]     4 = None.CheckOverRecursed
movq       %rcx, %rdx
    5 = Int32.Constant 0x0
    6 = Value.[CodegenBox 2
    7 = None.Goto]  Block2movq       %rbp, %r11

  Block1:
    8 = [Codegen] subq       %rsp, %r11
[Codegen] Pointer.OsrEntry
    subq       $8, %r11
9 [Codegen] = Undefined.Constant undefined
    10 = Value.OsrReturnValue 8.set .Llabel65, .

    11 = Value.Parameter
    12 = Value.Parameter
    13 = Value.OsrValue 8
    14 = Value.OsrValue[Codegen] 8
    15 = Value.OsrValue 8
    16 = None movl       %r11d, -0xc(%rbp)
[Codegen] .Start
push       0x0(%rsp)
    17 = Int32[Codegen] movq       $1, 0x8(%rsp)
[Codegen] push       %rbp
[Codegen] movq       %rsp, %rbp
[Codegen] push       %rdi
.Unbox 13
    18 [Codegen] cmpl       $0x1, %edx
= None[Codegen] je         .Lfrom95
.Goto Block2
  Block2:
    19 = Value.Phi 6[Codegen] push       %r10
[Codegen] push       %r9
[Codegen] push       %r8
[Codegen] push       %rdi
[Codegen] push       %rsi 10
    20 = Value.Phi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[ 0 11Codegen] subq       $240, %rsp
[Codegen] .set .Llabel113, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)

    21 = Value[Codegen] .set .Llabel122, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] .set .Llabel131, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel140, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
.Phi 1 12
    22 = Int32.Phi[Codegen] .set .Llabel149, .
[ 5 Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel158, .
17
    [Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel167, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel176, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel182, .
[Codegen] vmovdqu    %xmm6, 0x60(%rsp)
[Codegen] .set .Llabel188, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel194, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel200, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel206, .
[Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel212, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel218, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
[Codegen] movq       %rsp, %rax
23 = MagicOptimizedOut.Constant [Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rax
[Codegen] movabsq    $0x5c7edabc3815, %rax
magic optimized-out
    24 = Int32.Unbox[Codegen] subq       $8, %rsp
 21[Codegen] movq       %rax, %rdi

    25 [Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom258
[Codegen] .set .Llabel258, .
= None.Goto[Codegen] int3
[Codegen] .set .Llabel259, .
[Codegen] .set .Lfrom258, .Llabel259
[Codegen] call       .Lfrom264
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
 Block3[Codegen] .set .Llabel269, .
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
[Codegen] .set .Llabel278, .
[Codegen] vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel287, .
[Codegen] vmovdqu    0xc0(%rsp), %xmm12

  Block3:
[Codegen] .set .Llabel296, .
[Codegen] vmovdqu    0xb0(%rsp), %xmm11
[Codegen] .set .Llabel305, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
[Codegen] .set .Llabel314, .
    26 = Int32[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel323, .
[Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen] .set .Llabel332, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
.Phi 22 47
    27 =[Codegen] .set .Llabel338, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[Codegen]  None.InterruptCheck
    28 = Bool.Compare.set .Llabel344, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel350, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel356, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel362, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen]  ty=Int32 jsop=Lt.set .Llabel368, .
 26 24
    29 = [Codegen] vmovdqu    0x10(%rsp), %xmm1
None.Test true->Block4 false->Block5 28[Codegen] .set .Llabel374, .

  Block4:
    30 = MagicUninitializedLexical.Constant[Codegen] vmovdqu    0x0(%rsp), %xmm0
 magic uninitialized-lexical
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
    31 = Shape.[Codegen] .set .Llabel398, .
[Codegen] .set .Lfrom95, .Llabel398
[Codegen] push       0x18(%rbp)
[Codegen] push       0x20(%rbp)
[Codegen] push       0x28(%rbp)
[Codegen] movq       %rsp, %rbx
[Codegen] push       %rdx
[Codegen] push       $0x2
[Codegen] push       %rsi
[Codegen] push       %rbp
[Codegen] movabsq    $0x75bb8e73a200, %rcx
Constant shape at 1970c7c6fc20
[Codegen] .set .Llabel425, .
[Codegen] movq       0x140(%rcx), %rcx    32 = Int32.
[Codegen] .set .Llabel432, .
[Codegen] movq       %rsp, 0x70(%rcx)
[Codegen] push       $0x0
[Codegen] movq       %rsp, %rcx
[Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] push       %rcx
[Codegen] movabsq    $0x75bb8e73a200, %rcx
[Codegen] subq       $8, %rsp
Constant 0x0
    33 = String.Constant[Codegen] movq       %rdx, %rsi
[Codegen] movq       %rbx, %rdx
[Codegen] movq       %rcx, %rdi
 string [Codegen] testb      $0xf, %spl
[Codegen] je         .Lfrom479
[Codegen] .set .Llabel479, .
[Codegen] int3
[Codegen] .set .Llabel480, .
[Codegen] .set .Lfrom479, .Llabel480
[Codegen] call       *0x20(%rax)
[Codegen] addq       $8, %rsp
[Codegen] pop        %rsp
[Codegen] 1970c7c2d780
    34testb      $0xff, %al
[Codegen] je         .Lfrom496
[Codegen] movq       0x28(%rsp), %rcx = String.Constant strin
[Codegen] .set .Llabel501, .
[Codegen] movq       -0x8(%rbp), %rdi
[Codegen] movq       %rbp, %rsp
[Codegen] pop        %rbp
g 1970c7c2be60[Codegen] pop        0x0(%rsp)

    35 = Object.[Codegen] emitReturnFromIC
NewPlainObject 31
    36 = [Codegen] ret
[CodegenObject.GuardShape 35
    37 = Elements.] push       %r10
[Codegen] push       %r9
Elements 36
    38 = None[Codegen] push       %r8.StoreElementHole 36 
[Codegen] push       %rdi
[Codegen] push       %rsi
[Codegen] push       %rdx
[Codegen] push       %rcx
[Codegen] push       %rax
[Codegen] subq       $240, %rsp
[Codegen] .set .Llabel531, .
[Codegen] vmovdqu    %xmm14, 0xe0(%rsp)
[Codegen] .set .Llabel540, .
[Codegen] vmovdqu    %xmm13, 0xd0(%rsp)
[Codegen] 37 32 33
    39 = Int32.Constant.set .Llabel549, .
[Codegen] vmovdqu    %xmm12, 0xc0(%rsp)
[Codegen] .set .Llabel558, .
[Codegen] vmovdqu    %xmm11, 0xb0(%rsp)
[Codegen] .set .Llabel567, .
 0x1
    40 = Elements.[Codegen] vmovdqu    %xmm10, 0xa0(%rsp)
[Codegen] .set .Llabel576, .
[Codegen] vmovdqu    %xmm9, 0x90(%rsp)
[Codegen] .set .Llabel585, .
[Codegen] vmovdqu    %xmm8, 0x80(%rsp)
[Codegen] .set .Llabel594, .
[Codegen] vmovdqu    %xmm7, 0x70(%rsp)
[Codegen] .set .Llabel600, .
Elements 36[Codegen] vmovdqu    %xmm6, 0x60(%rsp)

    41 = None.StoreElementHole 36[Codegen] .set .Llabel606, .
[Codegen] vmovdqu    %xmm5, 0x50(%rsp)
[Codegen] .set .Llabel612, .
[Codegen] vmovdqu    %xmm4, 0x40(%rsp)
[Codegen] .set .Llabel618, .
[Codegen] vmovdqu    %xmm3, 0x30(%rsp)
[Codegen] .set .Llabel624, .
 40 39 34
    [Codegen] vmovdqu    %xmm2, 0x20(%rsp)
[Codegen] .set .Llabel630, .
[Codegen] vmovdqu    %xmm1, 0x10(%rsp)
[Codegen] .set .Llabel636, .
[Codegen] vmovdqu    %xmm0, 0x0(%rsp)
42 = Elements.Elements [Codegen36
    75 = None.] movq       %rsp, %rax
DebugEnterGCUnsafeRegion
    [Codegen] andq       $0xfffffffffffffff0, %rsp
[Codegen] 73 = push       %rax
None.DebugEnterGCUnsafeRegion
[Codegen    43 = Int32.InitializedLength]  42
    76 = None.movabsq    $0x5c7edabc2c06, %rax
DebugLeaveGCUnsafeRegion
    44 = Int32.BoundsCheck 39 43
    [Codegen] 45 = Int32.SpectreMaskIndex 39subq       $8, %rsp
 43[Codegen
    46 = Value.LoadElement 42 45
    74] movq       %rax, %rdi
 = None.DebugLeaveGCUnsafeRegion
    47 = Int32.[Codegen] testb      $0xf, %spl
Add 26 39
[Codegen]    48 = None.Goto je         .Lfrom676 Block3
[Codegen] .set .Llabel676, .

  Blo[Codegen] int3
ck5:
    49 [Codegen= ] .set .Llabel677, .
None.Return 19[Codegen] 
.set .Lfrom676, .Llabel677
===== ../../../../Benchmarkers/prop_access.js:[Codegen] call       .Lfrom6822 =====

[Codegen] Current resuaddq       $8, %rsp
me point 75bb8cbd2898 details:
   [Codegen] pop        %rsp
 frame c[Codegen] .set .Llabel687, .
ount: 1
[Codegen] vmovdqu    0xe0(%rsp), %xmm14
  [Codegen] .set .Llabel696, .
[Codegen]   taken at block 0 entry
vmovdqu    0xd0(%rsp), %xmm13
[Codegen] .set .Llabel705, .
[Codegen]     pc: 75bb8e70a7d1 (script: 1970c7c73060, offsetvmovdqu    0xc0(%rsp), %xmm12
: 0)
    slot0: Constant#2
    slot1: Constant#[Codegen] .set .Llabel714, .
2
    slot2: Parameter#[Codegen] vmovdqu    0xb0(%rsp), %xmm11
0
 [Codegen] .set .Llabel723, .
[Codegen] vmovdqu    0xa0(%rsp), %xmm10
   slot3: Parameter#1
[Codegen] .set .Llabel732, .
[Codegen] vmovdqu    0x90(%rsp), %xmm9
[Codegen] .set .Llabel741, .
    slot4: Constant#2
    [Codegen] vmovdqu    0x80(%rsp), %xmm8
[Codegen]slot5: Constant#2 .set .Llabel750, .
[Codegen] vmovdqu    0x70(%rsp), %xmm7
[Codegen] .set .Llabel756, .
[Codegen] vmovdqu    0x60(%rsp), %xmm6
[
 Codegen] .set .Llabel762, .
[Codegen] vmovdqu    0x50(%rsp), %xmm5
[Codegen] .set .Llabel768, .
[Codegen] vmovdqu    0x40(%rsp), %xmm4
[Codegen] .set .Llabel774, .
[Codegen] vmovdqu    0x30(%rsp), %xmm3
[Codegen] .set .Llabel780, .
[Codegen] vmovdqu    0x20(%rsp), %xmm2
[Codegen] .set .Llabel786, .
[Codegen] vmovdqu    0x10(%rsp), %xmm1
[   slot6: Constant#2
Codegen] .set .Llabel792, .
[Codegen] vmovdqu    0x0(%rsp), %xmm0
[Codegen] addq       $240, %rsp
[Codegen] pop        %rax
[Codegen] pop        %rcx
[Codegen] pop        %rdx
[Codegen] pop        %rsi
[Codegen] pop        %rdi
[Codegen] pop        %r8
[Codegen] pop        %r9
[Codegen] pop        %r10
[Codegen] int3
[Codegen] emitFailurePath
[IonSnapshots] Gen[Codegen] .set .Llabel816, .
[Codegen] .set .Lfrom52, .Llabel816
[Codegen] .set .Lfrom29, .Llabel816
[Codegen] .set .Llabel816, .
[Codegen] movq       0x10(%rdi), %rdi
erating LIR r[Codegen] jmp        *0x0(%rdi)
[Codegen] .set .Llabel822, .
[Codegen] .set .Lfrom496, .Llabel822
[Codegen] jmp        .Lfrom827
ecover info 75bb8cbcaf90[Codegen] # BEGIN creators: BaselineCacheIRCompiler::compile/Assembler::finish
 from MIR (75bb8cbd2898)[Codegen] .balign 16, 0xf4   # hlt
[Codegen] jmp        *2(%rip)
[Codegen] ud2

[Codegen] .quad      0
[Codegen][IonSnapshots] Generating LIR snapshot 75bb8cbcafe8 from recover ( jmp        *2(%rip)
[Codegen] ud2
[Codegen] .quad      0
[Codegen] # END   creators: BaselineCacheIRCompiler::compile/Assembler::finish
75bb8cbcaf90)
[IonSnapshots] Assigning snapsh[Codegen] # END   creators: BaselineCacheIRCompiler::compile
ot 75bb8cbcafe8 to instruction 75bb8cbcb060 ([BaselineIC]   Attached Call CacheIR stub
osipoint)
{
  "AsmJS": 0,
  "Wasm": 0,
  "WasmLegacyExceptions": 0,
  "IsHTMLDDAFuse": 0,
  "OptimizeGetIteratorFuse": 0,
  "ThenableUse": 0,
  "ThenableUseProto": 0,
  "ThenableUseStandardProto": 0,
  "ThenableUseObjectProto": 0,
  "LegacyLangSubtag": 0,
  "ICStubTooLarge": 0,
  "ICStubOOM": 0,
  "ErrorStackGetter": 0,
  "ErrorStackGetterNoErrorData": 0,
  "ErrorStackSetter": 0,
  "ErrorStackSetterNonString": 0,
  "ErrorStackSetterNoErrorData": 0,
  "DateParse": 0,
  "DateParseImplDef": 0,
  "OptimizeArraySpeciesFuse": 0,
  "OptimizePromiseLookupFuse": 0,
  "IonBackend": 0,
  "PropertyKeyAccess": 2,
  "StrictlyEqual": 0,
  "GetProp": 0,
  "GetElem": 0,
  "ToNumeric": 0,
  "ToString": 0
}
Current resume point 75bb8cbd2f08 details:
    frame count: 1
    taken at block 1 entry
    pc: 75bb8e70a7dd (script: 1970c7c73060, offset: 12)
    slot0: Constant#9
    slot1: OsrReturnValue#10
    slot2: Parameter#11
    slot3: Parameter#12
    slot4: OsrValue#13
    slot5: OsrValue#14
    slot6: OsrValue#15
[IonSnapshots] Generating LIR recover info 75bb8cbcb640 from MIR (75bb8cbd2f08)
[IonSnapshots] Generating LIR snapshot 75bb8cbcb698 from recover (75bb8cbcb640)
[IonSnapshots] Assigning snapshot 75bb8cbcb698 to instruction 75bb8cbcb5c8 (unbox)
